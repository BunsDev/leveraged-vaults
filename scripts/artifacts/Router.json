{
  "abi": [
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "governance",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "views",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "initializeMarket",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "nTokenActions",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "batchAction",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "accountAction",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "erc1155",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "liquidateCurrency",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "liquidatefCash",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "cETH",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "treasury",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "calculationViews",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "vaultAccountAction",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "vaultAction",
              "type": "address"
            }
          ],
          "internalType": "struct Router.DeployedContracts",
          "name": "contracts",
          "type": "tuple"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "ACCOUNT_ACTION",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "BATCH_ACTION",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "CALCULATION_VIEWS",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ERC1155",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "GOVERNANCE",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "INITIALIZE_MARKET",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "LIQUIDATE_CURRENCY",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "LIQUIDATE_FCASH",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "NTOKEN_ACTIONS",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "TREASURY",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "VAULT_ACCOUNT_ACTION",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "VAULT_ACTION",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "VIEWS",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cETH",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "sig",
          "type": "bytes4"
        }
      ],
      "name": "getRouterImplementation",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "pauseRouter_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "pauseGuardian_",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pauseGuardian",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pauseRouter",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "24": "contracts/external/Router.sol",
    "63": "contracts/global/Constants.sol",
    "66": "contracts/global/StorageLayoutV1.sol",
    "68": "contracts/global/Types.sol"
  },
  "ast": {
    "absolutePath": "contracts/external/Router.sol",
    "exportedSymbols": {
      "ABDKMath64x64": [
        50961
      ],
      "AaveHandler": [
        30320
      ],
      "AccountBalance": [
        65886
      ],
      "AccountContext": [
        65805
      ],
      "AccountContextHandler": [
        27564
      ],
      "AggregatorInterface": [
        71192
      ],
      "AggregatorV2V3Interface": [
        67638
      ],
      "AggregatorV3Interface": [
        71238
      ],
      "AssetHandler": [
        43710
      ],
      "AssetRate": [
        34326
      ],
      "AssetRateAdapter": [
        67682
      ],
      "AssetRateParameters": [
        65701
      ],
      "AssetRateStorage": [
        65769
      ],
      "AssetStorageState": [
        65562
      ],
      "BalanceAction": [
        65583
      ],
      "BalanceActionWithTrades": [
        65599
      ],
      "BalanceHandler": [
        28967
      ],
      "BalanceState": [
        65694
      ],
      "BalanceStorage": [
        65829
      ],
      "BatchLend": [
        65570
      ],
      "Bitmap": [
        51302
      ],
      "BitmapAssetsHandler": [
        40739
      ],
      "CErc20Interface": [
        67972
      ],
      "CEtherInterface": [
        70135
      ],
      "CTokenInterface": [
        68302
      ],
      "CashGroup": [
        35605
      ],
      "CashGroupParameters": [
        65710
      ],
      "CashGroupSettings": [
        65794
      ],
      "CompoundHandler": [
        30510
      ],
      "Constants": [
        65059
      ],
      "Context": [
        71261
      ],
      "DateTime": [
        36244
      ],
      "Deployments": [
        66852
      ],
      "DepositActionType": [
        65557
      ],
      "ERC20": [
        68805
      ],
      "ETHRate": [
        65675
      ],
      "ETHRateStorage": [
        65764
      ],
      "FloatingPoint56": [
        51378
      ],
      "GenericToken": [
        30642
      ],
      "IAToken": [
        68827
      ],
      "IATokenFull": [
        68862
      ],
      "IEIP20NonStandard": [
        70628
      ],
      "IERC20": [
        68134
      ],
      "ILendingPool": [
        68944
      ],
      "INTokenAction": [
        66136
      ],
      "IRewarder": [
        67700
      ],
      "IScaledBalanceToken": [
        68852
      ],
      "IVaultAccountAction": [
        66430
      ],
      "IVaultAction": [
        66332
      ],
      "IVaultController": [
        66435
      ],
      "Incentives": [
        29156
      ],
      "LendingPoolStorage": [
        68868
      ],
      "LibStorage": [
        26747
      ],
      "LiquidationFactors": [
        65653
      ],
      "Market": [
        38158
      ],
      "MarketParameters": [
        65740
      ],
      "MarketStorage": [
        65849
      ],
      "MigrateIncentives": [
        1606
      ],
      "NotionalCalculations": [
        64793
      ],
      "NotionalGovernance": [
        66684
      ],
      "NotionalProxy": [
        65530
      ],
      "NotionalTreasury": [
        68056
      ],
      "NotionalViews": [
        67143
      ],
      "PortfolioAsset": [
        65723
      ],
      "PortfolioAssetStorage": [
        65861
      ],
      "PortfolioHandler": [
        42030
      ],
      "PortfolioState": [
        65664
      ],
      "RollVaultOpts": [
        65997
      ],
      "Router": [
        2803
      ],
      "SafeInt256": [
        51730
      ],
      "SafeMath": [
        64310
      ],
      "SettleAmount": [
        65604
      ],
      "SettlementRateStorage": [
        65836
      ],
      "StorageLayoutV1": [
        26801
      ],
      "Token": [
        65615
      ],
      "TokenHandler": [
        30077
      ],
      "TokenStorage": [
        65751
      ],
      "TokenType": [
        65542
      ],
      "TradeActionType": [
        65549
      ],
      "TransferAssets": [
        42261
      ],
      "VaultAccount": [
        65990
      ],
      "VaultAccountStorage": [
        65979
      ],
      "VaultBorrowCapacityStorage": [
        65914
      ],
      "VaultConfig": [
        65944
      ],
      "VaultConfigStorage": [
        65909
      ],
      "VaultSecondaryBorrowStorage": [
        65917
      ],
      "VaultState": [
        65972
      ],
      "VaultStateStorage": [
        65957
      ],
      "ifCashStorage": [
        65852
      ],
      "nERC1155Interface": [
        66845
      ],
      "nTokenCalculations": [
        38722
      ],
      "nTokenContext": [
        65820
      ],
      "nTokenHandler": [
        39748
      ],
      "nTokenMintAction": [
        16637
      ],
      "nTokenPortfolio": [
        65630
      ],
      "nTokenSupply": [
        40050
      ],
      "nTokenTotalSupplyStorage": [
        65875
      ],
      "nTokenTotalSupplyStorage_deprecated": [
        65868
      ]
    },
    "id": 2804,
    "license": "GPL-3.0-only",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1889,
        "literals": [
          "solidity",
          "=",
          "0.7",
          ".6"
        ],
        "nodeType": "PragmaDirective",
        "src": "41:23:24"
      },
      {
        "id": 1890,
        "literals": [
          "abicoder",
          "v2"
        ],
        "nodeType": "PragmaDirective",
        "src": "65:19:24"
      },
      {
        "absolutePath": "contracts/external/actions/nTokenMintAction.sol",
        "file": "./actions/nTokenMintAction.sol",
        "id": 1891,
        "nodeType": "ImportDirective",
        "scope": 2804,
        "sourceUnit": 16638,
        "src": "86:40:24",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/global/StorageLayoutV1.sol",
        "file": "../global/StorageLayoutV1.sol",
        "id": 1892,
        "nodeType": "ImportDirective",
        "scope": 2804,
        "sourceUnit": 26802,
        "src": "127:39:24",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/global/Types.sol",
        "file": "../global/Types.sol",
        "id": 1893,
        "nodeType": "ImportDirective",
        "scope": 2804,
        "sourceUnit": 65998,
        "src": "167:29:24",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/notional/INTokenAction.sol",
        "file": "../../interfaces/notional/INTokenAction.sol",
        "id": 1895,
        "nodeType": "ImportDirective",
        "scope": 2804,
        "sourceUnit": 66137,
        "src": "197:74:24",
        "symbolAliases": [
          {
            "foreign": {
              "id": 1894,
              "name": "INTokenAction",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "205:13:24",
              "typeDescriptions": {}
            }
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/notional/NotionalProxy.sol",
        "file": "../../interfaces/notional/NotionalProxy.sol",
        "id": 1896,
        "nodeType": "ImportDirective",
        "scope": 2804,
        "sourceUnit": 65531,
        "src": "272:53:24",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/notional/IVaultController.sol",
        "file": "../../interfaces/notional/IVaultController.sol",
        "id": 1899,
        "nodeType": "ImportDirective",
        "scope": 2804,
        "sourceUnit": 66436,
        "src": "326:97:24",
        "symbolAliases": [
          {
            "foreign": {
              "id": 1897,
              "name": "IVaultAction",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "334:12:24",
              "typeDescriptions": {}
            }
          },
          {
            "foreign": {
              "id": 1898,
              "name": "IVaultAccountAction",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "348:19:24",
              "typeDescriptions": {}
            }
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/notional/nERC1155Interface.sol",
        "file": "../../interfaces/notional/nERC1155Interface.sol",
        "id": 1901,
        "nodeType": "ImportDirective",
        "scope": 2804,
        "sourceUnit": 66846,
        "src": "424:82:24",
        "symbolAliases": [
          {
            "foreign": {
              "id": 1900,
              "name": "nERC1155Interface",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "432:17:24",
              "typeDescriptions": {}
            }
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/notional/NotionalGovernance.sol",
        "file": "../../interfaces/notional/NotionalGovernance.sol",
        "id": 1903,
        "nodeType": "ImportDirective",
        "scope": 2804,
        "sourceUnit": 66685,
        "src": "507:84:24",
        "symbolAliases": [
          {
            "foreign": {
              "id": 1902,
              "name": "NotionalGovernance",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "515:18:24",
              "typeDescriptions": {}
            }
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/notional/NotionalCalculations.sol",
        "file": "../../interfaces/notional/NotionalCalculations.sol",
        "id": 1905,
        "nodeType": "ImportDirective",
        "scope": 2804,
        "sourceUnit": 64794,
        "src": "592:88:24",
        "symbolAliases": [
          {
            "foreign": {
              "id": 1904,
              "name": "NotionalCalculations",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "600:20:24",
              "typeDescriptions": {}
            }
          }
        ],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1907,
              "name": "StorageLayoutV1",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 26801,
              "src": "1290:15:24",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_StorageLayoutV1_$26801",
                "typeString": "contract StorageLayoutV1"
              }
            },
            "id": 1908,
            "nodeType": "InheritanceSpecifier",
            "src": "1290:15:24"
          }
        ],
        "contractDependencies": [
          26801
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 1906,
          "nodeType": "StructuredDocumentation",
          "src": "682:588:24",
          "text": " @notice Sits behind an upgradeable proxy and routes methods to an appropriate implementation contract. All storage\n will sit inside the upgradeable proxy and this router will authorize the call and re-route the calls to implementing\n contracts.\n This pattern adds an additional hop between the proxy and the ultimate implementation contract, however, it also\n allows for atomic upgrades of the entire system. Individual implementation contracts will be deployed and then a\n new Router with the new hardcoded addresses will then be deployed and upgraded into place."
        },
        "fullyImplemented": true,
        "id": 2803,
        "linearizedBaseContracts": [
          2803,
          26801
        ],
        "name": "Router",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "14627834",
            "id": 1910,
            "mutability": "immutable",
            "name": "GOVERNANCE",
            "nodeType": "VariableDeclaration",
            "scope": 2803,
            "src": "1390:35:24",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1909,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1390:7:24",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "0c4e7935",
            "id": 1912,
            "mutability": "immutable",
            "name": "VIEWS",
            "nodeType": "VariableDeclaration",
            "scope": 2803,
            "src": "1431:30:24",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1911,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1431:7:24",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "dcc1a738",
            "id": 1914,
            "mutability": "immutable",
            "name": "INITIALIZE_MARKET",
            "nodeType": "VariableDeclaration",
            "scope": 2803,
            "src": "1467:42:24",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1913,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1467:7:24",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "15beeb93",
            "id": 1916,
            "mutability": "immutable",
            "name": "NTOKEN_ACTIONS",
            "nodeType": "VariableDeclaration",
            "scope": 2803,
            "src": "1515:39:24",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1915,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1515:7:24",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "6d7cdbbf",
            "id": 1918,
            "mutability": "immutable",
            "name": "BATCH_ACTION",
            "nodeType": "VariableDeclaration",
            "scope": 2803,
            "src": "1560:37:24",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1917,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1560:7:24",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "6009b8e6",
            "id": 1920,
            "mutability": "immutable",
            "name": "ACCOUNT_ACTION",
            "nodeType": "VariableDeclaration",
            "scope": 2803,
            "src": "1603:39:24",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1919,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1603:7:24",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "2d255471",
            "id": 1922,
            "mutability": "immutable",
            "name": "ERC1155",
            "nodeType": "VariableDeclaration",
            "scope": 2803,
            "src": "1648:32:24",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1921,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1648:7:24",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "2be75895",
            "id": 1924,
            "mutability": "immutable",
            "name": "LIQUIDATE_CURRENCY",
            "nodeType": "VariableDeclaration",
            "scope": 2803,
            "src": "1686:43:24",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1923,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1686:7:24",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "206109b5",
            "id": 1926,
            "mutability": "immutable",
            "name": "LIQUIDATE_FCASH",
            "nodeType": "VariableDeclaration",
            "scope": 2803,
            "src": "1735:40:24",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1925,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1735:7:24",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "a1b4d011",
            "id": 1928,
            "mutability": "immutable",
            "name": "cETH",
            "nodeType": "VariableDeclaration",
            "scope": 2803,
            "src": "1781:29:24",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1927,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1781:7:24",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "2d2c5565",
            "id": 1930,
            "mutability": "immutable",
            "name": "TREASURY",
            "nodeType": "VariableDeclaration",
            "scope": 2803,
            "src": "1816:33:24",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1929,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1816:7:24",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "72d27134",
            "id": 1932,
            "mutability": "immutable",
            "name": "CALCULATION_VIEWS",
            "nodeType": "VariableDeclaration",
            "scope": 2803,
            "src": "1855:42:24",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1931,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1855:7:24",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "ba6b7fc2",
            "id": 1934,
            "mutability": "immutable",
            "name": "VAULT_ACCOUNT_ACTION",
            "nodeType": "VariableDeclaration",
            "scope": 2803,
            "src": "1903:45:24",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1933,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1903:7:24",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "d8e310a4",
            "id": 1936,
            "mutability": "immutable",
            "name": "VAULT_ACTION",
            "nodeType": "VariableDeclaration",
            "scope": 2803,
            "src": "1954:37:24",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1935,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1954:7:24",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 1938,
            "mutability": "immutable",
            "name": "DEPLOYER",
            "nodeType": "VariableDeclaration",
            "scope": 2803,
            "src": "1997:34:24",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1937,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1997:7:24",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "canonicalName": "Router.DeployedContracts",
            "id": 1967,
            "members": [
              {
                "constant": false,
                "id": 1940,
                "mutability": "mutable",
                "name": "governance",
                "nodeType": "VariableDeclaration",
                "scope": 1967,
                "src": "2073:18:24",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 1939,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2073:7:24",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1942,
                "mutability": "mutable",
                "name": "views",
                "nodeType": "VariableDeclaration",
                "scope": 1967,
                "src": "2101:13:24",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 1941,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2101:7:24",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1944,
                "mutability": "mutable",
                "name": "initializeMarket",
                "nodeType": "VariableDeclaration",
                "scope": 1967,
                "src": "2124:24:24",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 1943,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2124:7:24",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1946,
                "mutability": "mutable",
                "name": "nTokenActions",
                "nodeType": "VariableDeclaration",
                "scope": 1967,
                "src": "2158:21:24",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 1945,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2158:7:24",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1948,
                "mutability": "mutable",
                "name": "batchAction",
                "nodeType": "VariableDeclaration",
                "scope": 1967,
                "src": "2189:19:24",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 1947,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2189:7:24",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1950,
                "mutability": "mutable",
                "name": "accountAction",
                "nodeType": "VariableDeclaration",
                "scope": 1967,
                "src": "2218:21:24",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 1949,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2218:7:24",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1952,
                "mutability": "mutable",
                "name": "erc1155",
                "nodeType": "VariableDeclaration",
                "scope": 1967,
                "src": "2249:15:24",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 1951,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2249:7:24",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1954,
                "mutability": "mutable",
                "name": "liquidateCurrency",
                "nodeType": "VariableDeclaration",
                "scope": 1967,
                "src": "2274:25:24",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 1953,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2274:7:24",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1956,
                "mutability": "mutable",
                "name": "liquidatefCash",
                "nodeType": "VariableDeclaration",
                "scope": 1967,
                "src": "2309:22:24",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 1955,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2309:7:24",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1958,
                "mutability": "mutable",
                "name": "cETH",
                "nodeType": "VariableDeclaration",
                "scope": 1967,
                "src": "2341:12:24",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 1957,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2341:7:24",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1960,
                "mutability": "mutable",
                "name": "treasury",
                "nodeType": "VariableDeclaration",
                "scope": 1967,
                "src": "2363:16:24",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 1959,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2363:7:24",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1962,
                "mutability": "mutable",
                "name": "calculationViews",
                "nodeType": "VariableDeclaration",
                "scope": 1967,
                "src": "2389:24:24",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 1961,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2389:7:24",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1964,
                "mutability": "mutable",
                "name": "vaultAccountAction",
                "nodeType": "VariableDeclaration",
                "scope": 1967,
                "src": "2423:26:24",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 1963,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2423:7:24",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1966,
                "mutability": "mutable",
                "name": "vaultAction",
                "nodeType": "VariableDeclaration",
                "scope": 1967,
                "src": "2459:19:24",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 1965,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2459:7:24",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "DeployedContracts",
            "nodeType": "StructDefinition",
            "scope": 2803,
            "src": "2038:447:24",
            "visibility": "public"
          },
          {
            "body": {
              "id": 2051,
              "nodeType": "Block",
              "src": "2553:818:24",
              "statements": [
                {
                  "expression": {
                    "id": 1975,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1972,
                      "name": "GOVERNANCE",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1910,
                      "src": "2563:10:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1973,
                        "name": "contracts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1969,
                        "src": "2576:9:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DeployedContracts_$1967_memory_ptr",
                          "typeString": "struct Router.DeployedContracts memory"
                        }
                      },
                      "id": 1974,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "governance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1940,
                      "src": "2576:20:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2563:33:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1976,
                  "nodeType": "ExpressionStatement",
                  "src": "2563:33:24"
                },
                {
                  "expression": {
                    "id": 1980,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1977,
                      "name": "VIEWS",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1912,
                      "src": "2606:5:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1978,
                        "name": "contracts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1969,
                        "src": "2614:9:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DeployedContracts_$1967_memory_ptr",
                          "typeString": "struct Router.DeployedContracts memory"
                        }
                      },
                      "id": 1979,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "views",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1942,
                      "src": "2614:15:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2606:23:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1981,
                  "nodeType": "ExpressionStatement",
                  "src": "2606:23:24"
                },
                {
                  "expression": {
                    "id": 1985,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1982,
                      "name": "INITIALIZE_MARKET",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1914,
                      "src": "2639:17:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1983,
                        "name": "contracts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1969,
                        "src": "2659:9:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DeployedContracts_$1967_memory_ptr",
                          "typeString": "struct Router.DeployedContracts memory"
                        }
                      },
                      "id": 1984,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initializeMarket",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1944,
                      "src": "2659:26:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2639:46:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1986,
                  "nodeType": "ExpressionStatement",
                  "src": "2639:46:24"
                },
                {
                  "expression": {
                    "id": 1990,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1987,
                      "name": "NTOKEN_ACTIONS",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1916,
                      "src": "2695:14:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1988,
                        "name": "contracts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1969,
                        "src": "2712:9:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DeployedContracts_$1967_memory_ptr",
                          "typeString": "struct Router.DeployedContracts memory"
                        }
                      },
                      "id": 1989,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "nTokenActions",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1946,
                      "src": "2712:23:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2695:40:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1991,
                  "nodeType": "ExpressionStatement",
                  "src": "2695:40:24"
                },
                {
                  "expression": {
                    "id": 1995,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1992,
                      "name": "BATCH_ACTION",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1918,
                      "src": "2745:12:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1993,
                        "name": "contracts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1969,
                        "src": "2760:9:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DeployedContracts_$1967_memory_ptr",
                          "typeString": "struct Router.DeployedContracts memory"
                        }
                      },
                      "id": 1994,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "batchAction",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1948,
                      "src": "2760:21:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2745:36:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1996,
                  "nodeType": "ExpressionStatement",
                  "src": "2745:36:24"
                },
                {
                  "expression": {
                    "id": 2000,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1997,
                      "name": "ACCOUNT_ACTION",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1920,
                      "src": "2791:14:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1998,
                        "name": "contracts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1969,
                        "src": "2808:9:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DeployedContracts_$1967_memory_ptr",
                          "typeString": "struct Router.DeployedContracts memory"
                        }
                      },
                      "id": 1999,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "accountAction",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1950,
                      "src": "2808:23:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2791:40:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2001,
                  "nodeType": "ExpressionStatement",
                  "src": "2791:40:24"
                },
                {
                  "expression": {
                    "id": 2005,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2002,
                      "name": "ERC1155",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1922,
                      "src": "2841:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 2003,
                        "name": "contracts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1969,
                        "src": "2851:9:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DeployedContracts_$1967_memory_ptr",
                          "typeString": "struct Router.DeployedContracts memory"
                        }
                      },
                      "id": 2004,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "erc1155",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1952,
                      "src": "2851:17:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2841:27:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2006,
                  "nodeType": "ExpressionStatement",
                  "src": "2841:27:24"
                },
                {
                  "expression": {
                    "id": 2010,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2007,
                      "name": "LIQUIDATE_CURRENCY",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1924,
                      "src": "2878:18:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 2008,
                        "name": "contracts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1969,
                        "src": "2899:9:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DeployedContracts_$1967_memory_ptr",
                          "typeString": "struct Router.DeployedContracts memory"
                        }
                      },
                      "id": 2009,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "liquidateCurrency",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1954,
                      "src": "2899:27:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2878:48:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2011,
                  "nodeType": "ExpressionStatement",
                  "src": "2878:48:24"
                },
                {
                  "expression": {
                    "id": 2015,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2012,
                      "name": "LIQUIDATE_FCASH",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1926,
                      "src": "2936:15:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 2013,
                        "name": "contracts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1969,
                        "src": "2954:9:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DeployedContracts_$1967_memory_ptr",
                          "typeString": "struct Router.DeployedContracts memory"
                        }
                      },
                      "id": 2014,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "liquidatefCash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1956,
                      "src": "2954:24:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2936:42:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2016,
                  "nodeType": "ExpressionStatement",
                  "src": "2936:42:24"
                },
                {
                  "expression": {
                    "id": 2020,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2017,
                      "name": "cETH",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1928,
                      "src": "2988:4:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 2018,
                        "name": "contracts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1969,
                        "src": "2995:9:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DeployedContracts_$1967_memory_ptr",
                          "typeString": "struct Router.DeployedContracts memory"
                        }
                      },
                      "id": 2019,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "cETH",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1958,
                      "src": "2995:14:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2988:21:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2021,
                  "nodeType": "ExpressionStatement",
                  "src": "2988:21:24"
                },
                {
                  "expression": {
                    "id": 2025,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2022,
                      "name": "TREASURY",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1930,
                      "src": "3019:8:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 2023,
                        "name": "contracts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1969,
                        "src": "3030:9:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DeployedContracts_$1967_memory_ptr",
                          "typeString": "struct Router.DeployedContracts memory"
                        }
                      },
                      "id": 2024,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "treasury",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1960,
                      "src": "3030:18:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3019:29:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2026,
                  "nodeType": "ExpressionStatement",
                  "src": "3019:29:24"
                },
                {
                  "expression": {
                    "id": 2030,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2027,
                      "name": "CALCULATION_VIEWS",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1932,
                      "src": "3058:17:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 2028,
                        "name": "contracts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1969,
                        "src": "3078:9:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DeployedContracts_$1967_memory_ptr",
                          "typeString": "struct Router.DeployedContracts memory"
                        }
                      },
                      "id": 2029,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "calculationViews",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1962,
                      "src": "3078:26:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3058:46:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2031,
                  "nodeType": "ExpressionStatement",
                  "src": "3058:46:24"
                },
                {
                  "expression": {
                    "id": 2035,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2032,
                      "name": "VAULT_ACCOUNT_ACTION",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1934,
                      "src": "3114:20:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 2033,
                        "name": "contracts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1969,
                        "src": "3137:9:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DeployedContracts_$1967_memory_ptr",
                          "typeString": "struct Router.DeployedContracts memory"
                        }
                      },
                      "id": 2034,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "vaultAccountAction",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1964,
                      "src": "3137:28:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3114:51:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2036,
                  "nodeType": "ExpressionStatement",
                  "src": "3114:51:24"
                },
                {
                  "expression": {
                    "id": 2040,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2037,
                      "name": "VAULT_ACTION",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1936,
                      "src": "3175:12:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 2038,
                        "name": "contracts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1969,
                        "src": "3190:9:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DeployedContracts_$1967_memory_ptr",
                          "typeString": "struct Router.DeployedContracts memory"
                        }
                      },
                      "id": 2039,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "vaultAction",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1966,
                      "src": "3190:21:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3175:36:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2041,
                  "nodeType": "ExpressionStatement",
                  "src": "3175:36:24"
                },
                {
                  "expression": {
                    "id": 2045,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2042,
                      "name": "DEPLOYER",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1938,
                      "src": "3222:8:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 2043,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "3233:3:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 2044,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "3233:10:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "3222:21:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2046,
                  "nodeType": "ExpressionStatement",
                  "src": "3222:21:24"
                },
                {
                  "expression": {
                    "id": 2049,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2047,
                      "name": "hasInitialized",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26758,
                      "src": "3343:14:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 2048,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3360:4:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3343:21:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2050,
                  "nodeType": "ExpressionStatement",
                  "src": "3343:21:24"
                }
              ]
            },
            "id": 2052,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1970,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1969,
                  "mutability": "mutable",
                  "name": "contracts",
                  "nodeType": "VariableDeclaration",
                  "scope": 2052,
                  "src": "2512:34:24",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_DeployedContracts_$1967_memory_ptr",
                    "typeString": "struct Router.DeployedContracts"
                  },
                  "typeName": {
                    "id": 1968,
                    "name": "DeployedContracts",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1967,
                    "src": "2512:17:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_DeployedContracts_$1967_storage_ptr",
                      "typeString": "struct Router.DeployedContracts"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2502:50:24"
            },
            "returnParameters": {
              "id": 1971,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2553:0:24"
            },
            "scope": 2803,
            "src": "2491:880:24",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2140,
              "nodeType": "Block",
              "src": "3466:1337:24",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 2068,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 2065,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 2062,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "3539:3:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 2063,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3539:10:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 2064,
                            "name": "DEPLOYER",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1938,
                            "src": "3553:8:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3539:22:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "id": 2067,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "3565:15:24",
                          "subExpression": {
                            "id": 2066,
                            "name": "hasInitialized",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 26758,
                            "src": "3566:14:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "3539:41:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2061,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3531:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2069,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3531:50:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2070,
                  "nodeType": "ExpressionStatement",
                  "src": "3531:50:24"
                },
                {
                  "expression": {
                    "id": 2074,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2071,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26760,
                      "src": "3715:5:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 2072,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "3723:3:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 2073,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "3723:10:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "3715:18:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2075,
                  "nodeType": "ExpressionStatement",
                  "src": "3715:18:24"
                },
                {
                  "assignments": [
                    2077,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2077,
                      "mutability": "mutable",
                      "name": "status",
                      "nodeType": "VariableDeclaration",
                      "scope": 2140,
                      "src": "3906:11:24",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 2076,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "3906:4:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 2119,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 2085,
                                "name": "NotionalGovernance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 66684,
                                "src": "4029:18:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_NotionalGovernance_$66684_$",
                                  "typeString": "type(contract NotionalGovernance)"
                                }
                              },
                              "id": 2086,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "listCurrency",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 66564,
                              "src": "4029:31:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_declaration_nonpayable$_t_struct$_TokenStorage_$65751_calldata_ptr_$_t_struct$_TokenStorage_$65751_calldata_ptr_$_t_contract$_AggregatorV2V3Interface_$67638_$_t_bool_$_t_uint8_$_t_uint8_$_t_uint8_$returns$_t_uint16_$",
                                "typeString": "function NotionalGovernance.listCurrency(struct TokenStorage calldata,struct TokenStorage calldata,contract AggregatorV2V3Interface,bool,uint8,uint8,uint8) returns (uint16)"
                              }
                            },
                            "id": 2087,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "4029:40:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 2089,
                                "name": "cETH",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1928,
                                "src": "4104:4:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "hexValue": "66616c7365",
                                "id": 2090,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4110:5:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "false"
                              },
                              {
                                "expression": {
                                  "id": 2091,
                                  "name": "TokenType",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 65542,
                                  "src": "4117:9:24",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_TokenType_$65542_$",
                                    "typeString": "type(enum TokenType)"
                                  }
                                },
                                "id": 2092,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "cETH",
                                "nodeType": "MemberAccess",
                                "src": "4117:14:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_TokenType_$65542",
                                  "typeString": "enum TokenType"
                                }
                              },
                              {
                                "expression": {
                                  "id": 2093,
                                  "name": "Constants",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 65059,
                                  "src": "4133:9:24",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_Constants_$65059_$",
                                    "typeString": "type(library Constants)"
                                  }
                                },
                                "id": 2094,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "CETH_DECIMAL_PLACES",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 64799,
                                "src": "4133:29:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              {
                                "hexValue": "30",
                                "id": 2095,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4164:1:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_enum$_TokenType_$65542",
                                  "typeString": "enum TokenType"
                                },
                                {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                },
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 2088,
                              "name": "TokenStorage",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 65751,
                              "src": "4091:12:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_TokenStorage_$65751_storage_ptr_$",
                                "typeString": "type(struct TokenStorage storage pointer)"
                              }
                            },
                            "id": 2096,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4091:75:24",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TokenStorage_$65751_memory_ptr",
                              "typeString": "struct TokenStorage memory"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 2100,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "4259:1:24",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 2099,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "4251:7:24",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 2098,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "4251:7:24",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 2101,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4251:10:24",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              {
                                "hexValue": "66616c7365",
                                "id": 2102,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4263:5:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "false"
                              },
                              {
                                "expression": {
                                  "id": 2103,
                                  "name": "TokenType",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 65542,
                                  "src": "4270:9:24",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_TokenType_$65542_$",
                                    "typeString": "type(enum TokenType)"
                                  }
                                },
                                "id": 2104,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "Ether",
                                "nodeType": "MemberAccess",
                                "src": "4270:15:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_TokenType_$65542",
                                  "typeString": "enum TokenType"
                                }
                              },
                              {
                                "expression": {
                                  "id": 2105,
                                  "name": "Constants",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 65059,
                                  "src": "4287:9:24",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_Constants_$65059_$",
                                    "typeString": "type(library Constants)"
                                  }
                                },
                                "id": 2106,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "ETH_DECIMAL_PLACES",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 64811,
                                "src": "4287:28:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              {
                                "hexValue": "30",
                                "id": 2107,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4317:1:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_enum$_TokenType_$65542",
                                  "typeString": "enum TokenType"
                                },
                                {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                },
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 2097,
                              "name": "TokenStorage",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 65751,
                              "src": "4238:12:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_TokenStorage_$65751_storage_ptr_$",
                                "typeString": "type(struct TokenStorage storage pointer)"
                              }
                            },
                            "id": 2108,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4238:81:24",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TokenStorage_$65751_memory_ptr",
                              "typeString": "struct TokenStorage memory"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 2111,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4349:1:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 2110,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4341:7:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 2109,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "4341:7:24",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 2112,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4341:10:24",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "hexValue": "66616c7365",
                            "id": 2113,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4373:5:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          {
                            "hexValue": "313333",
                            "id": 2114,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4400:3:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_133_by_1",
                              "typeString": "int_const 133"
                            },
                            "value": "133"
                          },
                          {
                            "hexValue": "3735",
                            "id": 2115,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4460:2:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_75_by_1",
                              "typeString": "int_const 75"
                            },
                            "value": "75"
                          },
                          {
                            "hexValue": "313038",
                            "id": 2116,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4500:3:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_108_by_1",
                              "typeString": "int_const 108"
                            },
                            "value": "108"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_struct$_TokenStorage_$65751_memory_ptr",
                              "typeString": "struct TokenStorage memory"
                            },
                            {
                              "typeIdentifier": "t_struct$_TokenStorage_$65751_memory_ptr",
                              "typeString": "struct TokenStorage memory"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_rational_133_by_1",
                              "typeString": "int_const 133"
                            },
                            {
                              "typeIdentifier": "t_rational_75_by_1",
                              "typeString": "int_const 75"
                            },
                            {
                              "typeIdentifier": "t_rational_108_by_1",
                              "typeString": "int_const 108"
                            }
                          ],
                          "expression": {
                            "id": 2083,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "3985:3:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 2084,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "3985:22:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 2117,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3985:564:24",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 2080,
                            "name": "GOVERNANCE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1910,
                            "src": "3943:10:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 2079,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3935:7:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2078,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3935:7:24",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2081,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3935:19:24",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 2082,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "delegatecall",
                      "nodeType": "MemberAccess",
                      "src": "3935:32:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) returns (bool,bytes memory)"
                      }
                    },
                    "id": 2118,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3935:628:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3905:658:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2121,
                        "name": "status",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2077,
                        "src": "4581:6:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2120,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4573:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2122,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4573:15:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2123,
                  "nodeType": "ExpressionStatement",
                  "src": "4573:15:24"
                },
                {
                  "expression": {
                    "id": 2126,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2124,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26760,
                      "src": "4599:5:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2125,
                      "name": "owner_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2054,
                      "src": "4607:6:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4599:14:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2127,
                  "nodeType": "ExpressionStatement",
                  "src": "4599:14:24"
                },
                {
                  "expression": {
                    "id": 2130,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2128,
                      "name": "pauseRouter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26762,
                      "src": "4697:11:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2129,
                      "name": "pauseRouter_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2056,
                      "src": "4711:12:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4697:26:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2131,
                  "nodeType": "ExpressionStatement",
                  "src": "4697:26:24"
                },
                {
                  "expression": {
                    "id": 2134,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2132,
                      "name": "pauseGuardian",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26764,
                      "src": "4733:13:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2133,
                      "name": "pauseGuardian_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2058,
                      "src": "4749:14:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4733:30:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2135,
                  "nodeType": "ExpressionStatement",
                  "src": "4733:30:24"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 2138,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2136,
                      "name": "hasInitialized",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26758,
                      "src": "4774:14:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "74727565",
                      "id": 2137,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4792:4:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "4774:22:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2139,
                  "nodeType": "ExpressionStatement",
                  "src": "4774:22:24"
                }
              ]
            },
            "functionSelector": "c0c53b8b",
            "id": 2141,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "initialize",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2059,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2054,
                  "mutability": "mutable",
                  "name": "owner_",
                  "nodeType": "VariableDeclaration",
                  "scope": 2141,
                  "src": "3397:14:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2053,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3397:7:24",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2056,
                  "mutability": "mutable",
                  "name": "pauseRouter_",
                  "nodeType": "VariableDeclaration",
                  "scope": 2141,
                  "src": "3413:20:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2055,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3413:7:24",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2058,
                  "mutability": "mutable",
                  "name": "pauseGuardian_",
                  "nodeType": "VariableDeclaration",
                  "scope": 2141,
                  "src": "3435:22:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2057,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3435:7:24",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3396:62:24"
            },
            "returnParameters": {
              "id": 2060,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3466:0:24"
            },
            "scope": 2803,
            "src": "3377:1426:24",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2782,
              "nodeType": "Block",
              "src": "5044:7809:24",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 2171,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 2165,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 2159,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          },
                          "id": 2153,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2149,
                            "name": "sig",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2144,
                            "src": "5071:3:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "expression": {
                                "id": 2150,
                                "name": "NotionalProxy",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 65530,
                                "src": "5078:13:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_NotionalProxy_$65530_$",
                                  "typeString": "type(contract NotionalProxy)"
                                }
                              },
                              "id": 2151,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "batchBalanceAction",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 65358,
                              "src": "5078:32:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_declaration_payable$_t_address_$_t_array$_t_struct$_BalanceAction_$65583_calldata_ptr_$dyn_calldata_ptr_$returns$__$",
                                "typeString": "function NotionalProxy.batchBalanceAction(address,struct BalanceAction calldata[] calldata) payable"
                              }
                            },
                            "id": 2152,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "5078:41:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          "src": "5071:48:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          },
                          "id": 2158,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2154,
                            "name": "sig",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2144,
                            "src": "5135:3:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "expression": {
                                "id": 2155,
                                "name": "NotionalProxy",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 65530,
                                "src": "5142:13:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_NotionalProxy_$65530_$",
                                  "typeString": "type(contract NotionalProxy)"
                                }
                              },
                              "id": 2156,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "batchBalanceAndTradeAction",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 65366,
                              "src": "5142:40:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_declaration_payable$_t_address_$_t_array$_t_struct$_BalanceActionWithTrades_$65599_calldata_ptr_$dyn_calldata_ptr_$returns$__$",
                                "typeString": "function NotionalProxy.batchBalanceAndTradeAction(address,struct BalanceActionWithTrades calldata[] calldata) payable"
                              }
                            },
                            "id": 2157,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "5142:49:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          "src": "5135:56:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "5071:120:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "||",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "id": 2164,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2160,
                          "name": "sig",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2144,
                          "src": "5207:3:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "expression": {
                              "id": 2161,
                              "name": "NotionalProxy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 65530,
                              "src": "5214:13:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_NotionalProxy_$65530_$",
                                "typeString": "type(contract NotionalProxy)"
                              }
                            },
                            "id": 2162,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "batchBalanceAndTradeActionWithCallback",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 65376,
                            "src": "5214:52:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_declaration_payable$_t_address_$_t_array$_t_struct$_BalanceActionWithTrades_$65599_calldata_ptr_$dyn_calldata_ptr_$_t_bytes_calldata_ptr_$returns$__$",
                              "typeString": "function NotionalProxy.batchBalanceAndTradeActionWithCallback(address,struct BalanceActionWithTrades calldata[] calldata,bytes calldata) payable"
                            }
                          },
                          "id": 2163,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "selector",
                          "nodeType": "MemberAccess",
                          "src": "5214:61:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "src": "5207:68:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "5071:204:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      },
                      "id": 2170,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 2166,
                        "name": "sig",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2144,
                        "src": "5291:3:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "expression": {
                          "expression": {
                            "id": 2167,
                            "name": "NotionalProxy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 65530,
                            "src": "5298:13:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_NotionalProxy_$65530_$",
                              "typeString": "type(contract NotionalProxy)"
                            }
                          },
                          "id": 2168,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "batchLend",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 65384,
                          "src": "5298:23:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_array$_t_struct$_BatchLend_$65570_calldata_ptr_$dyn_calldata_ptr_$returns$__$",
                            "typeString": "function NotionalProxy.batchLend(address,struct BatchLend calldata[] calldata)"
                          }
                        },
                        "id": 2169,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "selector",
                        "nodeType": "MemberAccess",
                        "src": "5298:32:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "src": "5291:39:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "5071:259:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 2215,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 2209,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 2203,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 2197,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 2191,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "id": 2185,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  },
                                  "id": 2179,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 2175,
                                    "name": "sig",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2144,
                                    "src": "5408:3:24",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "expression": {
                                      "expression": {
                                        "id": 2176,
                                        "name": "IVaultAccountAction",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 66430,
                                        "src": "5415:19:24",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_contract$_IVaultAccountAction_$66430_$",
                                          "typeString": "type(contract IVaultAccountAction)"
                                        }
                                      },
                                      "id": 2177,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberName": "enterVault",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 66352,
                                      "src": "5415:30:24",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bool_$_t_uint256_$_t_uint32_$_t_bytes_calldata_ptr_$returns$__$",
                                        "typeString": "function IVaultAccountAction.enterVault(address,address,uint256,uint256,bool,uint256,uint32,bytes calldata)"
                                      }
                                    },
                                    "id": 2178,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberName": "selector",
                                    "nodeType": "MemberAccess",
                                    "src": "5415:39:24",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    }
                                  },
                                  "src": "5408:46:24",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "||",
                                "rightExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  },
                                  "id": 2184,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 2180,
                                    "name": "sig",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2144,
                                    "src": "5470:3:24",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "expression": {
                                      "expression": {
                                        "id": 2181,
                                        "name": "IVaultAccountAction",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 66430,
                                        "src": "5477:19:24",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_contract$_IVaultAccountAction_$66430_$",
                                          "typeString": "type(contract IVaultAccountAction)"
                                        }
                                      },
                                      "id": 2182,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberName": "rollVaultPosition",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 66366,
                                      "src": "5477:37:24",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_struct$_RollVaultOpts_$65997_calldata_ptr_$returns$__$",
                                        "typeString": "function IVaultAccountAction.rollVaultPosition(address,address,uint256,uint256,struct RollVaultOpts calldata)"
                                      }
                                    },
                                    "id": 2183,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberName": "selector",
                                    "nodeType": "MemberAccess",
                                    "src": "5477:46:24",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    }
                                  },
                                  "src": "5470:53:24",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "src": "5408:115:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "||",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                },
                                "id": 2190,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 2186,
                                  "name": "sig",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2144,
                                  "src": "5539:3:24",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "expression": {
                                    "expression": {
                                      "id": 2187,
                                      "name": "IVaultAccountAction",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 66430,
                                      "src": "5546:19:24",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_IVaultAccountAction_$66430_$",
                                        "typeString": "type(contract IVaultAccountAction)"
                                      }
                                    },
                                    "id": 2188,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberName": "exitVault",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 66384,
                                    "src": "5546:29:24",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint32_$_t_bool_$_t_bytes_calldata_ptr_$returns$__$",
                                      "typeString": "function IVaultAccountAction.exitVault(address,address,uint256,uint256,uint32,bool,bytes calldata)"
                                    }
                                  },
                                  "id": 2189,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "selector",
                                  "nodeType": "MemberAccess",
                                  "src": "5546:38:24",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  }
                                },
                                "src": "5539:45:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "5408:176:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "||",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              },
                              "id": 2196,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2192,
                                "name": "sig",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2144,
                                "src": "5600:3:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "expression": {
                                    "id": 2193,
                                    "name": "IVaultAccountAction",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 66430,
                                    "src": "5607:19:24",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_IVaultAccountAction_$66430_$",
                                      "typeString": "type(contract IVaultAccountAction)"
                                    }
                                  },
                                  "id": 2194,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "deleverageAccount",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 66400,
                                  "src": "5607:37:24",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_uint256_$",
                                    "typeString": "function IVaultAccountAction.deleverageAccount(address,address,address,uint256,bytes calldata) returns (uint256)"
                                  }
                                },
                                "id": 2195,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "selector",
                                "nodeType": "MemberAccess",
                                "src": "5607:46:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                }
                              },
                              "src": "5600:53:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "5408:245:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            "id": 2202,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 2198,
                              "name": "sig",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2144,
                              "src": "5669:3:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "expression": {
                                "expression": {
                                  "id": 2199,
                                  "name": "IVaultAccountAction",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 66430,
                                  "src": "5676:19:24",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IVaultAccountAction_$66430_$",
                                    "typeString": "type(contract IVaultAccountAction)"
                                  }
                                },
                                "id": 2200,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "getVaultAccount",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 66409,
                                "src": "5676:35:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_declaration_view$_t_address_$_t_address_$returns$_t_struct$_VaultAccount_$65990_memory_ptr_$",
                                  "typeString": "function IVaultAccountAction.getVaultAccount(address,address) view returns (struct VaultAccount memory)"
                                }
                              },
                              "id": 2201,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "selector",
                              "nodeType": "MemberAccess",
                              "src": "5676:44:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            },
                            "src": "5669:51:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "5408:312:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          },
                          "id": 2208,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2204,
                            "name": "sig",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2144,
                            "src": "5736:3:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "expression": {
                                "id": 2205,
                                "name": "IVaultAccountAction",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 66430,
                                "src": "5743:19:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IVaultAccountAction_$66430_$",
                                  "typeString": "type(contract IVaultAccountAction)"
                                }
                              },
                              "id": 2206,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "getVaultAccountMaturity",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 66418,
                              "src": "5743:43:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_declaration_view$_t_address_$_t_address_$returns$_t_uint256_$",
                                "typeString": "function IVaultAccountAction.getVaultAccountMaturity(address,address) view returns (uint256)"
                              }
                            },
                            "id": 2207,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "5743:52:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          "src": "5736:59:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "5408:387:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "||",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "id": 2214,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2210,
                          "name": "sig",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2144,
                          "src": "5811:3:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "expression": {
                              "id": 2211,
                              "name": "IVaultAccountAction",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 66430,
                              "src": "5818:19:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IVaultAccountAction_$66430_$",
                                "typeString": "type(contract IVaultAccountAction)"
                              }
                            },
                            "id": 2212,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "getVaultAccountCollateralRatio",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 66429,
                            "src": "5818:50:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_declaration_view$_t_address_$_t_address_$returns$_t_int256_$_t_int256_$",
                              "typeString": "function IVaultAccountAction.getVaultAccountCollateralRatio(address,address) view returns (int256,int256)"
                            }
                          },
                          "id": 2213,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "selector",
                          "nodeType": "MemberAccess",
                          "src": "5818:59:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "src": "5811:66:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "5408:469:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 2253,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 2247,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 2241,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 2235,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "id": 2229,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  },
                                  "id": 2223,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 2219,
                                    "name": "sig",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2144,
                                    "src": "5963:3:24",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "expression": {
                                      "expression": {
                                        "id": 2220,
                                        "name": "NotionalProxy",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 65530,
                                        "src": "5970:13:24",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_contract$_NotionalProxy_$65530_$",
                                          "typeString": "type(contract NotionalProxy)"
                                        }
                                      },
                                      "id": 2221,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberName": "depositUnderlyingToken",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 65327,
                                      "src": "5970:36:24",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_declaration_payable$_t_address_$_t_uint16_$_t_uint256_$returns$_t_uint256_$",
                                        "typeString": "function NotionalProxy.depositUnderlyingToken(address,uint16,uint256) payable returns (uint256)"
                                      }
                                    },
                                    "id": 2222,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberName": "selector",
                                    "nodeType": "MemberAccess",
                                    "src": "5970:45:24",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    }
                                  },
                                  "src": "5963:52:24",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "||",
                                "rightExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  },
                                  "id": 2228,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 2224,
                                    "name": "sig",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2144,
                                    "src": "6031:3:24",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "expression": {
                                      "expression": {
                                        "id": 2225,
                                        "name": "NotionalProxy",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 65530,
                                        "src": "6038:13:24",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_contract$_NotionalProxy_$65530_$",
                                          "typeString": "type(contract NotionalProxy)"
                                        }
                                      },
                                      "id": 2226,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberName": "depositAssetToken",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 65338,
                                      "src": "6038:31:24",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_uint16_$_t_uint256_$returns$_t_uint256_$",
                                        "typeString": "function NotionalProxy.depositAssetToken(address,uint16,uint256) returns (uint256)"
                                      }
                                    },
                                    "id": 2227,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberName": "selector",
                                    "nodeType": "MemberAccess",
                                    "src": "6038:40:24",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    }
                                  },
                                  "src": "6031:47:24",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "src": "5963:115:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "||",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                },
                                "id": 2234,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 2230,
                                  "name": "sig",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2144,
                                  "src": "6094:3:24",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "expression": {
                                    "expression": {
                                      "id": 2231,
                                      "name": "NotionalProxy",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 65530,
                                      "src": "6101:13:24",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_NotionalProxy_$65530_$",
                                        "typeString": "type(contract NotionalProxy)"
                                      }
                                    },
                                    "id": 2232,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberName": "withdraw",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 65349,
                                    "src": "6101:22:24",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_declaration_nonpayable$_t_uint16_$_t_uint88_$_t_bool_$returns$_t_uint256_$",
                                      "typeString": "function NotionalProxy.withdraw(uint16,uint88,bool) returns (uint256)"
                                    }
                                  },
                                  "id": 2233,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "selector",
                                  "nodeType": "MemberAccess",
                                  "src": "6101:31:24",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  }
                                },
                                "src": "6094:38:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "5963:169:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "||",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              },
                              "id": 2240,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2236,
                                "name": "sig",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2144,
                                "src": "6148:3:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "expression": {
                                    "id": 2237,
                                    "name": "NotionalProxy",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 65530,
                                    "src": "6155:13:24",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_NotionalProxy_$65530_$",
                                      "typeString": "type(contract NotionalProxy)"
                                    }
                                  },
                                  "id": 2238,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "settleAccount",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 65316,
                                  "src": "6155:27:24",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$returns$__$",
                                    "typeString": "function NotionalProxy.settleAccount(address)"
                                  }
                                },
                                "id": 2239,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "selector",
                                "nodeType": "MemberAccess",
                                "src": "6155:36:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                }
                              },
                              "src": "6148:43:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "5963:228:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            "id": 2246,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 2242,
                              "name": "sig",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2144,
                              "src": "6207:3:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "expression": {
                                "expression": {
                                  "id": 2243,
                                  "name": "NotionalProxy",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 65530,
                                  "src": "6214:13:24",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_NotionalProxy_$65530_$",
                                    "typeString": "type(contract NotionalProxy)"
                                  }
                                },
                                "id": 2244,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "nTokenRedeem",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 65305,
                                "src": "6214:26:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_uint16_$_t_uint96_$_t_bool_$_t_bool_$returns$_t_int256_$",
                                  "typeString": "function NotionalProxy.nTokenRedeem(address,uint16,uint96,bool,bool) returns (int256)"
                                }
                              },
                              "id": 2245,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "selector",
                              "nodeType": "MemberAccess",
                              "src": "6214:35:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            },
                            "src": "6207:42:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "5963:286:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          },
                          "id": 2252,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2248,
                            "name": "sig",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2144,
                            "src": "6265:3:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "expression": {
                                "id": 2249,
                                "name": "NotionalProxy",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 65530,
                                "src": "6272:13:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_NotionalProxy_$65530_$",
                                  "typeString": "type(contract NotionalProxy)"
                                }
                              },
                              "id": 2250,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "enableBitmapCurrency",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 65311,
                              "src": "6272:34:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_declaration_nonpayable$_t_uint16_$returns$__$",
                                "typeString": "function NotionalProxy.enableBitmapCurrency(uint16)"
                              }
                            },
                            "id": 2251,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "6272:43:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          "src": "6265:50:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "5963:352:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseBody": {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 2321,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 2315,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 2309,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "id": 2303,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "id": 2297,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    "id": 2291,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      },
                                      "id": 2285,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "commonType": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        },
                                        "id": 2279,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "commonType": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          },
                                          "id": 2273,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "commonType": {
                                              "typeIdentifier": "t_bool",
                                              "typeString": "bool"
                                            },
                                            "id": 2267,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "commonType": {
                                                "typeIdentifier": "t_bytes4",
                                                "typeString": "bytes4"
                                              },
                                              "id": 2261,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftExpression": {
                                                "id": 2257,
                                                "name": "sig",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 2144,
                                                "src": "6395:3:24",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_bytes4",
                                                  "typeString": "bytes4"
                                                }
                                              },
                                              "nodeType": "BinaryOperation",
                                              "operator": "==",
                                              "rightExpression": {
                                                "expression": {
                                                  "expression": {
                                                    "id": 2258,
                                                    "name": "nERC1155Interface",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 66845,
                                                    "src": "6402:17:24",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_type$_t_contract$_nERC1155Interface_$66845_$",
                                                      "typeString": "type(contract nERC1155Interface)"
                                                    }
                                                  },
                                                  "id": 2259,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": true,
                                                  "lValueRequested": false,
                                                  "memberName": "supportsInterface",
                                                  "nodeType": "MemberAccess",
                                                  "referencedDeclaration": 66735,
                                                  "src": "6402:35:24",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_function_declaration_pure$_t_bytes4_$returns$_t_bool_$",
                                                    "typeString": "function nERC1155Interface.supportsInterface(bytes4) pure returns (bool)"
                                                  }
                                                },
                                                "id": 2260,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "lValueRequested": false,
                                                "memberName": "selector",
                                                "nodeType": "MemberAccess",
                                                "src": "6402:44:24",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_bytes4",
                                                  "typeString": "bytes4"
                                                }
                                              },
                                              "src": "6395:51:24",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "||",
                                            "rightExpression": {
                                              "commonType": {
                                                "typeIdentifier": "t_bytes4",
                                                "typeString": "bytes4"
                                              },
                                              "id": 2266,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftExpression": {
                                                "id": 2262,
                                                "name": "sig",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 2144,
                                                "src": "6462:3:24",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_bytes4",
                                                  "typeString": "bytes4"
                                                }
                                              },
                                              "nodeType": "BinaryOperation",
                                              "operator": "==",
                                              "rightExpression": {
                                                "expression": {
                                                  "expression": {
                                                    "id": 2263,
                                                    "name": "nERC1155Interface",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 66845,
                                                    "src": "6469:17:24",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_type$_t_contract$_nERC1155Interface_$66845_$",
                                                      "typeString": "type(contract nERC1155Interface)"
                                                    }
                                                  },
                                                  "id": 2264,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": true,
                                                  "lValueRequested": false,
                                                  "memberName": "balanceOf",
                                                  "nodeType": "MemberAccess",
                                                  "referencedDeclaration": 66744,
                                                  "src": "6469:27:24",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_function_declaration_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                                                    "typeString": "function nERC1155Interface.balanceOf(address,uint256) view returns (uint256)"
                                                  }
                                                },
                                                "id": 2265,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "lValueRequested": false,
                                                "memberName": "selector",
                                                "nodeType": "MemberAccess",
                                                "src": "6469:36:24",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_bytes4",
                                                  "typeString": "bytes4"
                                                }
                                              },
                                              "src": "6462:43:24",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                              }
                                            },
                                            "src": "6395:110:24",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bool",
                                              "typeString": "bool"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "||",
                                          "rightExpression": {
                                            "commonType": {
                                              "typeIdentifier": "t_bytes4",
                                              "typeString": "bytes4"
                                            },
                                            "id": 2272,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "id": 2268,
                                              "name": "sig",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 2144,
                                              "src": "6521:3:24",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_bytes4",
                                                "typeString": "bytes4"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "==",
                                            "rightExpression": {
                                              "expression": {
                                                "expression": {
                                                  "id": 2269,
                                                  "name": "nERC1155Interface",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 66845,
                                                  "src": "6528:17:24",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_contract$_nERC1155Interface_$66845_$",
                                                    "typeString": "type(contract nERC1155Interface)"
                                                  }
                                                },
                                                "id": 2270,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "lValueRequested": false,
                                                "memberName": "balanceOfBatch",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 66756,
                                                "src": "6528:32:24",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_function_declaration_view$_t_array$_t_address_$dyn_calldata_ptr_$_t_array$_t_uint256_$dyn_calldata_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                                                  "typeString": "function nERC1155Interface.balanceOfBatch(address[] calldata,uint256[] calldata) view returns (uint256[] memory)"
                                                }
                                              },
                                              "id": 2271,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "memberName": "selector",
                                              "nodeType": "MemberAccess",
                                              "src": "6528:41:24",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_bytes4",
                                                "typeString": "bytes4"
                                              }
                                            },
                                            "src": "6521:48:24",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bool",
                                              "typeString": "bool"
                                            }
                                          },
                                          "src": "6395:174:24",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "||",
                                        "rightExpression": {
                                          "commonType": {
                                            "typeIdentifier": "t_bytes4",
                                            "typeString": "bytes4"
                                          },
                                          "id": 2278,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "id": 2274,
                                            "name": "sig",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2144,
                                            "src": "6585:3:24",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bytes4",
                                              "typeString": "bytes4"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "==",
                                          "rightExpression": {
                                            "expression": {
                                              "expression": {
                                                "id": 2275,
                                                "name": "nERC1155Interface",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 66845,
                                                "src": "6592:17:24",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_type$_t_contract$_nERC1155Interface_$66845_$",
                                                  "typeString": "type(contract nERC1155Interface)"
                                                }
                                              },
                                              "id": 2276,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "memberName": "signedBalanceOf",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": 66765,
                                              "src": "6592:33:24",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_function_declaration_view$_t_address_$_t_uint256_$returns$_t_int256_$",
                                                "typeString": "function nERC1155Interface.signedBalanceOf(address,uint256) view returns (int256)"
                                              }
                                            },
                                            "id": 2277,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "memberName": "selector",
                                            "nodeType": "MemberAccess",
                                            "src": "6592:42:24",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bytes4",
                                              "typeString": "bytes4"
                                            }
                                          },
                                          "src": "6585:49:24",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          }
                                        },
                                        "src": "6395:239:24",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "||",
                                      "rightExpression": {
                                        "commonType": {
                                          "typeIdentifier": "t_bytes4",
                                          "typeString": "bytes4"
                                        },
                                        "id": 2284,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 2280,
                                          "name": "sig",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2144,
                                          "src": "6650:3:24",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes4",
                                            "typeString": "bytes4"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "==",
                                        "rightExpression": {
                                          "expression": {
                                            "expression": {
                                              "id": 2281,
                                              "name": "nERC1155Interface",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 66845,
                                              "src": "6657:17:24",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_contract$_nERC1155Interface_$66845_$",
                                                "typeString": "type(contract nERC1155Interface)"
                                              }
                                            },
                                            "id": 2282,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "memberName": "signedBalanceOfBatch",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 66777,
                                            "src": "6657:38:24",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_declaration_view$_t_array$_t_address_$dyn_calldata_ptr_$_t_array$_t_uint256_$dyn_calldata_ptr_$returns$_t_array$_t_int256_$dyn_memory_ptr_$",
                                              "typeString": "function nERC1155Interface.signedBalanceOfBatch(address[] calldata,uint256[] calldata) view returns (int256[] memory)"
                                            }
                                          },
                                          "id": 2283,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "memberName": "selector",
                                          "nodeType": "MemberAccess",
                                          "src": "6657:47:24",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes4",
                                            "typeString": "bytes4"
                                          }
                                        },
                                        "src": "6650:54:24",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "src": "6395:309:24",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "||",
                                    "rightExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      },
                                      "id": 2290,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 2286,
                                        "name": "sig",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2144,
                                        "src": "6720:3:24",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes4",
                                          "typeString": "bytes4"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "==",
                                      "rightExpression": {
                                        "expression": {
                                          "expression": {
                                            "id": 2287,
                                            "name": "nERC1155Interface",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 66845,
                                            "src": "6727:17:24",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_contract$_nERC1155Interface_$66845_$",
                                              "typeString": "type(contract nERC1155Interface)"
                                            }
                                          },
                                          "id": 2288,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "memberName": "safeTransferFrom",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 66806,
                                          "src": "6727:34:24",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_declaration_payable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_calldata_ptr_$returns$__$",
                                            "typeString": "function nERC1155Interface.safeTransferFrom(address,address,uint256,uint256,bytes calldata) payable"
                                          }
                                        },
                                        "id": 2289,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberName": "selector",
                                        "nodeType": "MemberAccess",
                                        "src": "6727:43:24",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes4",
                                          "typeString": "bytes4"
                                        }
                                      },
                                      "src": "6720:50:24",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "src": "6395:375:24",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "||",
                                  "rightExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    },
                                    "id": 2296,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 2292,
                                      "name": "sig",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2144,
                                      "src": "6786:3:24",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "expression": {
                                        "expression": {
                                          "id": 2293,
                                          "name": "nERC1155Interface",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 66845,
                                          "src": "6793:17:24",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_contract$_nERC1155Interface_$66845_$",
                                            "typeString": "type(contract nERC1155Interface)"
                                          }
                                        },
                                        "id": 2294,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberName": "safeBatchTransferFrom",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 66821,
                                        "src": "6793:39:24",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_declaration_payable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_bytes_calldata_ptr_$returns$__$",
                                          "typeString": "function nERC1155Interface.safeBatchTransferFrom(address,address,uint256[] calldata,uint256[] calldata,bytes calldata) payable"
                                        }
                                      },
                                      "id": 2295,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberName": "selector",
                                      "nodeType": "MemberAccess",
                                      "src": "6793:48:24",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    },
                                    "src": "6786:55:24",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "src": "6395:446:24",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "||",
                                "rightExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  },
                                  "id": 2302,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 2298,
                                    "name": "sig",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2144,
                                    "src": "6857:3:24",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "expression": {
                                      "expression": {
                                        "id": 2299,
                                        "name": "nERC1155Interface",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 66845,
                                        "src": "6864:17:24",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_contract$_nERC1155Interface_$66845_$",
                                          "typeString": "type(contract nERC1155Interface)"
                                        }
                                      },
                                      "id": 2300,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberName": "decodeToAssets",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 66833,
                                      "src": "6864:32:24",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_declaration_view$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_array$_t_uint256_$dyn_calldata_ptr_$returns$_t_array$_t_struct$_PortfolioAsset_$65723_memory_ptr_$dyn_memory_ptr_$",
                                        "typeString": "function nERC1155Interface.decodeToAssets(uint256[] calldata,uint256[] calldata) view returns (struct PortfolioAsset memory[] memory)"
                                      }
                                    },
                                    "id": 2301,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberName": "selector",
                                    "nodeType": "MemberAccess",
                                    "src": "6864:41:24",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    }
                                  },
                                  "src": "6857:48:24",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "src": "6395:510:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "||",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                },
                                "id": 2308,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 2304,
                                  "name": "sig",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2144,
                                  "src": "6921:3:24",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "expression": {
                                    "expression": {
                                      "id": 2305,
                                      "name": "nERC1155Interface",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 66845,
                                      "src": "6928:17:24",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_nERC1155Interface_$66845_$",
                                        "typeString": "type(contract nERC1155Interface)"
                                      }
                                    },
                                    "id": 2306,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberName": "encodeToId",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 66844,
                                    "src": "6928:28:24",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_declaration_pure$_t_uint16_$_t_uint40_$_t_uint8_$returns$_t_uint256_$",
                                      "typeString": "function nERC1155Interface.encodeToId(uint16,uint40,uint8) pure returns (uint256)"
                                    }
                                  },
                                  "id": 2307,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "selector",
                                  "nodeType": "MemberAccess",
                                  "src": "6928:37:24",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  }
                                },
                                "src": "6921:44:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "6395:570:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "||",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              },
                              "id": 2314,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2310,
                                "name": "sig",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2144,
                                "src": "6981:3:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "expression": {
                                    "id": 2311,
                                    "name": "nERC1155Interface",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 66845,
                                    "src": "6988:17:24",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_nERC1155Interface_$66845_$",
                                      "typeString": "type(contract nERC1155Interface)"
                                    }
                                  },
                                  "id": 2312,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "setApprovalForAll",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 66784,
                                  "src": "6988:35:24",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_bool_$returns$__$",
                                    "typeString": "function nERC1155Interface.setApprovalForAll(address,bool)"
                                  }
                                },
                                "id": 2313,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "selector",
                                "nodeType": "MemberAccess",
                                "src": "6988:44:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                }
                              },
                              "src": "6981:51:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "6395:637:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            "id": 2320,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 2316,
                              "name": "sig",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2144,
                              "src": "7048:3:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "expression": {
                                "expression": {
                                  "id": 2317,
                                  "name": "nERC1155Interface",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 66845,
                                  "src": "7055:17:24",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_nERC1155Interface_$66845_$",
                                    "typeString": "type(contract nERC1155Interface)"
                                  }
                                },
                                "id": 2318,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "isApprovedForAll",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 66793,
                                "src": "7055:34:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_declaration_view$_t_address_$_t_address_$returns$_t_bool_$",
                                  "typeString": "function nERC1155Interface.isApprovedForAll(address,address) view returns (bool)"
                                }
                              },
                              "id": 2319,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "selector",
                              "nodeType": "MemberAccess",
                              "src": "7055:43:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            },
                            "src": "7048:50:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "6395:703:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 2401,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 2395,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "id": 2389,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "id": 2383,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    "id": 2377,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      },
                                      "id": 2371,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "commonType": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        },
                                        "id": 2365,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "commonType": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          },
                                          "id": 2359,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "commonType": {
                                              "typeIdentifier": "t_bool",
                                              "typeString": "bool"
                                            },
                                            "id": 2353,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "commonType": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                              },
                                              "id": 2347,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftExpression": {
                                                "commonType": {
                                                  "typeIdentifier": "t_bool",
                                                  "typeString": "bool"
                                                },
                                                "id": 2341,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                  "commonType": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                  },
                                                  "id": 2335,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "leftExpression": {
                                                    "commonType": {
                                                      "typeIdentifier": "t_bytes4",
                                                      "typeString": "bytes4"
                                                    },
                                                    "id": 2329,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "leftExpression": {
                                                      "id": 2325,
                                                      "name": "sig",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 2144,
                                                      "src": "7171:3:24",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_bytes4",
                                                        "typeString": "bytes4"
                                                      }
                                                    },
                                                    "nodeType": "BinaryOperation",
                                                    "operator": "==",
                                                    "rightExpression": {
                                                      "expression": {
                                                        "expression": {
                                                          "id": 2326,
                                                          "name": "INTokenAction",
                                                          "nodeType": "Identifier",
                                                          "overloadedDeclarations": [],
                                                          "referencedDeclaration": 66136,
                                                          "src": "7178:13:24",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_type$_t_contract$_INTokenAction_$66136_$",
                                                            "typeString": "type(contract INTokenAction)"
                                                          }
                                                        },
                                                        "id": 2327,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "lValueRequested": false,
                                                        "memberName": "nTokenTotalSupply",
                                                        "nodeType": "MemberAccess",
                                                        "referencedDeclaration": 66015,
                                                        "src": "7178:31:24",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_function_declaration_view$_t_address_$returns$_t_uint256_$",
                                                          "typeString": "function INTokenAction.nTokenTotalSupply(address) view returns (uint256)"
                                                        }
                                                      },
                                                      "id": 2328,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": true,
                                                      "lValueRequested": false,
                                                      "memberName": "selector",
                                                      "nodeType": "MemberAccess",
                                                      "src": "7178:40:24",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_bytes4",
                                                        "typeString": "bytes4"
                                                      }
                                                    },
                                                    "src": "7171:47:24",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_bool",
                                                      "typeString": "bool"
                                                    }
                                                  },
                                                  "nodeType": "BinaryOperation",
                                                  "operator": "||",
                                                  "rightExpression": {
                                                    "commonType": {
                                                      "typeIdentifier": "t_bytes4",
                                                      "typeString": "bytes4"
                                                    },
                                                    "id": 2334,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "leftExpression": {
                                                      "id": 2330,
                                                      "name": "sig",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 2144,
                                                      "src": "7234:3:24",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_bytes4",
                                                        "typeString": "bytes4"
                                                      }
                                                    },
                                                    "nodeType": "BinaryOperation",
                                                    "operator": "==",
                                                    "rightExpression": {
                                                      "expression": {
                                                        "expression": {
                                                          "id": 2331,
                                                          "name": "INTokenAction",
                                                          "nodeType": "Identifier",
                                                          "overloadedDeclarations": [],
                                                          "referencedDeclaration": 66136,
                                                          "src": "7241:13:24",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_type$_t_contract$_INTokenAction_$66136_$",
                                                            "typeString": "type(contract INTokenAction)"
                                                          }
                                                        },
                                                        "id": 2332,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "lValueRequested": false,
                                                        "memberName": "nTokenTransferAllowance",
                                                        "nodeType": "MemberAccess",
                                                        "referencedDeclaration": 66026,
                                                        "src": "7241:37:24",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_function_declaration_view$_t_uint16_$_t_address_$_t_address_$returns$_t_uint256_$",
                                                          "typeString": "function INTokenAction.nTokenTransferAllowance(uint16,address,address) view returns (uint256)"
                                                        }
                                                      },
                                                      "id": 2333,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": true,
                                                      "lValueRequested": false,
                                                      "memberName": "selector",
                                                      "nodeType": "MemberAccess",
                                                      "src": "7241:46:24",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_bytes4",
                                                        "typeString": "bytes4"
                                                      }
                                                    },
                                                    "src": "7234:53:24",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_bool",
                                                      "typeString": "bool"
                                                    }
                                                  },
                                                  "src": "7171:116:24",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                  }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "||",
                                                "rightExpression": {
                                                  "commonType": {
                                                    "typeIdentifier": "t_bytes4",
                                                    "typeString": "bytes4"
                                                  },
                                                  "id": 2340,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "leftExpression": {
                                                    "id": 2336,
                                                    "name": "sig",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 2144,
                                                    "src": "7303:3:24",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_bytes4",
                                                      "typeString": "bytes4"
                                                    }
                                                  },
                                                  "nodeType": "BinaryOperation",
                                                  "operator": "==",
                                                  "rightExpression": {
                                                    "expression": {
                                                      "expression": {
                                                        "id": 2337,
                                                        "name": "INTokenAction",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 66136,
                                                        "src": "7310:13:24",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_type$_t_contract$_INTokenAction_$66136_$",
                                                          "typeString": "type(contract INTokenAction)"
                                                        }
                                                      },
                                                      "id": 2338,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": true,
                                                      "lValueRequested": false,
                                                      "memberName": "nTokenBalanceOf",
                                                      "nodeType": "MemberAccess",
                                                      "referencedDeclaration": 66035,
                                                      "src": "7310:29:24",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_function_declaration_view$_t_uint16_$_t_address_$returns$_t_uint256_$",
                                                        "typeString": "function INTokenAction.nTokenBalanceOf(uint16,address) view returns (uint256)"
                                                      }
                                                    },
                                                    "id": 2339,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "lValueRequested": false,
                                                    "memberName": "selector",
                                                    "nodeType": "MemberAccess",
                                                    "src": "7310:38:24",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_bytes4",
                                                      "typeString": "bytes4"
                                                    }
                                                  },
                                                  "src": "7303:45:24",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                  }
                                                },
                                                "src": "7171:177:24",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_bool",
                                                  "typeString": "bool"
                                                }
                                              },
                                              "nodeType": "BinaryOperation",
                                              "operator": "||",
                                              "rightExpression": {
                                                "commonType": {
                                                  "typeIdentifier": "t_bytes4",
                                                  "typeString": "bytes4"
                                                },
                                                "id": 2346,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                  "id": 2342,
                                                  "name": "sig",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 2144,
                                                  "src": "7364:3:24",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_bytes4",
                                                    "typeString": "bytes4"
                                                  }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "==",
                                                "rightExpression": {
                                                  "expression": {
                                                    "expression": {
                                                      "id": 2343,
                                                      "name": "INTokenAction",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 66136,
                                                      "src": "7371:13:24",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_type$_t_contract$_INTokenAction_$66136_$",
                                                        "typeString": "type(contract INTokenAction)"
                                                      }
                                                    },
                                                    "id": 2344,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "lValueRequested": false,
                                                    "memberName": "nTokenTransferApprove",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 66048,
                                                    "src": "7371:35:24",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_function_declaration_nonpayable$_t_uint16_$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                                                      "typeString": "function INTokenAction.nTokenTransferApprove(uint16,address,address,uint256) returns (bool)"
                                                    }
                                                  },
                                                  "id": 2345,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": true,
                                                  "lValueRequested": false,
                                                  "memberName": "selector",
                                                  "nodeType": "MemberAccess",
                                                  "src": "7371:44:24",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_bytes4",
                                                    "typeString": "bytes4"
                                                  }
                                                },
                                                "src": "7364:51:24",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_bool",
                                                  "typeString": "bool"
                                                }
                                              },
                                              "src": "7171:244:24",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "||",
                                            "rightExpression": {
                                              "commonType": {
                                                "typeIdentifier": "t_bytes4",
                                                "typeString": "bytes4"
                                              },
                                              "id": 2352,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftExpression": {
                                                "id": 2348,
                                                "name": "sig",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 2144,
                                                "src": "7431:3:24",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_bytes4",
                                                  "typeString": "bytes4"
                                                }
                                              },
                                              "nodeType": "BinaryOperation",
                                              "operator": "==",
                                              "rightExpression": {
                                                "expression": {
                                                  "expression": {
                                                    "id": 2349,
                                                    "name": "INTokenAction",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 66136,
                                                    "src": "7438:13:24",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_type$_t_contract$_INTokenAction_$66136_$",
                                                      "typeString": "type(contract INTokenAction)"
                                                    }
                                                  },
                                                  "id": 2350,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": true,
                                                  "lValueRequested": false,
                                                  "memberName": "nTokenTransfer",
                                                  "nodeType": "MemberAccess",
                                                  "referencedDeclaration": 66061,
                                                  "src": "7438:28:24",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_function_declaration_nonpayable$_t_uint16_$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                                                    "typeString": "function INTokenAction.nTokenTransfer(uint16,address,address,uint256) returns (bool)"
                                                  }
                                                },
                                                "id": 2351,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "lValueRequested": false,
                                                "memberName": "selector",
                                                "nodeType": "MemberAccess",
                                                "src": "7438:37:24",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_bytes4",
                                                  "typeString": "bytes4"
                                                }
                                              },
                                              "src": "7431:44:24",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                              }
                                            },
                                            "src": "7171:304:24",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bool",
                                              "typeString": "bool"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "||",
                                          "rightExpression": {
                                            "commonType": {
                                              "typeIdentifier": "t_bytes4",
                                              "typeString": "bytes4"
                                            },
                                            "id": 2358,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "id": 2354,
                                              "name": "sig",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 2144,
                                              "src": "7491:3:24",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_bytes4",
                                                "typeString": "bytes4"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "==",
                                            "rightExpression": {
                                              "expression": {
                                                "expression": {
                                                  "id": 2355,
                                                  "name": "INTokenAction",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 66136,
                                                  "src": "7498:13:24",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_contract$_INTokenAction_$66136_$",
                                                    "typeString": "type(contract INTokenAction)"
                                                  }
                                                },
                                                "id": 2356,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "lValueRequested": false,
                                                "memberName": "nTokenTransferFrom",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 66076,
                                                "src": "7498:32:24",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_function_declaration_nonpayable$_t_uint16_$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                                                  "typeString": "function INTokenAction.nTokenTransferFrom(uint16,address,address,address,uint256) returns (bool)"
                                                }
                                              },
                                              "id": 2357,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "memberName": "selector",
                                              "nodeType": "MemberAccess",
                                              "src": "7498:41:24",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_bytes4",
                                                "typeString": "bytes4"
                                              }
                                            },
                                            "src": "7491:48:24",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bool",
                                              "typeString": "bool"
                                            }
                                          },
                                          "src": "7171:368:24",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "||",
                                        "rightExpression": {
                                          "commonType": {
                                            "typeIdentifier": "t_bytes4",
                                            "typeString": "bytes4"
                                          },
                                          "id": 2364,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "id": 2360,
                                            "name": "sig",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2144,
                                            "src": "7555:3:24",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bytes4",
                                              "typeString": "bytes4"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "==",
                                          "rightExpression": {
                                            "expression": {
                                              "expression": {
                                                "id": 2361,
                                                "name": "INTokenAction",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 66136,
                                                "src": "7562:13:24",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_type$_t_contract$_INTokenAction_$66136_$",
                                                  "typeString": "type(contract INTokenAction)"
                                                }
                                              },
                                              "id": 2362,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "memberName": "nTokenTransferApproveAll",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": 66085,
                                              "src": "7562:38:24",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                                "typeString": "function INTokenAction.nTokenTransferApproveAll(address,uint256) returns (bool)"
                                              }
                                            },
                                            "id": 2363,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "memberName": "selector",
                                            "nodeType": "MemberAccess",
                                            "src": "7562:47:24",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bytes4",
                                              "typeString": "bytes4"
                                            }
                                          },
                                          "src": "7555:54:24",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          }
                                        },
                                        "src": "7171:438:24",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "||",
                                      "rightExpression": {
                                        "commonType": {
                                          "typeIdentifier": "t_bytes4",
                                          "typeString": "bytes4"
                                        },
                                        "id": 2370,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 2366,
                                          "name": "sig",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2144,
                                          "src": "7625:3:24",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes4",
                                            "typeString": "bytes4"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "==",
                                        "rightExpression": {
                                          "expression": {
                                            "expression": {
                                              "id": 2367,
                                              "name": "INTokenAction",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 66136,
                                              "src": "7632:13:24",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_contract$_INTokenAction_$66136_$",
                                                "typeString": "type(contract INTokenAction)"
                                              }
                                            },
                                            "id": 2368,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "memberName": "nTokenClaimIncentives",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 66090,
                                            "src": "7632:35:24",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_declaration_nonpayable$__$returns$_t_uint256_$",
                                              "typeString": "function INTokenAction.nTokenClaimIncentives() returns (uint256)"
                                            }
                                          },
                                          "id": 2369,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "memberName": "selector",
                                          "nodeType": "MemberAccess",
                                          "src": "7632:44:24",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes4",
                                            "typeString": "bytes4"
                                          }
                                        },
                                        "src": "7625:51:24",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "src": "7171:505:24",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "||",
                                    "rightExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      },
                                      "id": 2376,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 2372,
                                        "name": "sig",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2144,
                                        "src": "7692:3:24",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes4",
                                          "typeString": "bytes4"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "==",
                                      "rightExpression": {
                                        "expression": {
                                          "expression": {
                                            "id": 2373,
                                            "name": "INTokenAction",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 66136,
                                            "src": "7699:13:24",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_contract$_INTokenAction_$66136_$",
                                              "typeString": "type(contract INTokenAction)"
                                            }
                                          },
                                          "id": 2374,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "memberName": "nTokenPresentValueAssetDenominated",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 66097,
                                          "src": "7699:48:24",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_declaration_view$_t_uint16_$returns$_t_int256_$",
                                            "typeString": "function INTokenAction.nTokenPresentValueAssetDenominated(uint16) view returns (int256)"
                                          }
                                        },
                                        "id": 2375,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberName": "selector",
                                        "nodeType": "MemberAccess",
                                        "src": "7699:57:24",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes4",
                                          "typeString": "bytes4"
                                        }
                                      },
                                      "src": "7692:64:24",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "src": "7171:585:24",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "||",
                                  "rightExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    },
                                    "id": 2382,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 2378,
                                      "name": "sig",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2144,
                                      "src": "7772:3:24",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "expression": {
                                        "expression": {
                                          "id": 2379,
                                          "name": "INTokenAction",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 66136,
                                          "src": "7779:13:24",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_contract$_INTokenAction_$66136_$",
                                            "typeString": "type(contract INTokenAction)"
                                          }
                                        },
                                        "id": 2380,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberName": "nTokenPresentValueUnderlyingDenominated",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 66104,
                                        "src": "7779:53:24",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_declaration_view$_t_uint16_$returns$_t_int256_$",
                                          "typeString": "function INTokenAction.nTokenPresentValueUnderlyingDenominated(uint16) view returns (int256)"
                                        }
                                      },
                                      "id": 2381,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberName": "selector",
                                      "nodeType": "MemberAccess",
                                      "src": "7779:62:24",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    },
                                    "src": "7772:69:24",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "src": "7171:670:24",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "||",
                                "rightExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  },
                                  "id": 2388,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 2384,
                                    "name": "sig",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2144,
                                    "src": "7857:3:24",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "expression": {
                                      "expression": {
                                        "id": 2385,
                                        "name": "INTokenAction",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 66136,
                                        "src": "7864:13:24",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_contract$_INTokenAction_$66136_$",
                                          "typeString": "type(contract INTokenAction)"
                                        }
                                      },
                                      "id": 2386,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberName": "nTokenPresentValueUnderlyingExternal",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 66111,
                                      "src": "7864:50:24",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_declaration_view$_t_uint16_$returns$_t_uint256_$",
                                        "typeString": "function INTokenAction.nTokenPresentValueUnderlyingExternal(uint16) view returns (uint256)"
                                      }
                                    },
                                    "id": 2387,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberName": "selector",
                                    "nodeType": "MemberAccess",
                                    "src": "7864:59:24",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    }
                                  },
                                  "src": "7857:66:24",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "src": "7171:752:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "||",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                },
                                "id": 2394,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 2390,
                                  "name": "sig",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2144,
                                  "src": "7939:3:24",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "expression": {
                                    "expression": {
                                      "id": 2391,
                                      "name": "INTokenAction",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 66136,
                                      "src": "7946:13:24",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_INTokenAction_$66136_$",
                                        "typeString": "type(contract INTokenAction)"
                                      }
                                    },
                                    "id": 2392,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberName": "nTokenRedeemViaProxy",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 66124,
                                    "src": "7946:34:24",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_declaration_nonpayable$_t_uint16_$_t_uint256_$_t_address_$_t_address_$returns$_t_uint256_$",
                                      "typeString": "function INTokenAction.nTokenRedeemViaProxy(uint16,uint256,address,address) returns (uint256)"
                                    }
                                  },
                                  "id": 2393,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "selector",
                                  "nodeType": "MemberAccess",
                                  "src": "7946:43:24",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  }
                                },
                                "src": "7939:50:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "7171:818:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "||",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              },
                              "id": 2400,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2396,
                                "name": "sig",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2144,
                                "src": "8005:3:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "expression": {
                                    "id": 2397,
                                    "name": "INTokenAction",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 66136,
                                    "src": "8012:13:24",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_INTokenAction_$66136_$",
                                      "typeString": "type(contract INTokenAction)"
                                    }
                                  },
                                  "id": 2398,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "nTokenMintViaProxy",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 66135,
                                  "src": "8012:32:24",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_declaration_payable$_t_uint16_$_t_uint256_$_t_address_$returns$_t_uint256_$",
                                    "typeString": "function INTokenAction.nTokenMintViaProxy(uint16,uint256,address) payable returns (uint256)"
                                  }
                                },
                                "id": 2399,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "selector",
                                "nodeType": "MemberAccess",
                                "src": "8012:41:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                }
                              },
                              "src": "8005:48:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "7171:882:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseBody": {
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 2427,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "id": 2421,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "id": 2415,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    },
                                    "id": 2409,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 2405,
                                      "name": "sig",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2144,
                                      "src": "8133:3:24",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "expression": {
                                        "expression": {
                                          "id": 2406,
                                          "name": "NotionalProxy",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 65530,
                                          "src": "8140:13:24",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_contract$_NotionalProxy_$65530_$",
                                            "typeString": "type(contract NotionalProxy)"
                                          }
                                        },
                                        "id": 2407,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberName": "liquidateLocalCurrency",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 65411,
                                        "src": "8140:36:24",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_uint16_$_t_uint96_$returns$_t_int256_$_t_int256_$",
                                          "typeString": "function NotionalProxy.liquidateLocalCurrency(address,uint16,uint96) returns (int256,int256)"
                                        }
                                      },
                                      "id": 2408,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberName": "selector",
                                      "nodeType": "MemberAccess",
                                      "src": "8140:45:24",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    },
                                    "src": "8133:52:24",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "||",
                                  "rightExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    },
                                    "id": 2414,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 2410,
                                      "name": "sig",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2144,
                                      "src": "8201:3:24",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "expression": {
                                        "expression": {
                                          "id": 2411,
                                          "name": "NotionalProxy",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 65530,
                                          "src": "8208:13:24",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_contract$_NotionalProxy_$65530_$",
                                            "typeString": "type(contract NotionalProxy)"
                                          }
                                        },
                                        "id": 2412,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberName": "liquidateCollateralCurrency",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 65453,
                                        "src": "8208:41:24",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_uint16_$_t_uint16_$_t_uint128_$_t_uint96_$_t_bool_$_t_bool_$returns$_t_int256_$_t_int256_$_t_int256_$",
                                          "typeString": "function NotionalProxy.liquidateCollateralCurrency(address,uint16,uint16,uint128,uint96,bool,bool) returns (int256,int256,int256)"
                                        }
                                      },
                                      "id": 2413,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberName": "selector",
                                      "nodeType": "MemberAccess",
                                      "src": "8208:50:24",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    },
                                    "src": "8201:57:24",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "src": "8133:125:24",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "||",
                                "rightExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  },
                                  "id": 2420,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 2416,
                                    "name": "sig",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2144,
                                    "src": "8274:3:24",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "expression": {
                                      "expression": {
                                        "id": 2417,
                                        "name": "NotionalProxy",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 65530,
                                        "src": "8281:13:24",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_contract$_NotionalProxy_$65530_$",
                                          "typeString": "type(contract NotionalProxy)"
                                        }
                                      },
                                      "id": 2418,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberName": "calculateLocalCurrencyLiquidation",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 65398,
                                      "src": "8281:47:24",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_uint16_$_t_uint96_$returns$_t_int256_$_t_int256_$",
                                        "typeString": "function NotionalProxy.calculateLocalCurrencyLiquidation(address,uint16,uint96) returns (int256,int256)"
                                      }
                                    },
                                    "id": 2419,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberName": "selector",
                                    "nodeType": "MemberAccess",
                                    "src": "8281:56:24",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    }
                                  },
                                  "src": "8274:63:24",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "src": "8133:204:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "||",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                },
                                "id": 2426,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 2422,
                                  "name": "sig",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2144,
                                  "src": "8353:3:24",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "expression": {
                                    "expression": {
                                      "id": 2423,
                                      "name": "NotionalProxy",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 65530,
                                      "src": "8360:13:24",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_NotionalProxy_$65530_$",
                                        "typeString": "type(contract NotionalProxy)"
                                      }
                                    },
                                    "id": 2424,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberName": "calculateCollateralCurrencyLiquidation",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 65430,
                                    "src": "8360:52:24",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_uint16_$_t_uint16_$_t_uint128_$_t_uint96_$returns$_t_int256_$_t_int256_$_t_int256_$",
                                      "typeString": "function NotionalProxy.calculateCollateralCurrencyLiquidation(address,uint16,uint16,uint128,uint96) returns (int256,int256,int256)"
                                    }
                                  },
                                  "id": 2425,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "selector",
                                  "nodeType": "MemberAccess",
                                  "src": "8360:61:24",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  }
                                },
                                "src": "8353:68:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "8133:288:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "falseBody": {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "id": 2453,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "id": 2447,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    "id": 2441,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      },
                                      "id": 2435,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 2431,
                                        "name": "sig",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2144,
                                        "src": "8505:3:24",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes4",
                                          "typeString": "bytes4"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "==",
                                      "rightExpression": {
                                        "expression": {
                                          "expression": {
                                            "id": 2432,
                                            "name": "NotionalProxy",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 65530,
                                            "src": "8512:13:24",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_contract$_NotionalProxy_$65530_$",
                                              "typeString": "type(contract NotionalProxy)"
                                            }
                                          },
                                          "id": 2433,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "memberName": "liquidatefCashLocal",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 65489,
                                          "src": "8512:33:24",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_uint16_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_array$_t_uint256_$dyn_calldata_ptr_$returns$_t_array$_t_int256_$dyn_memory_ptr_$_t_int256_$",
                                            "typeString": "function NotionalProxy.liquidatefCashLocal(address,uint16,uint256[] calldata,uint256[] calldata) returns (int256[] memory,int256)"
                                          }
                                        },
                                        "id": 2434,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberName": "selector",
                                        "nodeType": "MemberAccess",
                                        "src": "8512:42:24",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes4",
                                          "typeString": "bytes4"
                                        }
                                      },
                                      "src": "8505:49:24",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "||",
                                    "rightExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      },
                                      "id": 2440,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 2436,
                                        "name": "sig",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2144,
                                        "src": "8570:3:24",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes4",
                                          "typeString": "bytes4"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "==",
                                      "rightExpression": {
                                        "expression": {
                                          "expression": {
                                            "id": 2437,
                                            "name": "NotionalProxy",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 65530,
                                            "src": "8577:13:24",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_contract$_NotionalProxy_$65530_$",
                                              "typeString": "type(contract NotionalProxy)"
                                            }
                                          },
                                          "id": 2438,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "memberName": "liquidatefCashCrossCurrency",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 65529,
                                          "src": "8577:41:24",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_uint16_$_t_uint16_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_array$_t_uint256_$dyn_calldata_ptr_$returns$_t_array$_t_int256_$dyn_memory_ptr_$_t_int256_$",
                                            "typeString": "function NotionalProxy.liquidatefCashCrossCurrency(address,uint16,uint16,uint256[] calldata,uint256[] calldata) returns (int256[] memory,int256)"
                                          }
                                        },
                                        "id": 2439,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberName": "selector",
                                        "nodeType": "MemberAccess",
                                        "src": "8577:50:24",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes4",
                                          "typeString": "bytes4"
                                        }
                                      },
                                      "src": "8570:57:24",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "src": "8505:122:24",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "||",
                                  "rightExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    },
                                    "id": 2446,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 2442,
                                      "name": "sig",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2144,
                                      "src": "8643:3:24",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "expression": {
                                        "expression": {
                                          "id": 2443,
                                          "name": "NotionalProxy",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 65530,
                                          "src": "8650:13:24",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_contract$_NotionalProxy_$65530_$",
                                            "typeString": "type(contract NotionalProxy)"
                                          }
                                        },
                                        "id": 2444,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberName": "calculatefCashLocalLiquidation",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 65471,
                                        "src": "8650:44:24",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_uint16_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_array$_t_uint256_$dyn_calldata_ptr_$returns$_t_array$_t_int256_$dyn_memory_ptr_$_t_int256_$",
                                          "typeString": "function NotionalProxy.calculatefCashLocalLiquidation(address,uint16,uint256[] calldata,uint256[] calldata) returns (int256[] memory,int256)"
                                        }
                                      },
                                      "id": 2445,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberName": "selector",
                                      "nodeType": "MemberAccess",
                                      "src": "8650:53:24",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    },
                                    "src": "8643:60:24",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "src": "8505:198:24",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "||",
                                "rightExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  },
                                  "id": 2452,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 2448,
                                    "name": "sig",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2144,
                                    "src": "8719:3:24",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "expression": {
                                      "expression": {
                                        "id": 2449,
                                        "name": "NotionalProxy",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 65530,
                                        "src": "8726:13:24",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_contract$_NotionalProxy_$65530_$",
                                          "typeString": "type(contract NotionalProxy)"
                                        }
                                      },
                                      "id": 2450,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberName": "calculatefCashCrossCurrencyLiquidation",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 65509,
                                      "src": "8726:52:24",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_uint16_$_t_uint16_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_array$_t_uint256_$dyn_calldata_ptr_$returns$_t_array$_t_int256_$dyn_memory_ptr_$_t_int256_$",
                                        "typeString": "function NotionalProxy.calculatefCashCrossCurrencyLiquidation(address,uint16,uint16,uint256[] calldata,uint256[] calldata) returns (int256[] memory,int256)"
                                      }
                                    },
                                    "id": 2451,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberName": "selector",
                                    "nodeType": "MemberAccess",
                                    "src": "8726:61:24",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    }
                                  },
                                  "src": "8719:68:24",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "src": "8505:282:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseBody": {
                                "condition": {
                                  "commonType": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "id": 2539,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    "id": 2533,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      },
                                      "id": 2527,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "commonType": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        },
                                        "id": 2521,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "commonType": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          },
                                          "id": 2515,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "commonType": {
                                              "typeIdentifier": "t_bool",
                                              "typeString": "bool"
                                            },
                                            "id": 2509,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "commonType": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                              },
                                              "id": 2503,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftExpression": {
                                                "commonType": {
                                                  "typeIdentifier": "t_bool",
                                                  "typeString": "bool"
                                                },
                                                "id": 2497,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                  "commonType": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                  },
                                                  "id": 2491,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "leftExpression": {
                                                    "commonType": {
                                                      "typeIdentifier": "t_bool",
                                                      "typeString": "bool"
                                                    },
                                                    "id": 2485,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "leftExpression": {
                                                      "commonType": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                      },
                                                      "id": 2479,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "leftExpression": {
                                                        "commonType": {
                                                          "typeIdentifier": "t_bool",
                                                          "typeString": "bool"
                                                        },
                                                        "id": 2473,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "leftExpression": {
                                                          "commonType": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                          },
                                                          "id": 2467,
                                                          "isConstant": false,
                                                          "isLValue": false,
                                                          "isPure": false,
                                                          "lValueRequested": false,
                                                          "leftExpression": {
                                                            "commonType": {
                                                              "typeIdentifier": "t_bytes4",
                                                              "typeString": "bytes4"
                                                            },
                                                            "id": 2461,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "leftExpression": {
                                                              "id": 2457,
                                                              "name": "sig",
                                                              "nodeType": "Identifier",
                                                              "overloadedDeclarations": [],
                                                              "referencedDeclaration": 2144,
                                                              "src": "8868:3:24",
                                                              "typeDescriptions": {
                                                                "typeIdentifier": "t_bytes4",
                                                                "typeString": "bytes4"
                                                              }
                                                            },
                                                            "nodeType": "BinaryOperation",
                                                            "operator": "==",
                                                            "rightExpression": {
                                                              "expression": {
                                                                "expression": {
                                                                  "id": 2458,
                                                                  "name": "IVaultAction",
                                                                  "nodeType": "Identifier",
                                                                  "overloadedDeclarations": [],
                                                                  "referencedDeclaration": 66332,
                                                                  "src": "8875:12:24",
                                                                  "typeDescriptions": {
                                                                    "typeIdentifier": "t_type$_t_contract$_IVaultAction_$66332_$",
                                                                    "typeString": "type(contract IVaultAction)"
                                                                  }
                                                                },
                                                                "id": 2459,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": true,
                                                                "lValueRequested": false,
                                                                "memberName": "updateVault",
                                                                "nodeType": "MemberAccess",
                                                                "referencedDeclaration": 66187,
                                                                "src": "8875:24:24",
                                                                "typeDescriptions": {
                                                                  "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_struct$_VaultConfigStorage_$65909_calldata_ptr_$_t_uint80_$returns$__$",
                                                                  "typeString": "function IVaultAction.updateVault(address,struct VaultConfigStorage calldata,uint80)"
                                                                }
                                                              },
                                                              "id": 2460,
                                                              "isConstant": false,
                                                              "isLValue": false,
                                                              "isPure": true,
                                                              "lValueRequested": false,
                                                              "memberName": "selector",
                                                              "nodeType": "MemberAccess",
                                                              "src": "8875:33:24",
                                                              "typeDescriptions": {
                                                                "typeIdentifier": "t_bytes4",
                                                                "typeString": "bytes4"
                                                              }
                                                            },
                                                            "src": "8868:40:24",
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_bool",
                                                              "typeString": "bool"
                                                            }
                                                          },
                                                          "nodeType": "BinaryOperation",
                                                          "operator": "||",
                                                          "rightExpression": {
                                                            "commonType": {
                                                              "typeIdentifier": "t_bytes4",
                                                              "typeString": "bytes4"
                                                            },
                                                            "id": 2466,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "leftExpression": {
                                                              "id": 2462,
                                                              "name": "sig",
                                                              "nodeType": "Identifier",
                                                              "overloadedDeclarations": [],
                                                              "referencedDeclaration": 2144,
                                                              "src": "8924:3:24",
                                                              "typeDescriptions": {
                                                                "typeIdentifier": "t_bytes4",
                                                                "typeString": "bytes4"
                                                              }
                                                            },
                                                            "nodeType": "BinaryOperation",
                                                            "operator": "==",
                                                            "rightExpression": {
                                                              "expression": {
                                                                "expression": {
                                                                  "id": 2463,
                                                                  "name": "IVaultAction",
                                                                  "nodeType": "Identifier",
                                                                  "overloadedDeclarations": [],
                                                                  "referencedDeclaration": 66332,
                                                                  "src": "8931:12:24",
                                                                  "typeDescriptions": {
                                                                    "typeIdentifier": "t_type$_t_contract$_IVaultAction_$66332_$",
                                                                    "typeString": "type(contract IVaultAction)"
                                                                  }
                                                                },
                                                                "id": 2464,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": true,
                                                                "lValueRequested": false,
                                                                "memberName": "setVaultPauseStatus",
                                                                "nodeType": "MemberAccess",
                                                                "referencedDeclaration": 66195,
                                                                "src": "8931:32:24",
                                                                "typeDescriptions": {
                                                                  "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_bool_$returns$__$",
                                                                  "typeString": "function IVaultAction.setVaultPauseStatus(address,bool)"
                                                                }
                                                              },
                                                              "id": 2465,
                                                              "isConstant": false,
                                                              "isLValue": false,
                                                              "isPure": true,
                                                              "lValueRequested": false,
                                                              "memberName": "selector",
                                                              "nodeType": "MemberAccess",
                                                              "src": "8931:41:24",
                                                              "typeDescriptions": {
                                                                "typeIdentifier": "t_bytes4",
                                                                "typeString": "bytes4"
                                                              }
                                                            },
                                                            "src": "8924:48:24",
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_bool",
                                                              "typeString": "bool"
                                                            }
                                                          },
                                                          "src": "8868:104:24",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                          }
                                                        },
                                                        "nodeType": "BinaryOperation",
                                                        "operator": "||",
                                                        "rightExpression": {
                                                          "commonType": {
                                                            "typeIdentifier": "t_bytes4",
                                                            "typeString": "bytes4"
                                                          },
                                                          "id": 2472,
                                                          "isConstant": false,
                                                          "isLValue": false,
                                                          "isPure": false,
                                                          "lValueRequested": false,
                                                          "leftExpression": {
                                                            "id": 2468,
                                                            "name": "sig",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 2144,
                                                            "src": "8988:3:24",
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_bytes4",
                                                              "typeString": "bytes4"
                                                            }
                                                          },
                                                          "nodeType": "BinaryOperation",
                                                          "operator": "==",
                                                          "rightExpression": {
                                                            "expression": {
                                                              "expression": {
                                                                "id": 2469,
                                                                "name": "IVaultAction",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 66332,
                                                                "src": "8995:12:24",
                                                                "typeDescriptions": {
                                                                  "typeIdentifier": "t_type$_t_contract$_IVaultAction_$66332_$",
                                                                  "typeString": "type(contract IVaultAction)"
                                                                }
                                                              },
                                                              "id": 2470,
                                                              "isConstant": false,
                                                              "isLValue": false,
                                                              "isPure": true,
                                                              "lValueRequested": false,
                                                              "memberName": "reduceMaxBorrowCapacity",
                                                              "nodeType": "MemberAccess",
                                                              "referencedDeclaration": 66209,
                                                              "src": "8995:36:24",
                                                              "typeDescriptions": {
                                                                "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_uint80_$_t_uint256_$_t_uint256_$_t_bytes_calldata_ptr_$returns$__$",
                                                                "typeString": "function IVaultAction.reduceMaxBorrowCapacity(address,uint80,uint256,uint256,bytes calldata)"
                                                              }
                                                            },
                                                            "id": 2471,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "lValueRequested": false,
                                                            "memberName": "selector",
                                                            "nodeType": "MemberAccess",
                                                            "src": "8995:45:24",
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_bytes4",
                                                              "typeString": "bytes4"
                                                            }
                                                          },
                                                          "src": "8988:52:24",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                          }
                                                        },
                                                        "src": "8868:172:24",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_bool",
                                                          "typeString": "bool"
                                                        }
                                                      },
                                                      "nodeType": "BinaryOperation",
                                                      "operator": "||",
                                                      "rightExpression": {
                                                        "commonType": {
                                                          "typeIdentifier": "t_bytes4",
                                                          "typeString": "bytes4"
                                                        },
                                                        "id": 2478,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "leftExpression": {
                                                          "id": 2474,
                                                          "name": "sig",
                                                          "nodeType": "Identifier",
                                                          "overloadedDeclarations": [],
                                                          "referencedDeclaration": 2144,
                                                          "src": "9056:3:24",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_bytes4",
                                                            "typeString": "bytes4"
                                                          }
                                                        },
                                                        "nodeType": "BinaryOperation",
                                                        "operator": "==",
                                                        "rightExpression": {
                                                          "expression": {
                                                            "expression": {
                                                              "id": 2475,
                                                              "name": "IVaultAction",
                                                              "nodeType": "Identifier",
                                                              "overloadedDeclarations": [],
                                                              "referencedDeclaration": 66332,
                                                              "src": "9063:12:24",
                                                              "typeDescriptions": {
                                                                "typeIdentifier": "t_type$_t_contract$_IVaultAction_$66332_$",
                                                                "typeString": "type(contract IVaultAction)"
                                                              }
                                                            },
                                                            "id": 2476,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "lValueRequested": false,
                                                            "memberName": "updateSecondaryBorrowCapacity",
                                                            "nodeType": "MemberAccess",
                                                            "referencedDeclaration": 66219,
                                                            "src": "9063:42:24",
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_uint16_$_t_uint80_$returns$__$",
                                                              "typeString": "function IVaultAction.updateSecondaryBorrowCapacity(address,uint16,uint80)"
                                                            }
                                                          },
                                                          "id": 2477,
                                                          "isConstant": false,
                                                          "isLValue": false,
                                                          "isPure": true,
                                                          "lValueRequested": false,
                                                          "memberName": "selector",
                                                          "nodeType": "MemberAccess",
                                                          "src": "9063:51:24",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_bytes4",
                                                            "typeString": "bytes4"
                                                          }
                                                        },
                                                        "src": "9056:58:24",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_bool",
                                                          "typeString": "bool"
                                                        }
                                                      },
                                                      "src": "8868:246:24",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                      }
                                                    },
                                                    "nodeType": "BinaryOperation",
                                                    "operator": "||",
                                                    "rightExpression": {
                                                      "commonType": {
                                                        "typeIdentifier": "t_bytes4",
                                                        "typeString": "bytes4"
                                                      },
                                                      "id": 2484,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "leftExpression": {
                                                        "id": 2480,
                                                        "name": "sig",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 2144,
                                                        "src": "9130:3:24",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_bytes4",
                                                          "typeString": "bytes4"
                                                        }
                                                      },
                                                      "nodeType": "BinaryOperation",
                                                      "operator": "==",
                                                      "rightExpression": {
                                                        "expression": {
                                                          "expression": {
                                                            "id": 2481,
                                                            "name": "IVaultAction",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 66332,
                                                            "src": "9137:12:24",
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_type$_t_contract$_IVaultAction_$66332_$",
                                                              "typeString": "type(contract IVaultAction)"
                                                            }
                                                          },
                                                          "id": 2482,
                                                          "isConstant": false,
                                                          "isLValue": false,
                                                          "isPure": true,
                                                          "lValueRequested": false,
                                                          "memberName": "depositVaultCashToStrategyTokens",
                                                          "nodeType": "MemberAccess",
                                                          "referencedDeclaration": 66229,
                                                          "src": "9137:45:24",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_function_declaration_nonpayable$_t_uint256_$_t_uint256_$_t_bytes_calldata_ptr_$returns$__$",
                                                            "typeString": "function IVaultAction.depositVaultCashToStrategyTokens(uint256,uint256,bytes calldata)"
                                                          }
                                                        },
                                                        "id": 2483,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "lValueRequested": false,
                                                        "memberName": "selector",
                                                        "nodeType": "MemberAccess",
                                                        "src": "9137:54:24",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_bytes4",
                                                          "typeString": "bytes4"
                                                        }
                                                      },
                                                      "src": "9130:61:24",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                      }
                                                    },
                                                    "src": "8868:323:24",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_bool",
                                                      "typeString": "bool"
                                                    }
                                                  },
                                                  "nodeType": "BinaryOperation",
                                                  "operator": "||",
                                                  "rightExpression": {
                                                    "commonType": {
                                                      "typeIdentifier": "t_bytes4",
                                                      "typeString": "bytes4"
                                                    },
                                                    "id": 2490,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "leftExpression": {
                                                      "id": 2486,
                                                      "name": "sig",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 2144,
                                                      "src": "9207:3:24",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_bytes4",
                                                        "typeString": "bytes4"
                                                      }
                                                    },
                                                    "nodeType": "BinaryOperation",
                                                    "operator": "==",
                                                    "rightExpression": {
                                                      "expression": {
                                                        "expression": {
                                                          "id": 2487,
                                                          "name": "IVaultAction",
                                                          "nodeType": "Identifier",
                                                          "overloadedDeclarations": [],
                                                          "referencedDeclaration": 66332,
                                                          "src": "9214:12:24",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_type$_t_contract$_IVaultAction_$66332_$",
                                                            "typeString": "type(contract IVaultAction)"
                                                          }
                                                        },
                                                        "id": 2488,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "lValueRequested": false,
                                                        "memberName": "redeemStrategyTokensToCash",
                                                        "nodeType": "MemberAccess",
                                                        "referencedDeclaration": 66243,
                                                        "src": "9214:39:24",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_function_declaration_nonpayable$_t_uint256_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_int256_$_t_int256_$",
                                                          "typeString": "function IVaultAction.redeemStrategyTokensToCash(uint256,uint256,bytes calldata) returns (int256,int256)"
                                                        }
                                                      },
                                                      "id": 2489,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": true,
                                                      "lValueRequested": false,
                                                      "memberName": "selector",
                                                      "nodeType": "MemberAccess",
                                                      "src": "9214:48:24",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_bytes4",
                                                        "typeString": "bytes4"
                                                      }
                                                    },
                                                    "src": "9207:55:24",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_bool",
                                                      "typeString": "bool"
                                                    }
                                                  },
                                                  "src": "8868:394:24",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                  }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "||",
                                                "rightExpression": {
                                                  "commonType": {
                                                    "typeIdentifier": "t_bytes4",
                                                    "typeString": "bytes4"
                                                  },
                                                  "id": 2496,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "leftExpression": {
                                                    "id": 2492,
                                                    "name": "sig",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 2144,
                                                    "src": "9278:3:24",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_bytes4",
                                                      "typeString": "bytes4"
                                                    }
                                                  },
                                                  "nodeType": "BinaryOperation",
                                                  "operator": "==",
                                                  "rightExpression": {
                                                    "expression": {
                                                      "expression": {
                                                        "id": 2493,
                                                        "name": "IVaultAction",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 66332,
                                                        "src": "9285:12:24",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_type$_t_contract$_IVaultAction_$66332_$",
                                                          "typeString": "type(contract IVaultAction)"
                                                        }
                                                      },
                                                      "id": 2494,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": true,
                                                      "lValueRequested": false,
                                                      "memberName": "borrowSecondaryCurrencyToVault",
                                                      "nodeType": "MemberAccess",
                                                      "referencedDeclaration": 66256,
                                                      "src": "9285:43:24",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_function_declaration_nonpayable$_t_uint16_$_t_uint256_$_t_uint256_$_t_uint32_$returns$_t_uint256_$",
                                                        "typeString": "function IVaultAction.borrowSecondaryCurrencyToVault(uint16,uint256,uint256,uint32) returns (uint256)"
                                                      }
                                                    },
                                                    "id": 2495,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "lValueRequested": false,
                                                    "memberName": "selector",
                                                    "nodeType": "MemberAccess",
                                                    "src": "9285:52:24",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_bytes4",
                                                      "typeString": "bytes4"
                                                    }
                                                  },
                                                  "src": "9278:59:24",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                  }
                                                },
                                                "src": "8868:469:24",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_bool",
                                                  "typeString": "bool"
                                                }
                                              },
                                              "nodeType": "BinaryOperation",
                                              "operator": "||",
                                              "rightExpression": {
                                                "commonType": {
                                                  "typeIdentifier": "t_bytes4",
                                                  "typeString": "bytes4"
                                                },
                                                "id": 2502,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                  "id": 2498,
                                                  "name": "sig",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 2144,
                                                  "src": "9353:3:24",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_bytes4",
                                                    "typeString": "bytes4"
                                                  }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "==",
                                                "rightExpression": {
                                                  "expression": {
                                                    "expression": {
                                                      "id": 2499,
                                                      "name": "IVaultAction",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 66332,
                                                      "src": "9360:12:24",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_type$_t_contract$_IVaultAction_$66332_$",
                                                        "typeString": "type(contract IVaultAction)"
                                                      }
                                                    },
                                                    "id": 2500,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "lValueRequested": false,
                                                    "memberName": "repaySecondaryCurrencyFromVault",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 66271,
                                                    "src": "9360:44:24",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_function_declaration_nonpayable$_t_uint16_$_t_uint256_$_t_uint256_$_t_uint32_$_t_bytes_calldata_ptr_$returns$_t_bytes_memory_ptr_$",
                                                      "typeString": "function IVaultAction.repaySecondaryCurrencyFromVault(uint16,uint256,uint256,uint32,bytes calldata) returns (bytes memory)"
                                                    }
                                                  },
                                                  "id": 2501,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": true,
                                                  "lValueRequested": false,
                                                  "memberName": "selector",
                                                  "nodeType": "MemberAccess",
                                                  "src": "9360:53:24",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_bytes4",
                                                    "typeString": "bytes4"
                                                  }
                                                },
                                                "src": "9353:60:24",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_bool",
                                                  "typeString": "bool"
                                                }
                                              },
                                              "src": "8868:545:24",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "||",
                                            "rightExpression": {
                                              "commonType": {
                                                "typeIdentifier": "t_bytes4",
                                                "typeString": "bytes4"
                                              },
                                              "id": 2508,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftExpression": {
                                                "id": 2504,
                                                "name": "sig",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 2144,
                                                "src": "9429:3:24",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_bytes4",
                                                  "typeString": "bytes4"
                                                }
                                              },
                                              "nodeType": "BinaryOperation",
                                              "operator": "==",
                                              "rightExpression": {
                                                "expression": {
                                                  "expression": {
                                                    "id": 2505,
                                                    "name": "IVaultAction",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 66332,
                                                    "src": "9436:12:24",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_type$_t_contract$_IVaultAction_$66332_$",
                                                      "typeString": "type(contract IVaultAction)"
                                                    }
                                                  },
                                                  "id": 2506,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": true,
                                                  "lValueRequested": false,
                                                  "memberName": "settleVault",
                                                  "nodeType": "MemberAccess",
                                                  "referencedDeclaration": 66279,
                                                  "src": "9436:24:24",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                                    "typeString": "function IVaultAction.settleVault(address,uint256)"
                                                  }
                                                },
                                                "id": 2507,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "lValueRequested": false,
                                                "memberName": "selector",
                                                "nodeType": "MemberAccess",
                                                "src": "9436:33:24",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_bytes4",
                                                  "typeString": "bytes4"
                                                }
                                              },
                                              "src": "9429:40:24",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                              }
                                            },
                                            "src": "8868:601:24",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bool",
                                              "typeString": "bool"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "||",
                                          "rightExpression": {
                                            "commonType": {
                                              "typeIdentifier": "t_bytes4",
                                              "typeString": "bytes4"
                                            },
                                            "id": 2514,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "id": 2510,
                                              "name": "sig",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 2144,
                                              "src": "9485:3:24",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_bytes4",
                                                "typeString": "bytes4"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "==",
                                            "rightExpression": {
                                              "expression": {
                                                "expression": {
                                                  "id": 2511,
                                                  "name": "IVaultAction",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 66332,
                                                  "src": "9492:12:24",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_contract$_IVaultAction_$66332_$",
                                                    "typeString": "type(contract IVaultAction)"
                                                  }
                                                },
                                                "id": 2512,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "lValueRequested": false,
                                                "memberName": "getVaultConfig",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 66287,
                                                "src": "9492:27:24",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_function_declaration_view$_t_address_$returns$_t_struct$_VaultConfig_$65944_memory_ptr_$",
                                                  "typeString": "function IVaultAction.getVaultConfig(address) view returns (struct VaultConfig memory)"
                                                }
                                              },
                                              "id": 2513,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "memberName": "selector",
                                              "nodeType": "MemberAccess",
                                              "src": "9492:36:24",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_bytes4",
                                                "typeString": "bytes4"
                                              }
                                            },
                                            "src": "9485:43:24",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bool",
                                              "typeString": "bool"
                                            }
                                          },
                                          "src": "8868:660:24",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "||",
                                        "rightExpression": {
                                          "commonType": {
                                            "typeIdentifier": "t_bytes4",
                                            "typeString": "bytes4"
                                          },
                                          "id": 2520,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "id": 2516,
                                            "name": "sig",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2144,
                                            "src": "9544:3:24",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bytes4",
                                              "typeString": "bytes4"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "==",
                                          "rightExpression": {
                                            "expression": {
                                              "expression": {
                                                "id": 2517,
                                                "name": "IVaultAction",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 66332,
                                                "src": "9551:12:24",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_type$_t_contract$_IVaultAction_$66332_$",
                                                  "typeString": "type(contract IVaultAction)"
                                                }
                                              },
                                              "id": 2518,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "memberName": "getBorrowCapacity",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": 66298,
                                              "src": "9551:30:24",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_function_declaration_view$_t_address_$_t_uint16_$returns$_t_uint256_$_t_uint256_$",
                                                "typeString": "function IVaultAction.getBorrowCapacity(address,uint16) view returns (uint256,uint256)"
                                              }
                                            },
                                            "id": 2519,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "memberName": "selector",
                                            "nodeType": "MemberAccess",
                                            "src": "9551:39:24",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bytes4",
                                              "typeString": "bytes4"
                                            }
                                          },
                                          "src": "9544:46:24",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          }
                                        },
                                        "src": "8868:722:24",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "||",
                                      "rightExpression": {
                                        "commonType": {
                                          "typeIdentifier": "t_bytes4",
                                          "typeString": "bytes4"
                                        },
                                        "id": 2526,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 2522,
                                          "name": "sig",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2144,
                                          "src": "9606:3:24",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes4",
                                            "typeString": "bytes4"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "==",
                                        "rightExpression": {
                                          "expression": {
                                            "expression": {
                                              "id": 2523,
                                              "name": "IVaultAction",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 66332,
                                              "src": "9613:12:24",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_contract$_IVaultAction_$66332_$",
                                                "typeString": "type(contract IVaultAction)"
                                              }
                                            },
                                            "id": 2524,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "memberName": "getSecondaryBorrow",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 66309,
                                            "src": "9613:31:24",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_declaration_view$_t_address_$_t_uint16_$_t_uint256_$returns$_t_uint256_$",
                                              "typeString": "function IVaultAction.getSecondaryBorrow(address,uint16,uint256) view returns (uint256)"
                                            }
                                          },
                                          "id": 2525,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "memberName": "selector",
                                          "nodeType": "MemberAccess",
                                          "src": "9613:40:24",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes4",
                                            "typeString": "bytes4"
                                          }
                                        },
                                        "src": "9606:47:24",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "src": "8868:785:24",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "||",
                                    "rightExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      },
                                      "id": 2532,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 2528,
                                        "name": "sig",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2144,
                                        "src": "9669:3:24",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes4",
                                          "typeString": "bytes4"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "==",
                                      "rightExpression": {
                                        "expression": {
                                          "expression": {
                                            "id": 2529,
                                            "name": "IVaultAction",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 66332,
                                            "src": "9676:12:24",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_contract$_IVaultAction_$66332_$",
                                              "typeString": "type(contract IVaultAction)"
                                            }
                                          },
                                          "id": 2530,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "memberName": "getVaultState",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 66319,
                                          "src": "9676:26:24",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_declaration_view$_t_address_$_t_uint256_$returns$_t_struct$_VaultState_$65972_memory_ptr_$",
                                            "typeString": "function IVaultAction.getVaultState(address,uint256) view returns (struct VaultState memory)"
                                          }
                                        },
                                        "id": 2531,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberName": "selector",
                                        "nodeType": "MemberAccess",
                                        "src": "9676:35:24",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes4",
                                          "typeString": "bytes4"
                                        }
                                      },
                                      "src": "9669:42:24",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "src": "8868:843:24",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "||",
                                  "rightExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    },
                                    "id": 2538,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 2534,
                                      "name": "sig",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2144,
                                      "src": "9727:3:24",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "expression": {
                                        "expression": {
                                          "id": 2535,
                                          "name": "IVaultAction",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 66332,
                                          "src": "9734:12:24",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_contract$_IVaultAction_$66332_$",
                                            "typeString": "type(contract IVaultAction)"
                                          }
                                        },
                                        "id": 2536,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberName": "getCashRequiredToSettle",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 66331,
                                        "src": "9734:36:24",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_declaration_view$_t_address_$_t_uint256_$returns$_t_int256_$_t_int256_$",
                                          "typeString": "function IVaultAction.getCashRequiredToSettle(address,uint256) view returns (int256,int256)"
                                        }
                                      },
                                      "id": 2537,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberName": "selector",
                                      "nodeType": "MemberAccess",
                                      "src": "9734:45:24",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    },
                                    "src": "9727:52:24",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "src": "8868:911:24",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "falseBody": {
                                  "condition": {
                                    "commonType": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    "id": 2553,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      },
                                      "id": 2547,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 2543,
                                        "name": "sig",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2144,
                                        "src": "9857:3:24",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes4",
                                          "typeString": "bytes4"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "==",
                                      "rightExpression": {
                                        "expression": {
                                          "expression": {
                                            "id": 2544,
                                            "name": "NotionalProxy",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 65530,
                                            "src": "9864:13:24",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_contract$_NotionalProxy_$65530_$",
                                              "typeString": "type(contract NotionalProxy)"
                                            }
                                          },
                                          "id": 2545,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "memberName": "initializeMarkets",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 65284,
                                          "src": "9864:31:24",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_declaration_nonpayable$_t_uint16_$_t_bool_$returns$__$",
                                            "typeString": "function NotionalProxy.initializeMarkets(uint16,bool)"
                                          }
                                        },
                                        "id": 2546,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberName": "selector",
                                        "nodeType": "MemberAccess",
                                        "src": "9864:40:24",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes4",
                                          "typeString": "bytes4"
                                        }
                                      },
                                      "src": "9857:47:24",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "||",
                                    "rightExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      },
                                      "id": 2552,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 2548,
                                        "name": "sig",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2144,
                                        "src": "9920:3:24",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes4",
                                          "typeString": "bytes4"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "==",
                                      "rightExpression": {
                                        "expression": {
                                          "expression": {
                                            "id": 2549,
                                            "name": "NotionalProxy",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 65530,
                                            "src": "9927:13:24",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_contract$_NotionalProxy_$65530_$",
                                              "typeString": "type(contract NotionalProxy)"
                                            }
                                          },
                                          "id": 2550,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "memberName": "sweepCashIntoMarkets",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 65289,
                                          "src": "9927:34:24",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_declaration_nonpayable$_t_uint16_$returns$__$",
                                            "typeString": "function NotionalProxy.sweepCashIntoMarkets(uint16)"
                                          }
                                        },
                                        "id": 2551,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberName": "selector",
                                        "nodeType": "MemberAccess",
                                        "src": "9927:43:24",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes4",
                                          "typeString": "bytes4"
                                        }
                                      },
                                      "src": "9920:50:24",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "src": "9857:113:24",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "falseBody": {
                                    "condition": {
                                      "commonType": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      },
                                      "id": 2663,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "commonType": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        },
                                        "id": 2657,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "commonType": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          },
                                          "id": 2651,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "commonType": {
                                              "typeIdentifier": "t_bool",
                                              "typeString": "bool"
                                            },
                                            "id": 2645,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "commonType": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                              },
                                              "id": 2639,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftExpression": {
                                                "commonType": {
                                                  "typeIdentifier": "t_bool",
                                                  "typeString": "bool"
                                                },
                                                "id": 2633,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                  "commonType": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                  },
                                                  "id": 2627,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "leftExpression": {
                                                    "commonType": {
                                                      "typeIdentifier": "t_bool",
                                                      "typeString": "bool"
                                                    },
                                                    "id": 2621,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "leftExpression": {
                                                      "commonType": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                      },
                                                      "id": 2615,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "leftExpression": {
                                                        "commonType": {
                                                          "typeIdentifier": "t_bool",
                                                          "typeString": "bool"
                                                        },
                                                        "id": 2609,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "leftExpression": {
                                                          "commonType": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                          },
                                                          "id": 2603,
                                                          "isConstant": false,
                                                          "isLValue": false,
                                                          "isPure": false,
                                                          "lValueRequested": false,
                                                          "leftExpression": {
                                                            "commonType": {
                                                              "typeIdentifier": "t_bool",
                                                              "typeString": "bool"
                                                            },
                                                            "id": 2597,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "leftExpression": {
                                                              "commonType": {
                                                                "typeIdentifier": "t_bool",
                                                                "typeString": "bool"
                                                              },
                                                              "id": 2591,
                                                              "isConstant": false,
                                                              "isLValue": false,
                                                              "isPure": false,
                                                              "lValueRequested": false,
                                                              "leftExpression": {
                                                                "commonType": {
                                                                  "typeIdentifier": "t_bool",
                                                                  "typeString": "bool"
                                                                },
                                                                "id": 2585,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": false,
                                                                "lValueRequested": false,
                                                                "leftExpression": {
                                                                  "commonType": {
                                                                    "typeIdentifier": "t_bool",
                                                                    "typeString": "bool"
                                                                  },
                                                                  "id": 2579,
                                                                  "isConstant": false,
                                                                  "isLValue": false,
                                                                  "isPure": false,
                                                                  "lValueRequested": false,
                                                                  "leftExpression": {
                                                                    "commonType": {
                                                                      "typeIdentifier": "t_bool",
                                                                      "typeString": "bool"
                                                                    },
                                                                    "id": 2573,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": false,
                                                                    "lValueRequested": false,
                                                                    "leftExpression": {
                                                                      "commonType": {
                                                                        "typeIdentifier": "t_bool",
                                                                        "typeString": "bool"
                                                                      },
                                                                      "id": 2567,
                                                                      "isConstant": false,
                                                                      "isLValue": false,
                                                                      "isPure": false,
                                                                      "lValueRequested": false,
                                                                      "leftExpression": {
                                                                        "commonType": {
                                                                          "typeIdentifier": "t_bytes4",
                                                                          "typeString": "bytes4"
                                                                        },
                                                                        "id": 2561,
                                                                        "isConstant": false,
                                                                        "isLValue": false,
                                                                        "isPure": false,
                                                                        "lValueRequested": false,
                                                                        "leftExpression": {
                                                                          "id": 2557,
                                                                          "name": "sig",
                                                                          "nodeType": "Identifier",
                                                                          "overloadedDeclarations": [],
                                                                          "referencedDeclaration": 2144,
                                                                          "src": "10053:3:24",
                                                                          "typeDescriptions": {
                                                                            "typeIdentifier": "t_bytes4",
                                                                            "typeString": "bytes4"
                                                                          }
                                                                        },
                                                                        "nodeType": "BinaryOperation",
                                                                        "operator": "==",
                                                                        "rightExpression": {
                                                                          "expression": {
                                                                            "expression": {
                                                                              "id": 2558,
                                                                              "name": "NotionalGovernance",
                                                                              "nodeType": "Identifier",
                                                                              "overloadedDeclarations": [],
                                                                              "referencedDeclaration": 66684,
                                                                              "src": "10060:18:24",
                                                                              "typeDescriptions": {
                                                                                "typeIdentifier": "t_type$_t_contract$_NotionalGovernance_$66684_$",
                                                                                "typeString": "type(contract NotionalGovernance)"
                                                                              }
                                                                            },
                                                                            "id": 2559,
                                                                            "isConstant": false,
                                                                            "isLValue": false,
                                                                            "isPure": true,
                                                                            "lValueRequested": false,
                                                                            "memberName": "listCurrency",
                                                                            "nodeType": "MemberAccess",
                                                                            "referencedDeclaration": 66564,
                                                                            "src": "10060:31:24",
                                                                            "typeDescriptions": {
                                                                              "typeIdentifier": "t_function_declaration_nonpayable$_t_struct$_TokenStorage_$65751_calldata_ptr_$_t_struct$_TokenStorage_$65751_calldata_ptr_$_t_contract$_AggregatorV2V3Interface_$67638_$_t_bool_$_t_uint8_$_t_uint8_$_t_uint8_$returns$_t_uint16_$",
                                                                              "typeString": "function NotionalGovernance.listCurrency(struct TokenStorage calldata,struct TokenStorage calldata,contract AggregatorV2V3Interface,bool,uint8,uint8,uint8) returns (uint16)"
                                                                            }
                                                                          },
                                                                          "id": 2560,
                                                                          "isConstant": false,
                                                                          "isLValue": false,
                                                                          "isPure": true,
                                                                          "lValueRequested": false,
                                                                          "memberName": "selector",
                                                                          "nodeType": "MemberAccess",
                                                                          "src": "10060:40:24",
                                                                          "typeDescriptions": {
                                                                            "typeIdentifier": "t_bytes4",
                                                                            "typeString": "bytes4"
                                                                          }
                                                                        },
                                                                        "src": "10053:47:24",
                                                                        "typeDescriptions": {
                                                                          "typeIdentifier": "t_bool",
                                                                          "typeString": "bool"
                                                                        }
                                                                      },
                                                                      "nodeType": "BinaryOperation",
                                                                      "operator": "||",
                                                                      "rightExpression": {
                                                                        "commonType": {
                                                                          "typeIdentifier": "t_bytes4",
                                                                          "typeString": "bytes4"
                                                                        },
                                                                        "id": 2566,
                                                                        "isConstant": false,
                                                                        "isLValue": false,
                                                                        "isPure": false,
                                                                        "lValueRequested": false,
                                                                        "leftExpression": {
                                                                          "id": 2562,
                                                                          "name": "sig",
                                                                          "nodeType": "Identifier",
                                                                          "overloadedDeclarations": [],
                                                                          "referencedDeclaration": 2144,
                                                                          "src": "10116:3:24",
                                                                          "typeDescriptions": {
                                                                            "typeIdentifier": "t_bytes4",
                                                                            "typeString": "bytes4"
                                                                          }
                                                                        },
                                                                        "nodeType": "BinaryOperation",
                                                                        "operator": "==",
                                                                        "rightExpression": {
                                                                          "expression": {
                                                                            "expression": {
                                                                              "id": 2563,
                                                                              "name": "NotionalGovernance",
                                                                              "nodeType": "Identifier",
                                                                              "overloadedDeclarations": [],
                                                                              "referencedDeclaration": 66684,
                                                                              "src": "10123:18:24",
                                                                              "typeDescriptions": {
                                                                                "typeIdentifier": "t_type$_t_contract$_NotionalGovernance_$66684_$",
                                                                                "typeString": "type(contract NotionalGovernance)"
                                                                              }
                                                                            },
                                                                            "id": 2564,
                                                                            "isConstant": false,
                                                                            "isLValue": false,
                                                                            "isPure": true,
                                                                            "lValueRequested": false,
                                                                            "memberName": "enableCashGroup",
                                                                            "nodeType": "MemberAccess",
                                                                            "referencedDeclaration": 66584,
                                                                            "src": "10123:34:24",
                                                                            "typeDescriptions": {
                                                                              "typeIdentifier": "t_function_declaration_nonpayable$_t_uint16_$_t_contract$_AssetRateAdapter_$67682_$_t_struct$_CashGroupSettings_$65794_calldata_ptr_$_t_string_calldata_ptr_$_t_string_calldata_ptr_$returns$__$",
                                                                              "typeString": "function NotionalGovernance.enableCashGroup(uint16,contract AssetRateAdapter,struct CashGroupSettings calldata,string calldata,string calldata)"
                                                                            }
                                                                          },
                                                                          "id": 2565,
                                                                          "isConstant": false,
                                                                          "isLValue": false,
                                                                          "isPure": true,
                                                                          "lValueRequested": false,
                                                                          "memberName": "selector",
                                                                          "nodeType": "MemberAccess",
                                                                          "src": "10123:43:24",
                                                                          "typeDescriptions": {
                                                                            "typeIdentifier": "t_bytes4",
                                                                            "typeString": "bytes4"
                                                                          }
                                                                        },
                                                                        "src": "10116:50:24",
                                                                        "typeDescriptions": {
                                                                          "typeIdentifier": "t_bool",
                                                                          "typeString": "bool"
                                                                        }
                                                                      },
                                                                      "src": "10053:113:24",
                                                                      "typeDescriptions": {
                                                                        "typeIdentifier": "t_bool",
                                                                        "typeString": "bool"
                                                                      }
                                                                    },
                                                                    "nodeType": "BinaryOperation",
                                                                    "operator": "||",
                                                                    "rightExpression": {
                                                                      "commonType": {
                                                                        "typeIdentifier": "t_bytes4",
                                                                        "typeString": "bytes4"
                                                                      },
                                                                      "id": 2572,
                                                                      "isConstant": false,
                                                                      "isLValue": false,
                                                                      "isPure": false,
                                                                      "lValueRequested": false,
                                                                      "leftExpression": {
                                                                        "id": 2568,
                                                                        "name": "sig",
                                                                        "nodeType": "Identifier",
                                                                        "overloadedDeclarations": [],
                                                                        "referencedDeclaration": 2144,
                                                                        "src": "10182:3:24",
                                                                        "typeDescriptions": {
                                                                          "typeIdentifier": "t_bytes4",
                                                                          "typeString": "bytes4"
                                                                        }
                                                                      },
                                                                      "nodeType": "BinaryOperation",
                                                                      "operator": "==",
                                                                      "rightExpression": {
                                                                        "expression": {
                                                                          "expression": {
                                                                            "id": 2569,
                                                                            "name": "NotionalGovernance",
                                                                            "nodeType": "Identifier",
                                                                            "overloadedDeclarations": [],
                                                                            "referencedDeclaration": 66684,
                                                                            "src": "10189:18:24",
                                                                            "typeDescriptions": {
                                                                              "typeIdentifier": "t_type$_t_contract$_NotionalGovernance_$66684_$",
                                                                              "typeString": "type(contract NotionalGovernance)"
                                                                            }
                                                                          },
                                                                          "id": 2570,
                                                                          "isConstant": false,
                                                                          "isLValue": false,
                                                                          "isPure": true,
                                                                          "lValueRequested": false,
                                                                          "memberName": "updateCashGroup",
                                                                          "nodeType": "MemberAccess",
                                                                          "referencedDeclaration": 66635,
                                                                          "src": "10189:34:24",
                                                                          "typeDescriptions": {
                                                                            "typeIdentifier": "t_function_declaration_nonpayable$_t_uint16_$_t_struct$_CashGroupSettings_$65794_calldata_ptr_$returns$__$",
                                                                            "typeString": "function NotionalGovernance.updateCashGroup(uint16,struct CashGroupSettings calldata)"
                                                                          }
                                                                        },
                                                                        "id": 2571,
                                                                        "isConstant": false,
                                                                        "isLValue": false,
                                                                        "isPure": true,
                                                                        "lValueRequested": false,
                                                                        "memberName": "selector",
                                                                        "nodeType": "MemberAccess",
                                                                        "src": "10189:43:24",
                                                                        "typeDescriptions": {
                                                                          "typeIdentifier": "t_bytes4",
                                                                          "typeString": "bytes4"
                                                                        }
                                                                      },
                                                                      "src": "10182:50:24",
                                                                      "typeDescriptions": {
                                                                        "typeIdentifier": "t_bool",
                                                                        "typeString": "bool"
                                                                      }
                                                                    },
                                                                    "src": "10053:179:24",
                                                                    "typeDescriptions": {
                                                                      "typeIdentifier": "t_bool",
                                                                      "typeString": "bool"
                                                                    }
                                                                  },
                                                                  "nodeType": "BinaryOperation",
                                                                  "operator": "||",
                                                                  "rightExpression": {
                                                                    "commonType": {
                                                                      "typeIdentifier": "t_bytes4",
                                                                      "typeString": "bytes4"
                                                                    },
                                                                    "id": 2578,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": false,
                                                                    "lValueRequested": false,
                                                                    "leftExpression": {
                                                                      "id": 2574,
                                                                      "name": "sig",
                                                                      "nodeType": "Identifier",
                                                                      "overloadedDeclarations": [],
                                                                      "referencedDeclaration": 2144,
                                                                      "src": "10248:3:24",
                                                                      "typeDescriptions": {
                                                                        "typeIdentifier": "t_bytes4",
                                                                        "typeString": "bytes4"
                                                                      }
                                                                    },
                                                                    "nodeType": "BinaryOperation",
                                                                    "operator": "==",
                                                                    "rightExpression": {
                                                                      "expression": {
                                                                        "expression": {
                                                                          "id": 2575,
                                                                          "name": "NotionalGovernance",
                                                                          "nodeType": "Identifier",
                                                                          "overloadedDeclarations": [],
                                                                          "referencedDeclaration": 66684,
                                                                          "src": "10255:18:24",
                                                                          "typeDescriptions": {
                                                                            "typeIdentifier": "t_type$_t_contract$_NotionalGovernance_$66684_$",
                                                                            "typeString": "type(contract NotionalGovernance)"
                                                                          }
                                                                        },
                                                                        "id": 2576,
                                                                        "isConstant": false,
                                                                        "isLValue": false,
                                                                        "isPure": true,
                                                                        "lValueRequested": false,
                                                                        "memberName": "updateAssetRate",
                                                                        "nodeType": "MemberAccess",
                                                                        "referencedDeclaration": 66642,
                                                                        "src": "10255:34:24",
                                                                        "typeDescriptions": {
                                                                          "typeIdentifier": "t_function_declaration_nonpayable$_t_uint16_$_t_contract$_AssetRateAdapter_$67682_$returns$__$",
                                                                          "typeString": "function NotionalGovernance.updateAssetRate(uint16,contract AssetRateAdapter)"
                                                                        }
                                                                      },
                                                                      "id": 2577,
                                                                      "isConstant": false,
                                                                      "isLValue": false,
                                                                      "isPure": true,
                                                                      "lValueRequested": false,
                                                                      "memberName": "selector",
                                                                      "nodeType": "MemberAccess",
                                                                      "src": "10255:43:24",
                                                                      "typeDescriptions": {
                                                                        "typeIdentifier": "t_bytes4",
                                                                        "typeString": "bytes4"
                                                                      }
                                                                    },
                                                                    "src": "10248:50:24",
                                                                    "typeDescriptions": {
                                                                      "typeIdentifier": "t_bool",
                                                                      "typeString": "bool"
                                                                    }
                                                                  },
                                                                  "src": "10053:245:24",
                                                                  "typeDescriptions": {
                                                                    "typeIdentifier": "t_bool",
                                                                    "typeString": "bool"
                                                                  }
                                                                },
                                                                "nodeType": "BinaryOperation",
                                                                "operator": "||",
                                                                "rightExpression": {
                                                                  "commonType": {
                                                                    "typeIdentifier": "t_bytes4",
                                                                    "typeString": "bytes4"
                                                                  },
                                                                  "id": 2584,
                                                                  "isConstant": false,
                                                                  "isLValue": false,
                                                                  "isPure": false,
                                                                  "lValueRequested": false,
                                                                  "leftExpression": {
                                                                    "id": 2580,
                                                                    "name": "sig",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 2144,
                                                                    "src": "10314:3:24",
                                                                    "typeDescriptions": {
                                                                      "typeIdentifier": "t_bytes4",
                                                                      "typeString": "bytes4"
                                                                    }
                                                                  },
                                                                  "nodeType": "BinaryOperation",
                                                                  "operator": "==",
                                                                  "rightExpression": {
                                                                    "expression": {
                                                                      "expression": {
                                                                        "id": 2581,
                                                                        "name": "NotionalGovernance",
                                                                        "nodeType": "Identifier",
                                                                        "overloadedDeclarations": [],
                                                                        "referencedDeclaration": 66684,
                                                                        "src": "10321:18:24",
                                                                        "typeDescriptions": {
                                                                          "typeIdentifier": "t_type$_t_contract$_NotionalGovernance_$66684_$",
                                                                          "typeString": "type(contract NotionalGovernance)"
                                                                        }
                                                                      },
                                                                      "id": 2582,
                                                                      "isConstant": false,
                                                                      "isLValue": false,
                                                                      "isPure": true,
                                                                      "lValueRequested": false,
                                                                      "memberName": "updateETHRate",
                                                                      "nodeType": "MemberAccess",
                                                                      "referencedDeclaration": 66657,
                                                                      "src": "10321:32:24",
                                                                      "typeDescriptions": {
                                                                        "typeIdentifier": "t_function_declaration_nonpayable$_t_uint16_$_t_contract$_AggregatorV2V3Interface_$67638_$_t_bool_$_t_uint8_$_t_uint8_$_t_uint8_$returns$__$",
                                                                        "typeString": "function NotionalGovernance.updateETHRate(uint16,contract AggregatorV2V3Interface,bool,uint8,uint8,uint8)"
                                                                      }
                                                                    },
                                                                    "id": 2583,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": true,
                                                                    "lValueRequested": false,
                                                                    "memberName": "selector",
                                                                    "nodeType": "MemberAccess",
                                                                    "src": "10321:41:24",
                                                                    "typeDescriptions": {
                                                                      "typeIdentifier": "t_bytes4",
                                                                      "typeString": "bytes4"
                                                                    }
                                                                  },
                                                                  "src": "10314:48:24",
                                                                  "typeDescriptions": {
                                                                    "typeIdentifier": "t_bool",
                                                                    "typeString": "bool"
                                                                  }
                                                                },
                                                                "src": "10053:309:24",
                                                                "typeDescriptions": {
                                                                  "typeIdentifier": "t_bool",
                                                                  "typeString": "bool"
                                                                }
                                                              },
                                                              "nodeType": "BinaryOperation",
                                                              "operator": "||",
                                                              "rightExpression": {
                                                                "commonType": {
                                                                  "typeIdentifier": "t_bytes4",
                                                                  "typeString": "bytes4"
                                                                },
                                                                "id": 2590,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": false,
                                                                "lValueRequested": false,
                                                                "leftExpression": {
                                                                  "id": 2586,
                                                                  "name": "sig",
                                                                  "nodeType": "Identifier",
                                                                  "overloadedDeclarations": [],
                                                                  "referencedDeclaration": 2144,
                                                                  "src": "10378:3:24",
                                                                  "typeDescriptions": {
                                                                    "typeIdentifier": "t_bytes4",
                                                                    "typeString": "bytes4"
                                                                  }
                                                                },
                                                                "nodeType": "BinaryOperation",
                                                                "operator": "==",
                                                                "rightExpression": {
                                                                  "expression": {
                                                                    "expression": {
                                                                      "id": 2587,
                                                                      "name": "NotionalGovernance",
                                                                      "nodeType": "Identifier",
                                                                      "overloadedDeclarations": [],
                                                                      "referencedDeclaration": 66684,
                                                                      "src": "10385:18:24",
                                                                      "typeDescriptions": {
                                                                        "typeIdentifier": "t_type$_t_contract$_NotionalGovernance_$66684_$",
                                                                        "typeString": "type(contract NotionalGovernance)"
                                                                      }
                                                                    },
                                                                    "id": 2588,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": true,
                                                                    "lValueRequested": false,
                                                                    "memberName": "transferOwnership",
                                                                    "nodeType": "MemberAccess",
                                                                    "referencedDeclaration": 66530,
                                                                    "src": "10385:36:24",
                                                                    "typeDescriptions": {
                                                                      "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_bool_$returns$__$",
                                                                      "typeString": "function NotionalGovernance.transferOwnership(address,bool)"
                                                                    }
                                                                  },
                                                                  "id": 2589,
                                                                  "isConstant": false,
                                                                  "isLValue": false,
                                                                  "isPure": true,
                                                                  "lValueRequested": false,
                                                                  "memberName": "selector",
                                                                  "nodeType": "MemberAccess",
                                                                  "src": "10385:45:24",
                                                                  "typeDescriptions": {
                                                                    "typeIdentifier": "t_bytes4",
                                                                    "typeString": "bytes4"
                                                                  }
                                                                },
                                                                "src": "10378:52:24",
                                                                "typeDescriptions": {
                                                                  "typeIdentifier": "t_bool",
                                                                  "typeString": "bool"
                                                                }
                                                              },
                                                              "src": "10053:377:24",
                                                              "typeDescriptions": {
                                                                "typeIdentifier": "t_bool",
                                                                "typeString": "bool"
                                                              }
                                                            },
                                                            "nodeType": "BinaryOperation",
                                                            "operator": "||",
                                                            "rightExpression": {
                                                              "commonType": {
                                                                "typeIdentifier": "t_bytes4",
                                                                "typeString": "bytes4"
                                                              },
                                                              "id": 2596,
                                                              "isConstant": false,
                                                              "isLValue": false,
                                                              "isPure": false,
                                                              "lValueRequested": false,
                                                              "leftExpression": {
                                                                "id": 2592,
                                                                "name": "sig",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 2144,
                                                                "src": "10446:3:24",
                                                                "typeDescriptions": {
                                                                  "typeIdentifier": "t_bytes4",
                                                                  "typeString": "bytes4"
                                                                }
                                                              },
                                                              "nodeType": "BinaryOperation",
                                                              "operator": "==",
                                                              "rightExpression": {
                                                                "expression": {
                                                                  "expression": {
                                                                    "id": 2593,
                                                                    "name": "NotionalGovernance",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 66684,
                                                                    "src": "10453:18:24",
                                                                    "typeDescriptions": {
                                                                      "typeIdentifier": "t_type$_t_contract$_NotionalGovernance_$66684_$",
                                                                      "typeString": "type(contract NotionalGovernance)"
                                                                    }
                                                                  },
                                                                  "id": 2594,
                                                                  "isConstant": false,
                                                                  "isLValue": false,
                                                                  "isPure": true,
                                                                  "lValueRequested": false,
                                                                  "memberName": "claimOwnership",
                                                                  "nodeType": "MemberAccess",
                                                                  "referencedDeclaration": 66533,
                                                                  "src": "10453:33:24",
                                                                  "typeDescriptions": {
                                                                    "typeIdentifier": "t_function_declaration_nonpayable$__$returns$__$",
                                                                    "typeString": "function NotionalGovernance.claimOwnership()"
                                                                  }
                                                                },
                                                                "id": 2595,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": true,
                                                                "lValueRequested": false,
                                                                "memberName": "selector",
                                                                "nodeType": "MemberAccess",
                                                                "src": "10453:42:24",
                                                                "typeDescriptions": {
                                                                  "typeIdentifier": "t_bytes4",
                                                                  "typeString": "bytes4"
                                                                }
                                                              },
                                                              "src": "10446:49:24",
                                                              "typeDescriptions": {
                                                                "typeIdentifier": "t_bool",
                                                                "typeString": "bool"
                                                              }
                                                            },
                                                            "src": "10053:442:24",
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_bool",
                                                              "typeString": "bool"
                                                            }
                                                          },
                                                          "nodeType": "BinaryOperation",
                                                          "operator": "||",
                                                          "rightExpression": {
                                                            "commonType": {
                                                              "typeIdentifier": "t_bytes4",
                                                              "typeString": "bytes4"
                                                            },
                                                            "id": 2602,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "leftExpression": {
                                                              "id": 2598,
                                                              "name": "sig",
                                                              "nodeType": "Identifier",
                                                              "overloadedDeclarations": [],
                                                              "referencedDeclaration": 2144,
                                                              "src": "10511:3:24",
                                                              "typeDescriptions": {
                                                                "typeIdentifier": "t_bytes4",
                                                                "typeString": "bytes4"
                                                              }
                                                            },
                                                            "nodeType": "BinaryOperation",
                                                            "operator": "==",
                                                            "rightExpression": {
                                                              "expression": {
                                                                "expression": {
                                                                  "id": 2599,
                                                                  "name": "NotionalGovernance",
                                                                  "nodeType": "Identifier",
                                                                  "overloadedDeclarations": [],
                                                                  "referencedDeclaration": 66684,
                                                                  "src": "10518:18:24",
                                                                  "typeDescriptions": {
                                                                    "typeIdentifier": "t_type$_t_contract$_NotionalGovernance_$66684_$",
                                                                    "typeString": "type(contract NotionalGovernance)"
                                                                  }
                                                                },
                                                                "id": 2600,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": true,
                                                                "lValueRequested": false,
                                                                "memberName": "updateIncentiveEmissionRate",
                                                                "nodeType": "MemberAccess",
                                                                "referencedDeclaration": 66613,
                                                                "src": "10518:46:24",
                                                                "typeDescriptions": {
                                                                  "typeIdentifier": "t_function_declaration_nonpayable$_t_uint16_$_t_uint32_$returns$__$",
                                                                  "typeString": "function NotionalGovernance.updateIncentiveEmissionRate(uint16,uint32)"
                                                                }
                                                              },
                                                              "id": 2601,
                                                              "isConstant": false,
                                                              "isLValue": false,
                                                              "isPure": true,
                                                              "lValueRequested": false,
                                                              "memberName": "selector",
                                                              "nodeType": "MemberAccess",
                                                              "src": "10518:55:24",
                                                              "typeDescriptions": {
                                                                "typeIdentifier": "t_bytes4",
                                                                "typeString": "bytes4"
                                                              }
                                                            },
                                                            "src": "10511:62:24",
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_bool",
                                                              "typeString": "bool"
                                                            }
                                                          },
                                                          "src": "10053:520:24",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                          }
                                                        },
                                                        "nodeType": "BinaryOperation",
                                                        "operator": "||",
                                                        "rightExpression": {
                                                          "commonType": {
                                                            "typeIdentifier": "t_bytes4",
                                                            "typeString": "bytes4"
                                                          },
                                                          "id": 2608,
                                                          "isConstant": false,
                                                          "isLValue": false,
                                                          "isPure": false,
                                                          "lValueRequested": false,
                                                          "leftExpression": {
                                                            "id": 2604,
                                                            "name": "sig",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 2144,
                                                            "src": "10589:3:24",
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_bytes4",
                                                              "typeString": "bytes4"
                                                            }
                                                          },
                                                          "nodeType": "BinaryOperation",
                                                          "operator": "==",
                                                          "rightExpression": {
                                                            "expression": {
                                                              "expression": {
                                                                "id": 2605,
                                                                "name": "NotionalGovernance",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 66684,
                                                                "src": "10596:18:24",
                                                                "typeDescriptions": {
                                                                  "typeIdentifier": "t_type$_t_contract$_NotionalGovernance_$66684_$",
                                                                  "typeString": "type(contract NotionalGovernance)"
                                                                }
                                                              },
                                                              "id": 2606,
                                                              "isConstant": false,
                                                              "isLValue": false,
                                                              "isPure": true,
                                                              "lValueRequested": false,
                                                              "memberName": "updateMaxCollateralBalance",
                                                              "nodeType": "MemberAccess",
                                                              "referencedDeclaration": 66571,
                                                              "src": "10596:45:24",
                                                              "typeDescriptions": {
                                                                "typeIdentifier": "t_function_declaration_nonpayable$_t_uint16_$_t_uint72_$returns$__$",
                                                                "typeString": "function NotionalGovernance.updateMaxCollateralBalance(uint16,uint72)"
                                                              }
                                                            },
                                                            "id": 2607,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "lValueRequested": false,
                                                            "memberName": "selector",
                                                            "nodeType": "MemberAccess",
                                                            "src": "10596:54:24",
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_bytes4",
                                                              "typeString": "bytes4"
                                                            }
                                                          },
                                                          "src": "10589:61:24",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                          }
                                                        },
                                                        "src": "10053:597:24",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_bool",
                                                          "typeString": "bool"
                                                        }
                                                      },
                                                      "nodeType": "BinaryOperation",
                                                      "operator": "||",
                                                      "rightExpression": {
                                                        "commonType": {
                                                          "typeIdentifier": "t_bytes4",
                                                          "typeString": "bytes4"
                                                        },
                                                        "id": 2614,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "leftExpression": {
                                                          "id": 2610,
                                                          "name": "sig",
                                                          "nodeType": "Identifier",
                                                          "overloadedDeclarations": [],
                                                          "referencedDeclaration": 2144,
                                                          "src": "10666:3:24",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_bytes4",
                                                            "typeString": "bytes4"
                                                          }
                                                        },
                                                        "nodeType": "BinaryOperation",
                                                        "operator": "==",
                                                        "rightExpression": {
                                                          "expression": {
                                                            "expression": {
                                                              "id": 2611,
                                                              "name": "NotionalGovernance",
                                                              "nodeType": "Identifier",
                                                              "overloadedDeclarations": [],
                                                              "referencedDeclaration": 66684,
                                                              "src": "10673:18:24",
                                                              "typeDescriptions": {
                                                                "typeIdentifier": "t_type$_t_contract$_NotionalGovernance_$66684_$",
                                                                "typeString": "type(contract NotionalGovernance)"
                                                              }
                                                            },
                                                            "id": 2612,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "lValueRequested": false,
                                                            "memberName": "updateDepositParameters",
                                                            "nodeType": "MemberAccess",
                                                            "referencedDeclaration": 66595,
                                                            "src": "10673:42:24",
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_function_declaration_nonpayable$_t_uint16_$_t_array$_t_uint32_$dyn_calldata_ptr_$_t_array$_t_uint32_$dyn_calldata_ptr_$returns$__$",
                                                              "typeString": "function NotionalGovernance.updateDepositParameters(uint16,uint32[] calldata,uint32[] calldata)"
                                                            }
                                                          },
                                                          "id": 2613,
                                                          "isConstant": false,
                                                          "isLValue": false,
                                                          "isPure": true,
                                                          "lValueRequested": false,
                                                          "memberName": "selector",
                                                          "nodeType": "MemberAccess",
                                                          "src": "10673:51:24",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_bytes4",
                                                            "typeString": "bytes4"
                                                          }
                                                        },
                                                        "src": "10666:58:24",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_bool",
                                                          "typeString": "bool"
                                                        }
                                                      },
                                                      "src": "10053:671:24",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                      }
                                                    },
                                                    "nodeType": "BinaryOperation",
                                                    "operator": "||",
                                                    "rightExpression": {
                                                      "commonType": {
                                                        "typeIdentifier": "t_bytes4",
                                                        "typeString": "bytes4"
                                                      },
                                                      "id": 2620,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "leftExpression": {
                                                        "id": 2616,
                                                        "name": "sig",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 2144,
                                                        "src": "10740:3:24",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_bytes4",
                                                          "typeString": "bytes4"
                                                        }
                                                      },
                                                      "nodeType": "BinaryOperation",
                                                      "operator": "==",
                                                      "rightExpression": {
                                                        "expression": {
                                                          "expression": {
                                                            "id": 2617,
                                                            "name": "NotionalGovernance",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 66684,
                                                            "src": "10747:18:24",
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_type$_t_contract$_NotionalGovernance_$66684_$",
                                                              "typeString": "type(contract NotionalGovernance)"
                                                            }
                                                          },
                                                          "id": 2618,
                                                          "isConstant": false,
                                                          "isLValue": false,
                                                          "isPure": true,
                                                          "lValueRequested": false,
                                                          "memberName": "updateInitializationParameters",
                                                          "nodeType": "MemberAccess",
                                                          "referencedDeclaration": 66606,
                                                          "src": "10747:49:24",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_function_declaration_nonpayable$_t_uint16_$_t_array$_t_uint32_$dyn_calldata_ptr_$_t_array$_t_uint32_$dyn_calldata_ptr_$returns$__$",
                                                            "typeString": "function NotionalGovernance.updateInitializationParameters(uint16,uint32[] calldata,uint32[] calldata)"
                                                          }
                                                        },
                                                        "id": 2619,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "lValueRequested": false,
                                                        "memberName": "selector",
                                                        "nodeType": "MemberAccess",
                                                        "src": "10747:58:24",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_bytes4",
                                                          "typeString": "bytes4"
                                                        }
                                                      },
                                                      "src": "10740:65:24",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                      }
                                                    },
                                                    "src": "10053:752:24",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_bool",
                                                      "typeString": "bool"
                                                    }
                                                  },
                                                  "nodeType": "BinaryOperation",
                                                  "operator": "||",
                                                  "rightExpression": {
                                                    "commonType": {
                                                      "typeIdentifier": "t_bytes4",
                                                      "typeString": "bytes4"
                                                    },
                                                    "id": 2626,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "leftExpression": {
                                                      "id": 2622,
                                                      "name": "sig",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 2144,
                                                      "src": "10821:3:24",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_bytes4",
                                                        "typeString": "bytes4"
                                                      }
                                                    },
                                                    "nodeType": "BinaryOperation",
                                                    "operator": "==",
                                                    "rightExpression": {
                                                      "expression": {
                                                        "expression": {
                                                          "id": 2623,
                                                          "name": "NotionalGovernance",
                                                          "nodeType": "Identifier",
                                                          "overloadedDeclarations": [],
                                                          "referencedDeclaration": 66684,
                                                          "src": "10828:18:24",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_type$_t_contract$_NotionalGovernance_$66684_$",
                                                            "typeString": "type(contract NotionalGovernance)"
                                                          }
                                                        },
                                                        "id": 2624,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "lValueRequested": false,
                                                        "memberName": "updateTokenCollateralParameters",
                                                        "nodeType": "MemberAccess",
                                                        "referencedDeclaration": 66628,
                                                        "src": "10828:50:24",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_function_declaration_nonpayable$_t_uint16_$_t_uint8_$_t_uint8_$_t_uint8_$_t_uint8_$_t_uint8_$returns$__$",
                                                          "typeString": "function NotionalGovernance.updateTokenCollateralParameters(uint16,uint8,uint8,uint8,uint8,uint8)"
                                                        }
                                                      },
                                                      "id": 2625,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": true,
                                                      "lValueRequested": false,
                                                      "memberName": "selector",
                                                      "nodeType": "MemberAccess",
                                                      "src": "10828:59:24",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_bytes4",
                                                        "typeString": "bytes4"
                                                      }
                                                    },
                                                    "src": "10821:66:24",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_bool",
                                                      "typeString": "bool"
                                                    }
                                                  },
                                                  "src": "10053:834:24",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                  }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "||",
                                                "rightExpression": {
                                                  "commonType": {
                                                    "typeIdentifier": "t_bytes4",
                                                    "typeString": "bytes4"
                                                  },
                                                  "id": 2632,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "leftExpression": {
                                                    "id": 2628,
                                                    "name": "sig",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 2144,
                                                    "src": "10903:3:24",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_bytes4",
                                                      "typeString": "bytes4"
                                                    }
                                                  },
                                                  "nodeType": "BinaryOperation",
                                                  "operator": "==",
                                                  "rightExpression": {
                                                    "expression": {
                                                      "expression": {
                                                        "id": 2629,
                                                        "name": "NotionalGovernance",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 66684,
                                                        "src": "10910:18:24",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_type$_t_contract$_NotionalGovernance_$66684_$",
                                                          "typeString": "type(contract NotionalGovernance)"
                                                        }
                                                      },
                                                      "id": 2630,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": true,
                                                      "lValueRequested": false,
                                                      "memberName": "updateGlobalTransferOperator",
                                                      "nodeType": "MemberAccess",
                                                      "referencedDeclaration": 66664,
                                                      "src": "10910:47:24",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_bool_$returns$__$",
                                                        "typeString": "function NotionalGovernance.updateGlobalTransferOperator(address,bool)"
                                                      }
                                                    },
                                                    "id": 2631,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "lValueRequested": false,
                                                    "memberName": "selector",
                                                    "nodeType": "MemberAccess",
                                                    "src": "10910:56:24",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_bytes4",
                                                      "typeString": "bytes4"
                                                    }
                                                  },
                                                  "src": "10903:63:24",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                  }
                                                },
                                                "src": "10053:913:24",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_bool",
                                                  "typeString": "bool"
                                                }
                                              },
                                              "nodeType": "BinaryOperation",
                                              "operator": "||",
                                              "rightExpression": {
                                                "commonType": {
                                                  "typeIdentifier": "t_bytes4",
                                                  "typeString": "bytes4"
                                                },
                                                "id": 2638,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                  "id": 2634,
                                                  "name": "sig",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 2144,
                                                  "src": "10982:3:24",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_bytes4",
                                                    "typeString": "bytes4"
                                                  }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "==",
                                                "rightExpression": {
                                                  "expression": {
                                                    "expression": {
                                                      "id": 2635,
                                                      "name": "NotionalGovernance",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 66684,
                                                      "src": "10989:18:24",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_type$_t_contract$_NotionalGovernance_$66684_$",
                                                        "typeString": "type(contract NotionalGovernance)"
                                                      }
                                                    },
                                                    "id": 2636,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "lValueRequested": false,
                                                    "memberName": "updateAuthorizedCallbackContract",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 66671,
                                                    "src": "10989:51:24",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_bool_$returns$__$",
                                                      "typeString": "function NotionalGovernance.updateAuthorizedCallbackContract(address,bool)"
                                                    }
                                                  },
                                                  "id": 2637,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": true,
                                                  "lValueRequested": false,
                                                  "memberName": "selector",
                                                  "nodeType": "MemberAccess",
                                                  "src": "10989:60:24",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_bytes4",
                                                    "typeString": "bytes4"
                                                  }
                                                },
                                                "src": "10982:67:24",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_bool",
                                                  "typeString": "bool"
                                                }
                                              },
                                              "src": "10053:996:24",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "||",
                                            "rightExpression": {
                                              "commonType": {
                                                "typeIdentifier": "t_bytes4",
                                                "typeString": "bytes4"
                                              },
                                              "id": 2644,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftExpression": {
                                                "id": 2640,
                                                "name": "sig",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 2144,
                                                "src": "11065:3:24",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_bytes4",
                                                  "typeString": "bytes4"
                                                }
                                              },
                                              "nodeType": "BinaryOperation",
                                              "operator": "==",
                                              "rightExpression": {
                                                "expression": {
                                                  "expression": {
                                                    "id": 2641,
                                                    "name": "NotionalGovernance",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 66684,
                                                    "src": "11072:18:24",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_type$_t_contract$_NotionalGovernance_$66684_$",
                                                      "typeString": "type(contract NotionalGovernance)"
                                                    }
                                                  },
                                                  "id": 2642,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": true,
                                                  "lValueRequested": false,
                                                  "memberName": "setLendingPool",
                                                  "nodeType": "MemberAccess",
                                                  "referencedDeclaration": 66676,
                                                  "src": "11072:33:24",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_function_declaration_nonpayable$_t_contract$_ILendingPool_$68944_$returns$__$",
                                                    "typeString": "function NotionalGovernance.setLendingPool(contract ILendingPool)"
                                                  }
                                                },
                                                "id": 2643,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "lValueRequested": false,
                                                "memberName": "selector",
                                                "nodeType": "MemberAccess",
                                                "src": "11072:42:24",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_bytes4",
                                                  "typeString": "bytes4"
                                                }
                                              },
                                              "src": "11065:49:24",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                              }
                                            },
                                            "src": "10053:1061:24",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bool",
                                              "typeString": "bool"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "||",
                                          "rightExpression": {
                                            "commonType": {
                                              "typeIdentifier": "t_bytes4",
                                              "typeString": "bytes4"
                                            },
                                            "id": 2650,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "id": 2646,
                                              "name": "sig",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 2144,
                                              "src": "11130:3:24",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_bytes4",
                                                "typeString": "bytes4"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "==",
                                            "rightExpression": {
                                              "expression": {
                                                "expression": {
                                                  "id": 2647,
                                                  "name": "NotionalGovernance",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 66684,
                                                  "src": "11137:18:24",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_contract$_NotionalGovernance_$66684_$",
                                                    "typeString": "type(contract NotionalGovernance)"
                                                  }
                                                },
                                                "id": 2648,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "lValueRequested": false,
                                                "memberName": "upgradeNTokenBeacon",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 66538,
                                                "src": "11137:38:24",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$returns$__$",
                                                  "typeString": "function NotionalGovernance.upgradeNTokenBeacon(address)"
                                                }
                                              },
                                              "id": 2649,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "memberName": "selector",
                                              "nodeType": "MemberAccess",
                                              "src": "11137:47:24",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_bytes4",
                                                "typeString": "bytes4"
                                              }
                                            },
                                            "src": "11130:54:24",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bool",
                                              "typeString": "bool"
                                            }
                                          },
                                          "src": "10053:1131:24",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "||",
                                        "rightExpression": {
                                          "commonType": {
                                            "typeIdentifier": "t_bytes4",
                                            "typeString": "bytes4"
                                          },
                                          "id": 2656,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "id": 2652,
                                            "name": "sig",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2144,
                                            "src": "11200:3:24",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bytes4",
                                              "typeString": "bytes4"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "==",
                                          "rightExpression": {
                                            "expression": {
                                              "expression": {
                                                "id": 2653,
                                                "name": "NotionalProxy",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 65530,
                                                "src": "11207:13:24",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_type$_t_contract$_NotionalProxy_$65530_$",
                                                  "typeString": "type(contract NotionalProxy)"
                                                }
                                              },
                                              "id": 2654,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "memberName": "upgradeTo",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": 65249,
                                              "src": "11207:23:24",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$returns$__$",
                                                "typeString": "function NotionalProxy.upgradeTo(address)"
                                              }
                                            },
                                            "id": 2655,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "memberName": "selector",
                                            "nodeType": "MemberAccess",
                                            "src": "11207:32:24",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bytes4",
                                              "typeString": "bytes4"
                                            }
                                          },
                                          "src": "11200:39:24",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          }
                                        },
                                        "src": "10053:1186:24",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "||",
                                      "rightExpression": {
                                        "commonType": {
                                          "typeIdentifier": "t_bytes4",
                                          "typeString": "bytes4"
                                        },
                                        "id": 2662,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 2658,
                                          "name": "sig",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2144,
                                          "src": "11255:3:24",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes4",
                                            "typeString": "bytes4"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "==",
                                        "rightExpression": {
                                          "expression": {
                                            "expression": {
                                              "id": 2659,
                                              "name": "NotionalProxy",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 65530,
                                              "src": "11262:13:24",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_contract$_NotionalProxy_$65530_$",
                                                "typeString": "type(contract NotionalProxy)"
                                              }
                                            },
                                            "id": 2660,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "memberName": "upgradeToAndCall",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 65256,
                                            "src": "11262:30:24",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_declaration_payable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
                                              "typeString": "function NotionalProxy.upgradeToAndCall(address,bytes memory) payable"
                                            }
                                          },
                                          "id": 2661,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "memberName": "selector",
                                          "nodeType": "MemberAccess",
                                          "src": "11262:39:24",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes4",
                                            "typeString": "bytes4"
                                          }
                                        },
                                        "src": "11255:46:24",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "src": "10053:1248:24",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "falseBody": {
                                      "condition": {
                                        "commonType": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        },
                                        "id": 2695,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "commonType": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          },
                                          "id": 2689,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "commonType": {
                                              "typeIdentifier": "t_bool",
                                              "typeString": "bool"
                                            },
                                            "id": 2683,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "commonType": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                              },
                                              "id": 2677,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftExpression": {
                                                "commonType": {
                                                  "typeIdentifier": "t_bytes4",
                                                  "typeString": "bytes4"
                                                },
                                                "id": 2671,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                  "id": 2667,
                                                  "name": "sig",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 2144,
                                                  "src": "11377:3:24",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_bytes4",
                                                    "typeString": "bytes4"
                                                  }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "==",
                                                "rightExpression": {
                                                  "expression": {
                                                    "expression": {
                                                      "id": 2668,
                                                      "name": "NotionalTreasury",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 68056,
                                                      "src": "11384:16:24",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_type$_t_contract$_NotionalTreasury_$68056_$",
                                                        "typeString": "type(contract NotionalTreasury)"
                                                      }
                                                    },
                                                    "id": 2669,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "lValueRequested": false,
                                                    "memberName": "claimCOMPAndTransfer",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 68027,
                                                    "src": "11384:37:24",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_function_declaration_nonpayable$_t_array$_t_address_$dyn_calldata_ptr_$returns$_t_uint256_$",
                                                      "typeString": "function NotionalTreasury.claimCOMPAndTransfer(address[] calldata) returns (uint256)"
                                                    }
                                                  },
                                                  "id": 2670,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": true,
                                                  "lValueRequested": false,
                                                  "memberName": "selector",
                                                  "nodeType": "MemberAccess",
                                                  "src": "11384:46:24",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_bytes4",
                                                    "typeString": "bytes4"
                                                  }
                                                },
                                                "src": "11377:53:24",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_bool",
                                                  "typeString": "bool"
                                                }
                                              },
                                              "nodeType": "BinaryOperation",
                                              "operator": "||",
                                              "rightExpression": {
                                                "commonType": {
                                                  "typeIdentifier": "t_bytes4",
                                                  "typeString": "bytes4"
                                                },
                                                "id": 2676,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                  "id": 2672,
                                                  "name": "sig",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 2144,
                                                  "src": "11446:3:24",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_bytes4",
                                                    "typeString": "bytes4"
                                                  }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "==",
                                                "rightExpression": {
                                                  "expression": {
                                                    "expression": {
                                                      "id": 2673,
                                                      "name": "NotionalTreasury",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 68056,
                                                      "src": "11453:16:24",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_type$_t_contract$_NotionalTreasury_$68056_$",
                                                        "typeString": "type(contract NotionalTreasury)"
                                                      }
                                                    },
                                                    "id": 2674,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "lValueRequested": false,
                                                    "memberName": "transferReserveToTreasury",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 68036,
                                                    "src": "11453:42:24",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_function_declaration_nonpayable$_t_array$_t_uint16_$dyn_calldata_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                                                      "typeString": "function NotionalTreasury.transferReserveToTreasury(uint16[] calldata) returns (uint256[] memory)"
                                                    }
                                                  },
                                                  "id": 2675,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": true,
                                                  "lValueRequested": false,
                                                  "memberName": "selector",
                                                  "nodeType": "MemberAccess",
                                                  "src": "11453:51:24",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_bytes4",
                                                    "typeString": "bytes4"
                                                  }
                                                },
                                                "src": "11446:58:24",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_bool",
                                                  "typeString": "bool"
                                                }
                                              },
                                              "src": "11377:127:24",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "||",
                                            "rightExpression": {
                                              "commonType": {
                                                "typeIdentifier": "t_bytes4",
                                                "typeString": "bytes4"
                                              },
                                              "id": 2682,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftExpression": {
                                                "id": 2678,
                                                "name": "sig",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 2144,
                                                "src": "11520:3:24",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_bytes4",
                                                  "typeString": "bytes4"
                                                }
                                              },
                                              "nodeType": "BinaryOperation",
                                              "operator": "==",
                                              "rightExpression": {
                                                "expression": {
                                                  "expression": {
                                                    "id": 2679,
                                                    "name": "NotionalTreasury",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 68056,
                                                    "src": "11527:16:24",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_type$_t_contract$_NotionalTreasury_$68056_$",
                                                      "typeString": "type(contract NotionalTreasury)"
                                                    }
                                                  },
                                                  "id": 2680,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": true,
                                                  "lValueRequested": false,
                                                  "memberName": "setTreasuryManager",
                                                  "nodeType": "MemberAccess",
                                                  "referencedDeclaration": 68041,
                                                  "src": "11527:35:24",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$returns$__$",
                                                    "typeString": "function NotionalTreasury.setTreasuryManager(address)"
                                                  }
                                                },
                                                "id": 2681,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "lValueRequested": false,
                                                "memberName": "selector",
                                                "nodeType": "MemberAccess",
                                                "src": "11527:44:24",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_bytes4",
                                                  "typeString": "bytes4"
                                                }
                                              },
                                              "src": "11520:51:24",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                              }
                                            },
                                            "src": "11377:194:24",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bool",
                                              "typeString": "bool"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "||",
                                          "rightExpression": {
                                            "commonType": {
                                              "typeIdentifier": "t_bytes4",
                                              "typeString": "bytes4"
                                            },
                                            "id": 2688,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "id": 2684,
                                              "name": "sig",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 2144,
                                              "src": "11587:3:24",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_bytes4",
                                                "typeString": "bytes4"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "==",
                                            "rightExpression": {
                                              "expression": {
                                                "expression": {
                                                  "id": 2685,
                                                  "name": "NotionalTreasury",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 68056,
                                                  "src": "11594:16:24",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_contract$_NotionalTreasury_$68056_$",
                                                    "typeString": "type(contract NotionalTreasury)"
                                                  }
                                                },
                                                "id": 2686,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "lValueRequested": false,
                                                "memberName": "setReserveBuffer",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 68048,
                                                "src": "11594:33:24",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_function_declaration_nonpayable$_t_uint16_$_t_uint256_$returns$__$",
                                                  "typeString": "function NotionalTreasury.setReserveBuffer(uint16,uint256)"
                                                }
                                              },
                                              "id": 2687,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "memberName": "selector",
                                              "nodeType": "MemberAccess",
                                              "src": "11594:42:24",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_bytes4",
                                                "typeString": "bytes4"
                                              }
                                            },
                                            "src": "11587:49:24",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bool",
                                              "typeString": "bool"
                                            }
                                          },
                                          "src": "11377:259:24",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "||",
                                        "rightExpression": {
                                          "commonType": {
                                            "typeIdentifier": "t_bytes4",
                                            "typeString": "bytes4"
                                          },
                                          "id": 2694,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "id": 2690,
                                            "name": "sig",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2144,
                                            "src": "11652:3:24",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bytes4",
                                              "typeString": "bytes4"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "==",
                                          "rightExpression": {
                                            "expression": {
                                              "expression": {
                                                "id": 2691,
                                                "name": "NotionalTreasury",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 68056,
                                                "src": "11659:16:24",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_type$_t_contract$_NotionalTreasury_$68056_$",
                                                  "typeString": "type(contract NotionalTreasury)"
                                                }
                                              },
                                              "id": 2692,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "memberName": "setReserveCashBalance",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": 68055,
                                              "src": "11659:38:24",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_function_declaration_nonpayable$_t_uint16_$_t_int256_$returns$__$",
                                                "typeString": "function NotionalTreasury.setReserveCashBalance(uint16,int256)"
                                              }
                                            },
                                            "id": 2693,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "memberName": "selector",
                                            "nodeType": "MemberAccess",
                                            "src": "11659:47:24",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bytes4",
                                              "typeString": "bytes4"
                                            }
                                          },
                                          "src": "11652:54:24",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          }
                                        },
                                        "src": "11377:329:24",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "falseBody": {
                                        "condition": {
                                          "commonType": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          },
                                          "id": 2763,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "commonType": {
                                              "typeIdentifier": "t_bool",
                                              "typeString": "bool"
                                            },
                                            "id": 2757,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "commonType": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                              },
                                              "id": 2751,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftExpression": {
                                                "commonType": {
                                                  "typeIdentifier": "t_bool",
                                                  "typeString": "bool"
                                                },
                                                "id": 2745,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                  "commonType": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                  },
                                                  "id": 2739,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "leftExpression": {
                                                    "commonType": {
                                                      "typeIdentifier": "t_bool",
                                                      "typeString": "bool"
                                                    },
                                                    "id": 2733,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "leftExpression": {
                                                      "commonType": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                      },
                                                      "id": 2727,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "leftExpression": {
                                                        "commonType": {
                                                          "typeIdentifier": "t_bool",
                                                          "typeString": "bool"
                                                        },
                                                        "id": 2721,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "leftExpression": {
                                                          "commonType": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                          },
                                                          "id": 2715,
                                                          "isConstant": false,
                                                          "isLValue": false,
                                                          "isPure": false,
                                                          "lValueRequested": false,
                                                          "leftExpression": {
                                                            "commonType": {
                                                              "typeIdentifier": "t_bool",
                                                              "typeString": "bool"
                                                            },
                                                            "id": 2709,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "leftExpression": {
                                                              "commonType": {
                                                                "typeIdentifier": "t_bytes4",
                                                                "typeString": "bytes4"
                                                              },
                                                              "id": 2703,
                                                              "isConstant": false,
                                                              "isLValue": false,
                                                              "isPure": false,
                                                              "lValueRequested": false,
                                                              "leftExpression": {
                                                                "id": 2699,
                                                                "name": "sig",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 2144,
                                                                "src": "11780:3:24",
                                                                "typeDescriptions": {
                                                                  "typeIdentifier": "t_bytes4",
                                                                  "typeString": "bytes4"
                                                                }
                                                              },
                                                              "nodeType": "BinaryOperation",
                                                              "operator": "==",
                                                              "rightExpression": {
                                                                "expression": {
                                                                  "expression": {
                                                                    "id": 2700,
                                                                    "name": "NotionalCalculations",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 64793,
                                                                    "src": "11787:20:24",
                                                                    "typeDescriptions": {
                                                                      "typeIdentifier": "t_type$_t_contract$_NotionalCalculations_$64793_$",
                                                                      "typeString": "type(contract NotionalCalculations)"
                                                                    }
                                                                  },
                                                                  "id": 2701,
                                                                  "isConstant": false,
                                                                  "isLValue": false,
                                                                  "isPure": true,
                                                                  "lValueRequested": false,
                                                                  "memberName": "calculateNTokensToMint",
                                                                  "nodeType": "MemberAccess",
                                                                  "referencedDeclaration": 64636,
                                                                  "src": "11787:43:24",
                                                                  "typeDescriptions": {
                                                                    "typeIdentifier": "t_function_declaration_view$_t_uint16_$_t_uint88_$returns$_t_uint256_$",
                                                                    "typeString": "function NotionalCalculations.calculateNTokensToMint(uint16,uint88) view returns (uint256)"
                                                                  }
                                                                },
                                                                "id": 2702,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": true,
                                                                "lValueRequested": false,
                                                                "memberName": "selector",
                                                                "nodeType": "MemberAccess",
                                                                "src": "11787:52:24",
                                                                "typeDescriptions": {
                                                                  "typeIdentifier": "t_bytes4",
                                                                  "typeString": "bytes4"
                                                                }
                                                              },
                                                              "src": "11780:59:24",
                                                              "typeDescriptions": {
                                                                "typeIdentifier": "t_bool",
                                                                "typeString": "bool"
                                                              }
                                                            },
                                                            "nodeType": "BinaryOperation",
                                                            "operator": "||",
                                                            "rightExpression": {
                                                              "commonType": {
                                                                "typeIdentifier": "t_bytes4",
                                                                "typeString": "bytes4"
                                                              },
                                                              "id": 2708,
                                                              "isConstant": false,
                                                              "isLValue": false,
                                                              "isPure": false,
                                                              "lValueRequested": false,
                                                              "leftExpression": {
                                                                "id": 2704,
                                                                "name": "sig",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 2144,
                                                                "src": "11855:3:24",
                                                                "typeDescriptions": {
                                                                  "typeIdentifier": "t_bytes4",
                                                                  "typeString": "bytes4"
                                                                }
                                                              },
                                                              "nodeType": "BinaryOperation",
                                                              "operator": "==",
                                                              "rightExpression": {
                                                                "expression": {
                                                                  "expression": {
                                                                    "id": 2705,
                                                                    "name": "NotionalCalculations",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 64793,
                                                                    "src": "11862:20:24",
                                                                    "typeDescriptions": {
                                                                      "typeIdentifier": "t_type$_t_contract$_NotionalCalculations_$64793_$",
                                                                      "typeString": "type(contract NotionalCalculations)"
                                                                    }
                                                                  },
                                                                  "id": 2706,
                                                                  "isConstant": false,
                                                                  "isLValue": false,
                                                                  "isPure": true,
                                                                  "lValueRequested": false,
                                                                  "memberName": "getfCashAmountGivenCashAmount",
                                                                  "nodeType": "MemberAccess",
                                                                  "referencedDeclaration": 64649,
                                                                  "src": "11862:50:24",
                                                                  "typeDescriptions": {
                                                                    "typeIdentifier": "t_function_declaration_view$_t_uint16_$_t_int88_$_t_uint256_$_t_uint256_$returns$_t_int256_$",
                                                                    "typeString": "function NotionalCalculations.getfCashAmountGivenCashAmount(uint16,int88,uint256,uint256) view returns (int256)"
                                                                  }
                                                                },
                                                                "id": 2707,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": true,
                                                                "lValueRequested": false,
                                                                "memberName": "selector",
                                                                "nodeType": "MemberAccess",
                                                                "src": "11862:59:24",
                                                                "typeDescriptions": {
                                                                  "typeIdentifier": "t_bytes4",
                                                                  "typeString": "bytes4"
                                                                }
                                                              },
                                                              "src": "11855:66:24",
                                                              "typeDescriptions": {
                                                                "typeIdentifier": "t_bool",
                                                                "typeString": "bool"
                                                              }
                                                            },
                                                            "src": "11780:141:24",
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_bool",
                                                              "typeString": "bool"
                                                            }
                                                          },
                                                          "nodeType": "BinaryOperation",
                                                          "operator": "||",
                                                          "rightExpression": {
                                                            "commonType": {
                                                              "typeIdentifier": "t_bytes4",
                                                              "typeString": "bytes4"
                                                            },
                                                            "id": 2714,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "leftExpression": {
                                                              "id": 2710,
                                                              "name": "sig",
                                                              "nodeType": "Identifier",
                                                              "overloadedDeclarations": [],
                                                              "referencedDeclaration": 2144,
                                                              "src": "11937:3:24",
                                                              "typeDescriptions": {
                                                                "typeIdentifier": "t_bytes4",
                                                                "typeString": "bytes4"
                                                              }
                                                            },
                                                            "nodeType": "BinaryOperation",
                                                            "operator": "==",
                                                            "rightExpression": {
                                                              "expression": {
                                                                "expression": {
                                                                  "id": 2711,
                                                                  "name": "NotionalCalculations",
                                                                  "nodeType": "Identifier",
                                                                  "overloadedDeclarations": [],
                                                                  "referencedDeclaration": 64793,
                                                                  "src": "11944:20:24",
                                                                  "typeDescriptions": {
                                                                    "typeIdentifier": "t_type$_t_contract$_NotionalCalculations_$64793_$",
                                                                    "typeString": "type(contract NotionalCalculations)"
                                                                  }
                                                                },
                                                                "id": 2712,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": true,
                                                                "lValueRequested": false,
                                                                "memberName": "getCashAmountGivenfCashAmount",
                                                                "nodeType": "MemberAccess",
                                                                "referencedDeclaration": 64664,
                                                                "src": "11944:50:24",
                                                                "typeDescriptions": {
                                                                  "typeIdentifier": "t_function_declaration_view$_t_uint16_$_t_int88_$_t_uint256_$_t_uint256_$returns$_t_int256_$_t_int256_$",
                                                                  "typeString": "function NotionalCalculations.getCashAmountGivenfCashAmount(uint16,int88,uint256,uint256) view returns (int256,int256)"
                                                                }
                                                              },
                                                              "id": 2713,
                                                              "isConstant": false,
                                                              "isLValue": false,
                                                              "isPure": true,
                                                              "lValueRequested": false,
                                                              "memberName": "selector",
                                                              "nodeType": "MemberAccess",
                                                              "src": "11944:59:24",
                                                              "typeDescriptions": {
                                                                "typeIdentifier": "t_bytes4",
                                                                "typeString": "bytes4"
                                                              }
                                                            },
                                                            "src": "11937:66:24",
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_bool",
                                                              "typeString": "bool"
                                                            }
                                                          },
                                                          "src": "11780:223:24",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                          }
                                                        },
                                                        "nodeType": "BinaryOperation",
                                                        "operator": "||",
                                                        "rightExpression": {
                                                          "commonType": {
                                                            "typeIdentifier": "t_bytes4",
                                                            "typeString": "bytes4"
                                                          },
                                                          "id": 2720,
                                                          "isConstant": false,
                                                          "isLValue": false,
                                                          "isPure": false,
                                                          "lValueRequested": false,
                                                          "leftExpression": {
                                                            "id": 2716,
                                                            "name": "sig",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 2144,
                                                            "src": "12019:3:24",
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_bytes4",
                                                              "typeString": "bytes4"
                                                            }
                                                          },
                                                          "nodeType": "BinaryOperation",
                                                          "operator": "==",
                                                          "rightExpression": {
                                                            "expression": {
                                                              "expression": {
                                                                "id": 2717,
                                                                "name": "NotionalCalculations",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 64793,
                                                                "src": "12026:20:24",
                                                                "typeDescriptions": {
                                                                  "typeIdentifier": "t_type$_t_contract$_NotionalCalculations_$64793_$",
                                                                  "typeString": "type(contract NotionalCalculations)"
                                                                }
                                                              },
                                                              "id": 2718,
                                                              "isConstant": false,
                                                              "isLValue": false,
                                                              "isPure": true,
                                                              "lValueRequested": false,
                                                              "memberName": "nTokenGetClaimableIncentives",
                                                              "nodeType": "MemberAccess",
                                                              "referencedDeclaration": 64673,
                                                              "src": "12026:49:24",
                                                              "typeDescriptions": {
                                                                "typeIdentifier": "t_function_declaration_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                                                                "typeString": "function NotionalCalculations.nTokenGetClaimableIncentives(address,uint256) view returns (uint256)"
                                                              }
                                                            },
                                                            "id": 2719,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "lValueRequested": false,
                                                            "memberName": "selector",
                                                            "nodeType": "MemberAccess",
                                                            "src": "12026:58:24",
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_bytes4",
                                                              "typeString": "bytes4"
                                                            }
                                                          },
                                                          "src": "12019:65:24",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                          }
                                                        },
                                                        "src": "11780:304:24",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_bool",
                                                          "typeString": "bool"
                                                        }
                                                      },
                                                      "nodeType": "BinaryOperation",
                                                      "operator": "||",
                                                      "rightExpression": {
                                                        "commonType": {
                                                          "typeIdentifier": "t_bytes4",
                                                          "typeString": "bytes4"
                                                        },
                                                        "id": 2726,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "leftExpression": {
                                                          "id": 2722,
                                                          "name": "sig",
                                                          "nodeType": "Identifier",
                                                          "overloadedDeclarations": [],
                                                          "referencedDeclaration": 2144,
                                                          "src": "12100:3:24",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_bytes4",
                                                            "typeString": "bytes4"
                                                          }
                                                        },
                                                        "nodeType": "BinaryOperation",
                                                        "operator": "==",
                                                        "rightExpression": {
                                                          "expression": {
                                                            "expression": {
                                                              "id": 2723,
                                                              "name": "NotionalCalculations",
                                                              "nodeType": "Identifier",
                                                              "overloadedDeclarations": [],
                                                              "referencedDeclaration": 64793,
                                                              "src": "12107:20:24",
                                                              "typeDescriptions": {
                                                                "typeIdentifier": "t_type$_t_contract$_NotionalCalculations_$64793_$",
                                                                "typeString": "type(contract NotionalCalculations)"
                                                              }
                                                            },
                                                            "id": 2724,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "lValueRequested": false,
                                                            "memberName": "getPresentfCashValue",
                                                            "nodeType": "MemberAccess",
                                                            "referencedDeclaration": 64688,
                                                            "src": "12107:41:24",
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_function_declaration_view$_t_uint16_$_t_uint256_$_t_int256_$_t_uint256_$_t_bool_$returns$_t_int256_$",
                                                              "typeString": "function NotionalCalculations.getPresentfCashValue(uint16,uint256,int256,uint256,bool) view returns (int256)"
                                                            }
                                                          },
                                                          "id": 2725,
                                                          "isConstant": false,
                                                          "isLValue": false,
                                                          "isPure": true,
                                                          "lValueRequested": false,
                                                          "memberName": "selector",
                                                          "nodeType": "MemberAccess",
                                                          "src": "12107:50:24",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_bytes4",
                                                            "typeString": "bytes4"
                                                          }
                                                        },
                                                        "src": "12100:57:24",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_bool",
                                                          "typeString": "bool"
                                                        }
                                                      },
                                                      "src": "11780:377:24",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                      }
                                                    },
                                                    "nodeType": "BinaryOperation",
                                                    "operator": "||",
                                                    "rightExpression": {
                                                      "commonType": {
                                                        "typeIdentifier": "t_bytes4",
                                                        "typeString": "bytes4"
                                                      },
                                                      "id": 2732,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "leftExpression": {
                                                        "id": 2728,
                                                        "name": "sig",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 2144,
                                                        "src": "12173:3:24",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_bytes4",
                                                          "typeString": "bytes4"
                                                        }
                                                      },
                                                      "nodeType": "BinaryOperation",
                                                      "operator": "==",
                                                      "rightExpression": {
                                                        "expression": {
                                                          "expression": {
                                                            "id": 2729,
                                                            "name": "NotionalCalculations",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 64793,
                                                            "src": "12180:20:24",
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_type$_t_contract$_NotionalCalculations_$64793_$",
                                                              "typeString": "type(contract NotionalCalculations)"
                                                            }
                                                          },
                                                          "id": 2730,
                                                          "isConstant": false,
                                                          "isLValue": false,
                                                          "isPure": true,
                                                          "lValueRequested": false,
                                                          "memberName": "getMarketIndex",
                                                          "nodeType": "MemberAccess",
                                                          "referencedDeclaration": 64697,
                                                          "src": "12180:35:24",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_function_declaration_pure$_t_uint256_$_t_uint256_$returns$_t_uint8_$",
                                                            "typeString": "function NotionalCalculations.getMarketIndex(uint256,uint256) pure returns (uint8)"
                                                          }
                                                        },
                                                        "id": 2731,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "lValueRequested": false,
                                                        "memberName": "selector",
                                                        "nodeType": "MemberAccess",
                                                        "src": "12180:44:24",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_bytes4",
                                                          "typeString": "bytes4"
                                                        }
                                                      },
                                                      "src": "12173:51:24",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                      }
                                                    },
                                                    "src": "11780:444:24",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_bool",
                                                      "typeString": "bool"
                                                    }
                                                  },
                                                  "nodeType": "BinaryOperation",
                                                  "operator": "||",
                                                  "rightExpression": {
                                                    "commonType": {
                                                      "typeIdentifier": "t_bytes4",
                                                      "typeString": "bytes4"
                                                    },
                                                    "id": 2738,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "leftExpression": {
                                                      "id": 2734,
                                                      "name": "sig",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 2144,
                                                      "src": "12240:3:24",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_bytes4",
                                                        "typeString": "bytes4"
                                                      }
                                                    },
                                                    "nodeType": "BinaryOperation",
                                                    "operator": "==",
                                                    "rightExpression": {
                                                      "expression": {
                                                        "expression": {
                                                          "id": 2735,
                                                          "name": "NotionalCalculations",
                                                          "nodeType": "Identifier",
                                                          "overloadedDeclarations": [],
                                                          "referencedDeclaration": 64793,
                                                          "src": "12247:20:24",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_type$_t_contract$_NotionalCalculations_$64793_$",
                                                            "typeString": "type(contract NotionalCalculations)"
                                                          }
                                                        },
                                                        "id": 2736,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "lValueRequested": false,
                                                        "memberName": "getfCashLendFromDeposit",
                                                        "nodeType": "MemberAccess",
                                                        "referencedDeclaration": 64718,
                                                        "src": "12247:44:24",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_function_declaration_view$_t_uint16_$_t_uint256_$_t_uint256_$_t_uint32_$_t_uint256_$_t_bool_$returns$_t_uint88_$_t_uint8_$_t_bytes32_$",
                                                          "typeString": "function NotionalCalculations.getfCashLendFromDeposit(uint16,uint256,uint256,uint32,uint256,bool) view returns (uint88,uint8,bytes32)"
                                                        }
                                                      },
                                                      "id": 2737,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": true,
                                                      "lValueRequested": false,
                                                      "memberName": "selector",
                                                      "nodeType": "MemberAccess",
                                                      "src": "12247:53:24",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_bytes4",
                                                        "typeString": "bytes4"
                                                      }
                                                    },
                                                    "src": "12240:60:24",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_bool",
                                                      "typeString": "bool"
                                                    }
                                                  },
                                                  "src": "11780:520:24",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                  }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "||",
                                                "rightExpression": {
                                                  "commonType": {
                                                    "typeIdentifier": "t_bytes4",
                                                    "typeString": "bytes4"
                                                  },
                                                  "id": 2744,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "leftExpression": {
                                                    "id": 2740,
                                                    "name": "sig",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 2144,
                                                    "src": "12316:3:24",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_bytes4",
                                                      "typeString": "bytes4"
                                                    }
                                                  },
                                                  "nodeType": "BinaryOperation",
                                                  "operator": "==",
                                                  "rightExpression": {
                                                    "expression": {
                                                      "expression": {
                                                        "id": 2741,
                                                        "name": "NotionalCalculations",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 64793,
                                                        "src": "12323:20:24",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_type$_t_contract$_NotionalCalculations_$64793_$",
                                                          "typeString": "type(contract NotionalCalculations)"
                                                        }
                                                      },
                                                      "id": 2742,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": true,
                                                      "lValueRequested": false,
                                                      "memberName": "getfCashBorrowFromPrincipal",
                                                      "nodeType": "MemberAccess",
                                                      "referencedDeclaration": 64739,
                                                      "src": "12323:48:24",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_function_declaration_view$_t_uint16_$_t_uint256_$_t_uint256_$_t_uint32_$_t_uint256_$_t_bool_$returns$_t_uint88_$_t_uint8_$_t_bytes32_$",
                                                        "typeString": "function NotionalCalculations.getfCashBorrowFromPrincipal(uint16,uint256,uint256,uint32,uint256,bool) view returns (uint88,uint8,bytes32)"
                                                      }
                                                    },
                                                    "id": 2743,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "lValueRequested": false,
                                                    "memberName": "selector",
                                                    "nodeType": "MemberAccess",
                                                    "src": "12323:57:24",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_bytes4",
                                                      "typeString": "bytes4"
                                                    }
                                                  },
                                                  "src": "12316:64:24",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                  }
                                                },
                                                "src": "11780:600:24",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_bool",
                                                  "typeString": "bool"
                                                }
                                              },
                                              "nodeType": "BinaryOperation",
                                              "operator": "||",
                                              "rightExpression": {
                                                "commonType": {
                                                  "typeIdentifier": "t_bytes4",
                                                  "typeString": "bytes4"
                                                },
                                                "id": 2750,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                  "id": 2746,
                                                  "name": "sig",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 2144,
                                                  "src": "12396:3:24",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_bytes4",
                                                    "typeString": "bytes4"
                                                  }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "==",
                                                "rightExpression": {
                                                  "expression": {
                                                    "expression": {
                                                      "id": 2747,
                                                      "name": "NotionalCalculations",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 64793,
                                                      "src": "12403:20:24",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_type$_t_contract$_NotionalCalculations_$64793_$",
                                                        "typeString": "type(contract NotionalCalculations)"
                                                      }
                                                    },
                                                    "id": 2748,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "lValueRequested": false,
                                                    "memberName": "getDepositFromfCashLend",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 64760,
                                                    "src": "12403:44:24",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_function_declaration_view$_t_uint16_$_t_uint256_$_t_uint256_$_t_uint32_$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_uint8_$_t_bytes32_$",
                                                      "typeString": "function NotionalCalculations.getDepositFromfCashLend(uint16,uint256,uint256,uint32,uint256) view returns (uint256,uint256,uint8,bytes32)"
                                                    }
                                                  },
                                                  "id": 2749,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": true,
                                                  "lValueRequested": false,
                                                  "memberName": "selector",
                                                  "nodeType": "MemberAccess",
                                                  "src": "12403:53:24",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_bytes4",
                                                    "typeString": "bytes4"
                                                  }
                                                },
                                                "src": "12396:60:24",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_bool",
                                                  "typeString": "bool"
                                                }
                                              },
                                              "src": "11780:676:24",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "||",
                                            "rightExpression": {
                                              "commonType": {
                                                "typeIdentifier": "t_bytes4",
                                                "typeString": "bytes4"
                                              },
                                              "id": 2756,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftExpression": {
                                                "id": 2752,
                                                "name": "sig",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 2144,
                                                "src": "12472:3:24",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_bytes4",
                                                  "typeString": "bytes4"
                                                }
                                              },
                                              "nodeType": "BinaryOperation",
                                              "operator": "==",
                                              "rightExpression": {
                                                "expression": {
                                                  "expression": {
                                                    "id": 2753,
                                                    "name": "NotionalCalculations",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 64793,
                                                    "src": "12479:20:24",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_type$_t_contract$_NotionalCalculations_$64793_$",
                                                      "typeString": "type(contract NotionalCalculations)"
                                                    }
                                                  },
                                                  "id": 2754,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": true,
                                                  "lValueRequested": false,
                                                  "memberName": "getPrincipalFromfCashBorrow",
                                                  "nodeType": "MemberAccess",
                                                  "referencedDeclaration": 64781,
                                                  "src": "12479:48:24",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_function_declaration_view$_t_uint16_$_t_uint256_$_t_uint256_$_t_uint32_$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_uint8_$_t_bytes32_$",
                                                    "typeString": "function NotionalCalculations.getPrincipalFromfCashBorrow(uint16,uint256,uint256,uint32,uint256) view returns (uint256,uint256,uint8,bytes32)"
                                                  }
                                                },
                                                "id": 2755,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "lValueRequested": false,
                                                "memberName": "selector",
                                                "nodeType": "MemberAccess",
                                                "src": "12479:57:24",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_bytes4",
                                                  "typeString": "bytes4"
                                                }
                                              },
                                              "src": "12472:64:24",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                              }
                                            },
                                            "src": "11780:756:24",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bool",
                                              "typeString": "bool"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "||",
                                          "rightExpression": {
                                            "commonType": {
                                              "typeIdentifier": "t_bytes4",
                                              "typeString": "bytes4"
                                            },
                                            "id": 2762,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "id": 2758,
                                              "name": "sig",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 2144,
                                              "src": "12552:3:24",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_bytes4",
                                                "typeString": "bytes4"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "==",
                                            "rightExpression": {
                                              "expression": {
                                                "expression": {
                                                  "id": 2759,
                                                  "name": "NotionalCalculations",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 64793,
                                                  "src": "12559:20:24",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_contract$_NotionalCalculations_$64793_$",
                                                    "typeString": "type(contract NotionalCalculations)"
                                                  }
                                                },
                                                "id": 2760,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "lValueRequested": false,
                                                "memberName": "convertCashBalanceToExternal",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 64792,
                                                "src": "12559:49:24",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_function_declaration_view$_t_uint16_$_t_int256_$_t_bool_$returns$_t_int256_$",
                                                  "typeString": "function NotionalCalculations.convertCashBalanceToExternal(uint16,int256,bool) view returns (int256)"
                                                }
                                              },
                                              "id": 2761,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "memberName": "selector",
                                              "nodeType": "MemberAccess",
                                              "src": "12559:58:24",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_bytes4",
                                                "typeString": "bytes4"
                                              }
                                            },
                                            "src": "12552:65:24",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bool",
                                              "typeString": "bool"
                                            }
                                          },
                                          "src": "11780:837:24",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          }
                                        },
                                        "falseBody": {
                                          "id": 2769,
                                          "nodeType": "Block",
                                          "src": "12683:164:24",
                                          "statements": [
                                            {
                                              "expression": {
                                                "id": 2767,
                                                "name": "VIEWS",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 1912,
                                                "src": "12831:5:24",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              },
                                              "functionReturnParameters": 2148,
                                              "id": 2768,
                                              "nodeType": "Return",
                                              "src": "12824:12:24"
                                            }
                                          ]
                                        },
                                        "id": 2770,
                                        "nodeType": "IfStatement",
                                        "src": "11763:1084:24",
                                        "trueBody": {
                                          "id": 2766,
                                          "nodeType": "Block",
                                          "src": "12628:49:24",
                                          "statements": [
                                            {
                                              "expression": {
                                                "id": 2764,
                                                "name": "CALCULATION_VIEWS",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 1932,
                                                "src": "12649:17:24",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              },
                                              "functionReturnParameters": 2148,
                                              "id": 2765,
                                              "nodeType": "Return",
                                              "src": "12642:24:24"
                                            }
                                          ]
                                        }
                                      },
                                      "id": 2771,
                                      "nodeType": "IfStatement",
                                      "src": "11360:1487:24",
                                      "trueBody": {
                                        "id": 2698,
                                        "nodeType": "Block",
                                        "src": "11717:40:24",
                                        "statements": [
                                          {
                                            "expression": {
                                              "id": 2696,
                                              "name": "TREASURY",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1930,
                                              "src": "11738:8:24",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            },
                                            "functionReturnParameters": 2148,
                                            "id": 2697,
                                            "nodeType": "Return",
                                            "src": "11731:15:24"
                                          }
                                        ]
                                      }
                                    },
                                    "id": 2772,
                                    "nodeType": "IfStatement",
                                    "src": "10036:2811:24",
                                    "trueBody": {
                                      "id": 2666,
                                      "nodeType": "Block",
                                      "src": "11312:42:24",
                                      "statements": [
                                        {
                                          "expression": {
                                            "id": 2664,
                                            "name": "GOVERNANCE",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1910,
                                            "src": "11333:10:24",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          },
                                          "functionReturnParameters": 2148,
                                          "id": 2665,
                                          "nodeType": "Return",
                                          "src": "11326:17:24"
                                        }
                                      ]
                                    }
                                  },
                                  "id": 2773,
                                  "nodeType": "IfStatement",
                                  "src": "9840:3007:24",
                                  "trueBody": {
                                    "id": 2556,
                                    "nodeType": "Block",
                                    "src": "9981:49:24",
                                    "statements": [
                                      {
                                        "expression": {
                                          "id": 2554,
                                          "name": "INITIALIZE_MARKET",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1914,
                                          "src": "10002:17:24",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        "functionReturnParameters": 2148,
                                        "id": 2555,
                                        "nodeType": "Return",
                                        "src": "9995:24:24"
                                      }
                                    ]
                                  }
                                },
                                "id": 2774,
                                "nodeType": "IfStatement",
                                "src": "8851:3996:24",
                                "trueBody": {
                                  "id": 2542,
                                  "nodeType": "Block",
                                  "src": "9790:44:24",
                                  "statements": [
                                    {
                                      "expression": {
                                        "id": 2540,
                                        "name": "VAULT_ACTION",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1936,
                                        "src": "9811:12:24",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "functionReturnParameters": 2148,
                                      "id": 2541,
                                      "nodeType": "Return",
                                      "src": "9804:19:24"
                                    }
                                  ]
                                }
                              },
                              "id": 2775,
                              "nodeType": "IfStatement",
                              "src": "8488:4359:24",
                              "trueBody": {
                                "id": 2456,
                                "nodeType": "Block",
                                "src": "8798:47:24",
                                "statements": [
                                  {
                                    "expression": {
                                      "id": 2454,
                                      "name": "LIQUIDATE_FCASH",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1926,
                                      "src": "8819:15:24",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "functionReturnParameters": 2148,
                                    "id": 2455,
                                    "nodeType": "Return",
                                    "src": "8812:22:24"
                                  }
                                ]
                              }
                            },
                            "id": 2776,
                            "nodeType": "IfStatement",
                            "src": "8116:4731:24",
                            "trueBody": {
                              "id": 2430,
                              "nodeType": "Block",
                              "src": "8432:50:24",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 2428,
                                    "name": "LIQUIDATE_CURRENCY",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1924,
                                    "src": "8453:18:24",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "functionReturnParameters": 2148,
                                  "id": 2429,
                                  "nodeType": "Return",
                                  "src": "8446:25:24"
                                }
                              ]
                            }
                          },
                          "id": 2777,
                          "nodeType": "IfStatement",
                          "src": "7154:5693:24",
                          "trueBody": {
                            "id": 2404,
                            "nodeType": "Block",
                            "src": "8064:46:24",
                            "statements": [
                              {
                                "expression": {
                                  "id": 2402,
                                  "name": "NTOKEN_ACTIONS",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1916,
                                  "src": "8085:14:24",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "functionReturnParameters": 2148,
                                "id": 2403,
                                "nodeType": "Return",
                                "src": "8078:21:24"
                              }
                            ]
                          }
                        },
                        "id": 2778,
                        "nodeType": "IfStatement",
                        "src": "6378:6469:24",
                        "trueBody": {
                          "id": 2324,
                          "nodeType": "Block",
                          "src": "7109:39:24",
                          "statements": [
                            {
                              "expression": {
                                "id": 2322,
                                "name": "ERC1155",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1922,
                                "src": "7130:7:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "functionReturnParameters": 2148,
                              "id": 2323,
                              "nodeType": "Return",
                              "src": "7123:14:24"
                            }
                          ]
                        }
                      },
                      "id": 2779,
                      "nodeType": "IfStatement",
                      "src": "5946:6901:24",
                      "trueBody": {
                        "id": 2256,
                        "nodeType": "Block",
                        "src": "6326:46:24",
                        "statements": [
                          {
                            "expression": {
                              "id": 2254,
                              "name": "ACCOUNT_ACTION",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1920,
                              "src": "6347:14:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "functionReturnParameters": 2148,
                            "id": 2255,
                            "nodeType": "Return",
                            "src": "6340:21:24"
                          }
                        ]
                      }
                    },
                    "id": 2780,
                    "nodeType": "IfStatement",
                    "src": "5391:7456:24",
                    "trueBody": {
                      "id": 2218,
                      "nodeType": "Block",
                      "src": "5888:52:24",
                      "statements": [
                        {
                          "expression": {
                            "id": 2216,
                            "name": "VAULT_ACCOUNT_ACTION",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1934,
                            "src": "5909:20:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "functionReturnParameters": 2148,
                          "id": 2217,
                          "nodeType": "Return",
                          "src": "5902:27:24"
                        }
                      ]
                    }
                  },
                  "id": 2781,
                  "nodeType": "IfStatement",
                  "src": "5054:7793:24",
                  "trueBody": {
                    "id": 2174,
                    "nodeType": "Block",
                    "src": "5341:44:24",
                    "statements": [
                      {
                        "expression": {
                          "id": 2172,
                          "name": "BATCH_ACTION",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1918,
                          "src": "5362:12:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 2148,
                        "id": 2173,
                        "nodeType": "Return",
                        "src": "5355:19:24"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 2142,
              "nodeType": "StructuredDocumentation",
              "src": "4809:155:24",
              "text": "@notice Returns the implementation contract for the method signature\n @param sig method signature to call\n @return implementation address"
            },
            "functionSelector": "76e1df48",
            "id": 2783,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getRouterImplementation",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2145,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2144,
                  "mutability": "mutable",
                  "name": "sig",
                  "nodeType": "VariableDeclaration",
                  "scope": 2783,
                  "src": "5002:10:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 2143,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "5002:6:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5001:12:24"
            },
            "returnParameters": {
              "id": 2148,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2147,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2783,
                  "src": "5035:7:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2146,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5035:7:24",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5034:9:24"
            },
            "scope": 2803,
            "src": "4969:7884:24",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2790,
              "nodeType": "Block",
              "src": "13084:919:24",
              "statements": [
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "13159:838:24",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13412:1:24",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13415:1:24",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [],
                              "functionName": {
                                "name": "calldatasize",
                                "nodeType": "YulIdentifier",
                                "src": "13418:12:24"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "13418:14:24"
                            }
                          ],
                          "functionName": {
                            "name": "calldatacopy",
                            "nodeType": "YulIdentifier",
                            "src": "13399:12:24"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13399:34:24"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "13399:34:24"
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "13560:74:24",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [],
                              "functionName": {
                                "name": "gas",
                                "nodeType": "YulIdentifier",
                                "src": "13587:3:24"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "13587:5:24"
                            },
                            {
                              "name": "implementation",
                              "nodeType": "YulIdentifier",
                              "src": "13594:14:24"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13610:1:24",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [],
                              "functionName": {
                                "name": "calldatasize",
                                "nodeType": "YulIdentifier",
                                "src": "13613:12:24"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "13613:14:24"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13629:1:24",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13632:1:24",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "delegatecall",
                            "nodeType": "YulIdentifier",
                            "src": "13574:12:24"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13574:60:24"
                        },
                        "variables": [
                          {
                            "name": "result",
                            "nodeType": "YulTypedName",
                            "src": "13564:6:24",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13702:1:24",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13705:1:24",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [],
                              "functionName": {
                                "name": "returndatasize",
                                "nodeType": "YulIdentifier",
                                "src": "13708:14:24"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "13708:16:24"
                            }
                          ],
                          "functionName": {
                            "name": "returndatacopy",
                            "nodeType": "YulIdentifier",
                            "src": "13687:14:24"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13687:38:24"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "13687:38:24"
                      },
                      {
                        "cases": [
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "13828:67:24",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "13857:1:24",
                                        "type": "",
                                        "value": "0"
                                      },
                                      {
                                        "arguments": [],
                                        "functionName": {
                                          "name": "returndatasize",
                                          "nodeType": "YulIdentifier",
                                          "src": "13860:14:24"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "13860:16:24"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "revert",
                                      "nodeType": "YulIdentifier",
                                      "src": "13850:6:24"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "13850:27:24"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "13850:27:24"
                                }
                              ]
                            },
                            "nodeType": "YulCase",
                            "src": "13821:74:24",
                            "value": {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13826:1:24",
                              "type": "",
                              "value": "0"
                            }
                          },
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "13920:67:24",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "13949:1:24",
                                        "type": "",
                                        "value": "0"
                                      },
                                      {
                                        "arguments": [],
                                        "functionName": {
                                          "name": "returndatasize",
                                          "nodeType": "YulIdentifier",
                                          "src": "13952:14:24"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "13952:16:24"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "return",
                                      "nodeType": "YulIdentifier",
                                      "src": "13942:6:24"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "13942:27:24"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "13942:27:24"
                                }
                              ]
                            },
                            "nodeType": "YulCase",
                            "src": "13912:75:24",
                            "value": "default"
                          }
                        ],
                        "expression": {
                          "name": "result",
                          "nodeType": "YulIdentifier",
                          "src": "13746:6:24"
                        },
                        "nodeType": "YulSwitch",
                        "src": "13739:248:24"
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 2786,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "13594:14:24",
                      "valueSize": 1
                    }
                  ],
                  "id": 2789,
                  "nodeType": "InlineAssembly",
                  "src": "13150:847:24"
                }
              ]
            },
            "documentation": {
              "id": 2784,
              "nodeType": "StructuredDocumentation",
              "src": "12859:169:24",
              "text": "@dev Delegates the current call to `implementation`.\n This function does not return to its internal call site, it will return directly to the external caller."
            },
            "id": 2791,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_delegate",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2787,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2786,
                  "mutability": "mutable",
                  "name": "implementation",
                  "nodeType": "VariableDeclaration",
                  "scope": 2791,
                  "src": "13052:22:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2785,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13052:7:24",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13051:24:24"
            },
            "returnParameters": {
              "id": 2788,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13084:0:24"
            },
            "scope": 2803,
            "src": "13033:970:24",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 2801,
              "nodeType": "Block",
              "src": "14037:60:24",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 2796,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "14081:3:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 2797,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sig",
                            "nodeType": "MemberAccess",
                            "src": "14081:7:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          ],
                          "id": 2795,
                          "name": "getRouterImplementation",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2783,
                          "src": "14057:23:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_address_$",
                            "typeString": "function (bytes4) view returns (address)"
                          }
                        },
                        "id": 2798,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14057:32:24",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2794,
                      "name": "_delegate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2791,
                      "src": "14047:9:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 2799,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14047:43:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2800,
                  "nodeType": "ExpressionStatement",
                  "src": "14047:43:24"
                }
              ]
            },
            "id": 2802,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2792,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14017:2:24"
            },
            "returnParameters": {
              "id": 2793,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14037:0:24"
            },
            "scope": 2803,
            "src": "14009:88:24",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 2804,
        "src": "1271:12916:24"
      }
    ],
    "src": "41:14147:24"
  },
  "bytecode": "6102606040523480156200001257600080fd5b50604051620018fb380380620018fb833981016040819052620000359162000136565b80516001600160601b0319606091821b811660809081526020840151831b821660a09081526040850151841b831660c090815284860151851b841660e090815292860151851b841661010090815291860151851b841661012090815290860151851b841661014090815292860151851b841661016090815291860151851b841661018090815290860151851b84166101a090815292860151851b84166101c05290850151841b83166101e052840151831b82166102005290920151811b9091166102205233901b610240526000805463ff000000191663010000001790556200028c565b80516001600160a01b03811681146200013157600080fd5b919050565b60006101c08083850312156200014a578182fd5b620001558162000268565b9050620001628362000119565b8152620001726020840162000119565b6020820152620001856040840162000119565b6040820152620001986060840162000119565b6060820152620001ab6080840162000119565b6080820152620001be60a0840162000119565b60a0820152620001d160c0840162000119565b60c0820152620001e460e0840162000119565b60e0820152610100620001f981850162000119565b908201526101206200020d84820162000119565b908201526101406200022184820162000119565b908201526101606200023584820162000119565b908201526101806200024984820162000119565b908201526101a06200025d84820162000119565b908201529392505050565b6040518181016001600160401b03811182821017156200028457fe5b604052919050565b60805160601c60a05160601c60c05160601c60e05160601c6101005160601c6101205160601c6101405160601c6101605160601c6101805160601c6101a05160601c6101c05160601c6101e05160601c6102005160601c6102205160601c6102405160601c611553620003a860003980611156525080610a97528061135952508061043f5280611129525080610ef652806110bb525080610da8528061104f52508061110552806111c75250806108f85280610fd45250806108675280611007525080610652528061102b525080610505528061107352508061035d52806110975250806107d65280610fb0525080610af2528061137d525080610f1d5280610f68525080610cfc5280610f8c52806111f352506115536000f3fe6080604052600436106101145760003560e01c80636d7cdbbf116100a0578063a1b4d01111610064578063a1b4d0111461027a578063ba6b7fc21461028f578063c0c53b8b146102a4578063d8e310a4146102c4578063dcc1a738146102d957610114565b80636d7cdbbf1461020657806372d271341461021b57806376e1df481461023057806382463367146102505780638da5cb5b1461026557610114565b806324a3d622116100e757806324a3d6221461019d5780632be75895146101b25780632d255471146101c75780632d2c5565146101dc5780636009b8e6146101f157610114565b80630c4e793514610133578063146278341461015e57806315beeb9314610173578063206109b514610188575b61013161012c6000356001600160e01b0319166102ee565b610f42565b005b34801561013f57600080fd5b50610148610f66565b60405161015591906114b0565b60405180910390f35b34801561016a57600080fd5b50610148610f8a565b34801561017f57600080fd5b50610148610fae565b34801561019457600080fd5b50610148610fd2565b3480156101a957600080fd5b50610148610ff6565b3480156101be57600080fd5b50610148611005565b3480156101d357600080fd5b50610148611029565b3480156101e857600080fd5b5061014861104d565b3480156101fd57600080fd5b50610148611071565b34801561021257600080fd5b50610148611095565b34801561022757600080fd5b506101486110b9565b34801561023c57600080fd5b5061014861024b3660046113f8565b6102ee565b34801561025c57600080fd5b506101486110dd565b34801561027157600080fd5b506101486110ec565b34801561028657600080fd5b50610148611103565b34801561029b57600080fd5b50610148611127565b3480156102b057600080fd5b506101316102bf3660046113b6565b61114b565b3480156102d057600080fd5b50610148611357565b3480156102e557600080fd5b5061014861137b565b60006001600160e01b03198216633735195360e11b148061031f57506001600160e01b03198216630276b64b60e01b145b8061033a57506001600160e01b03198216635950d8e960e01b145b8061035557506001600160e01b03198216630541f52760e41b145b1561038157507f0000000000000000000000000000000000000000000000000000000000000000610f3d565b6001600160e01b03198216638f0ba30f60e01b14806103b057506001600160e01b0319821663734b723160e11b145b806103cb57506001600160e01b03198216636dad6afb60e01b145b806103e657506001600160e01b0319821663f292c41560e01b145b8061040157506001600160e01b0319821663c025d1a560e01b145b8061041c57506001600160e01b03198216630604ffab60e11b145b8061043757506001600160e01b0319821663323e60cb60e11b145b1561046357507f0000000000000000000000000000000000000000000000000000000000000000610f3d565b6001600160e01b03198216632890fb6560e01b148061049257506001600160e01b0319821663b8a6945560e01b145b806104ac57506001600160e01b03198216625e665d60e31b145b806104c757506001600160e01b0319821663f667f89760e01b145b806104e257506001600160e01b03198216636689064360e01b145b806104fd57506001600160e01b031982166309c9794560e41b145b1561052957507f0000000000000000000000000000000000000000000000000000000000000000610f3d565b6001600160e01b031982166301ffc9a760e01b148061055757506001600160e01b03198216627eeac760e11b145b8061057257506001600160e01b031982166313849cfd60e21b145b8061058d57506001600160e01b03198216630fac8f0960e01b145b806105a857506001600160e01b031982166381a8685560e01b145b806105c357506001600160e01b03198216637921219560e11b145b806105de57506001600160e01b03198216631759616b60e11b145b806105f957506001600160e01b031982166307f4d70160e31b145b8061061457506001600160e01b03198216630e6b43b960e31b145b8061062f57506001600160e01b0319821663a22cb46560e01b145b8061064a57506001600160e01b0319821663e985e9c560e01b145b1561067657507f0000000000000000000000000000000000000000000000000000000000000000610f3d565b6001600160e01b03198216636a96e86f60e01b14806106a557506001600160e01b03198216637db31ab960e01b145b806106c057506001600160e01b0319821663a78dbfff60e01b145b806106db57506001600160e01b0319821663184e005360e11b145b806106f657506001600160e01b031982166318ae40d760e01b145b8061071157506001600160e01b03198216634425384960e11b145b8061072c57506001600160e01b031982166305c1d97560e31b145b8061074757506001600160e01b03198216636d6503d360e11b145b8061076257506001600160e01b03198216631a05bce160e01b145b8061077d57506001600160e01b03198216633b2987b360e01b145b8061079857506001600160e01b03198216634cb6b35960e01b145b806107b357506001600160e01b031982166331e14c1960e11b145b806107ce57506001600160e01b0319821663450083df60e11b145b156107fa57507f0000000000000000000000000000000000000000000000000000000000000000610f3d565b6001600160e01b03198216632d10e6eb60e01b148061082957506001600160e01b03198216636633af3960e01b145b8061084457506001600160e01b0319821663e3e7cb4f60e01b145b8061085f57506001600160e01b03198216639a600eeb60e01b145b1561088b57507f0000000000000000000000000000000000000000000000000000000000000000610f3d565b6001600160e01b03198216631ff7aefd60e21b14806108ba57506001600160e01b0319821663e816469d60e01b145b806108d557506001600160e01b03198216630fb281d960e01b145b806108f057506001600160e01b0319821663fa37e39560e01b145b1561091c57507f0000000000000000000000000000000000000000000000000000000000000000610f3d565b6001600160e01b031982166351479e3960e01b148061094b57506001600160e01b031982166315bd0a3160e21b145b8061096657506001600160e01b03198216636b6ef5cd60e11b145b8061098157506001600160e01b0319821663291afdf360e01b145b8061099c57506001600160e01b0319821663341305ab60e21b145b806109b757506001600160e01b0319821663ee01436b60e01b145b806109d257506001600160e01b031982166383e50fb760e01b145b806109ed57506001600160e01b03198216636674bc3b60e11b145b80610a0857506001600160e01b0319821663295e6b7f60e01b145b80610a2357506001600160e01b0319821663de1eb9a360e01b145b80610a3e57506001600160e01b031982166333a8abbb60e11b145b80610a5957506001600160e01b031982166328536d5f60e21b145b80610a7457506001600160e01b03198216633157228160e01b145b80610a8f57506001600160e01b03198216636c346c0960e01b145b15610abb57507f0000000000000000000000000000000000000000000000000000000000000000610f3d565b6001600160e01b03198216630343819360e61b1480610aea57506001600160e01b03198216635db6eac760e11b145b15610b1657507f0000000000000000000000000000000000000000000000000000000000000000610f3d565b6001600160e01b03198216637abaf27160e11b1480610b4557506001600160e01b0319821663e31051a160e01b145b80610b6057506001600160e01b0319821663a11a429360e01b145b80610b7b57506001600160e01b03198216630528476560e51b145b80610b9657506001600160e01b0319821663315cb2b960e21b145b80610bb157506001600160e01b03198216632c90b94d60e21b145b80610bcc57506001600160e01b031982166309ce3c1960e31b145b80610be757506001600160e01b031982166354ebde2960e11b145b80610c0257506001600160e01b031982166398dcbc2360e01b145b80610c1d57506001600160e01b031982166333eabd1d60e21b145b80610c3857506001600160e01b0319821663413f2c5f60e01b145b80610c5357506001600160e01b03198216630d0da86760e21b145b80610c6e57506001600160e01b0319821663353abc5d60e01b145b80610c8957506001600160e01b0319821663fa17b5f160e01b145b80610ca457506001600160e01b0319821663113aa8b160e01b145b80610cbe57506001600160e01b031982166247466360e01b145b80610cd957506001600160e01b03198216631b2ce7f360e11b145b80610cf457506001600160e01b0319821663278f794360e11b145b15610d2057507f0000000000000000000000000000000000000000000000000000000000000000610f3d565b6001600160e01b03198216637d6dbff760e11b1480610d4f57506001600160e01b03198216636d7a00eb60e01b145b80610d6a57506001600160e01b03198216637f23d4f960e11b145b80610d8557506001600160e01b0319821663239cec8f60e21b145b80610da057506001600160e01b031982166312adc47b60e01b145b15610dcc57507f0000000000000000000000000000000000000000000000000000000000000000610f3d565b6001600160e01b03198216636a09a2a360e01b1480610dfb57506001600160e01b03198216638355e89560e01b145b80610e1657506001600160e01b0319821663094614df60e01b145b80610e3157506001600160e01b03198216634beb6d9760e11b145b80610e4c57506001600160e01b0319821663c52c43e160e01b145b80610e6757506001600160e01b03198216635953c77b60e01b145b80610e8257506001600160e01b03198216631f0750c160e31b145b80610e9d57506001600160e01b0319821663bac9e8b160e01b145b80610eb857506001600160e01b0319821663aaae47b560e01b145b80610ed357506001600160e01b0319821663416a158760e01b145b80610eee57506001600160e01b03198216631baefc5d60e21b145b15610f1a57507f0000000000000000000000000000000000000000000000000000000000000000610f3d565b507f00000000000000000000000000000000000000000000000000000000000000005b919050565b3660008037600080366000845af43d6000803e808015610f61573d6000f35b3d6000fd5b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b6002546001600160a01b031681565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b6001546001600160a01b031681565b60005464010000000090046001600160a01b031681565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614801561118d57506000546301000000900460ff16155b61119657600080fd5b60008054640100000000600160c01b03191633640100000000021781556040805160a0810182526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081168252602082018490527f00000000000000000000000000000000000000000000000000000000000000001691637abaf27160e11b9190810160028152600860208083019190915260006040928301819052825160a08101845281815291820152908101600381526012602082015260006040918201819052905161127c939291908190608590604b90606c906024016114c4565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b03199094169390931790925290516112ba9190611477565b600060405180830381855af49150503d80600081146112f5576040519150601f19603f3d011682016040523d82523d6000602084013e6112fa565b606091505b505090508061130857600080fd5b50600080546001600160a01b0394851664010000000002640100000000600160c01b0319909116179055600180549284166001600160a01b031993841617905560028054919093169116179055565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b80356001600160a01b0381168114610f3d57600080fd5b6000806000606084860312156113ca578283fd5b6113d38461139f565b92506113e16020850161139f565b91506113ef6040850161139f565b90509250925092565b600060208284031215611409578081fd5b81356001600160e01b031981168114611420578182fd5b9392505050565b80516001600160a01b0316825260208082015115159083015260408101516006811061144f57fe5b604083015260608181015160ff169083015260809081015168ffffffffffffffffff16910152565b60008251815b81811015611497576020818601810151858301520161147d565b818111156114a55782828501525b509190910192915050565b6001600160a01b0391909116815260200190565b6101e081016114d3828a611427565b6114e060a0830189611427565b6001600160a01b039690961661014082015293151561016085015260ff9283166101808501529082166101a0840152166101c0909101529291505056fea264697066735822122097944f8dc8d335f67f0a50fad1df2bd432ef786ddca51de74fe4abbdb989873d64736f6c63430007060033",
  "bytecodeSha1": "e6926152a31706e9faf3901b11f6f22cb69d95ea",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.7.6+commit.7338295f"
  },
  "contractName": "Router",
  "coverageMap": {
    "branches": {
      "24": {
        "Router.getRouterImplementation": {
          "20": [
            5071,
            5119,
            true
          ],
          "21": [
            5135,
            5191,
            true
          ],
          "22": [
            5207,
            5275,
            true
          ],
          "23": [
            5291,
            5330,
            false
          ],
          "24": [
            5408,
            5454,
            true
          ],
          "25": [
            5470,
            5523,
            true
          ],
          "26": [
            5539,
            5584,
            true
          ],
          "27": [
            5600,
            5653,
            true
          ],
          "28": [
            5669,
            5720,
            true
          ],
          "29": [
            5736,
            5795,
            true
          ],
          "30": [
            5811,
            5877,
            false
          ],
          "31": [
            5963,
            6015,
            true
          ],
          "32": [
            6031,
            6078,
            true
          ],
          "33": [
            6094,
            6132,
            true
          ],
          "34": [
            6148,
            6191,
            true
          ],
          "35": [
            6207,
            6249,
            true
          ],
          "36": [
            6265,
            6315,
            false
          ],
          "37": [
            6395,
            6446,
            true
          ],
          "38": [
            6462,
            6505,
            true
          ],
          "39": [
            6521,
            6569,
            true
          ],
          "40": [
            6585,
            6634,
            true
          ],
          "41": [
            6650,
            6704,
            true
          ],
          "42": [
            6720,
            6770,
            true
          ],
          "43": [
            6786,
            6841,
            true
          ],
          "44": [
            6857,
            6905,
            true
          ],
          "45": [
            6921,
            6965,
            true
          ],
          "46": [
            6981,
            7032,
            true
          ],
          "47": [
            7048,
            7098,
            false
          ],
          "48": [
            7171,
            7218,
            true
          ],
          "49": [
            7234,
            7287,
            true
          ],
          "50": [
            7303,
            7348,
            true
          ],
          "51": [
            7364,
            7415,
            true
          ],
          "52": [
            7431,
            7475,
            true
          ],
          "53": [
            7491,
            7539,
            true
          ],
          "54": [
            7555,
            7609,
            true
          ],
          "55": [
            7625,
            7676,
            true
          ],
          "56": [
            7692,
            7756,
            true
          ],
          "57": [
            7772,
            7841,
            true
          ],
          "58": [
            7857,
            7923,
            true
          ],
          "59": [
            7939,
            7989,
            true
          ],
          "60": [
            8005,
            8053,
            false
          ],
          "61": [
            8133,
            8185,
            true
          ],
          "62": [
            8201,
            8258,
            true
          ],
          "63": [
            8274,
            8337,
            true
          ],
          "64": [
            8353,
            8421,
            false
          ],
          "65": [
            8505,
            8554,
            true
          ],
          "66": [
            8570,
            8627,
            true
          ],
          "67": [
            8643,
            8703,
            true
          ],
          "68": [
            8719,
            8787,
            false
          ],
          "69": [
            8868,
            8908,
            true
          ],
          "70": [
            8924,
            8972,
            true
          ],
          "71": [
            8988,
            9040,
            true
          ],
          "72": [
            9056,
            9114,
            true
          ],
          "73": [
            9130,
            9191,
            true
          ],
          "74": [
            9207,
            9262,
            true
          ],
          "75": [
            9278,
            9337,
            true
          ],
          "76": [
            9353,
            9413,
            true
          ],
          "77": [
            9429,
            9469,
            true
          ],
          "78": [
            9485,
            9528,
            true
          ],
          "79": [
            9544,
            9590,
            true
          ],
          "80": [
            9606,
            9653,
            true
          ],
          "81": [
            9669,
            9711,
            true
          ],
          "82": [
            9727,
            9779,
            false
          ],
          "83": [
            9857,
            9904,
            true
          ],
          "84": [
            9920,
            9970,
            false
          ],
          "85": [
            10053,
            10100,
            true
          ],
          "86": [
            10116,
            10166,
            true
          ],
          "87": [
            10182,
            10232,
            true
          ],
          "88": [
            10248,
            10298,
            true
          ],
          "89": [
            10314,
            10362,
            true
          ],
          "90": [
            10378,
            10430,
            true
          ],
          "91": [
            10446,
            10495,
            true
          ],
          "92": [
            10511,
            10573,
            true
          ],
          "93": [
            10589,
            10650,
            true
          ],
          "94": [
            10666,
            10724,
            true
          ],
          "95": [
            10740,
            10805,
            true
          ],
          "96": [
            10821,
            10887,
            true
          ],
          "97": [
            10903,
            10966,
            true
          ],
          "98": [
            10982,
            11049,
            true
          ],
          "99": [
            11065,
            11114,
            true
          ],
          "100": [
            11130,
            11184,
            true
          ],
          "101": [
            11200,
            11239,
            true
          ],
          "102": [
            11255,
            11301,
            false
          ],
          "103": [
            11377,
            11430,
            true
          ],
          "104": [
            11446,
            11504,
            true
          ],
          "105": [
            11520,
            11571,
            true
          ],
          "106": [
            11587,
            11636,
            true
          ],
          "107": [
            11652,
            11706,
            false
          ],
          "108": [
            11780,
            11839,
            true
          ],
          "109": [
            11855,
            11921,
            true
          ],
          "110": [
            11937,
            12003,
            true
          ],
          "111": [
            12019,
            12084,
            true
          ],
          "112": [
            12100,
            12157,
            true
          ],
          "113": [
            12173,
            12224,
            true
          ],
          "114": [
            12240,
            12300,
            true
          ],
          "115": [
            12316,
            12380,
            true
          ],
          "116": [
            12396,
            12456,
            true
          ],
          "117": [
            12472,
            12536,
            true
          ],
          "118": [
            12552,
            12617,
            false
          ]
        },
        "Router.initialize": {
          "119": [
            3539,
            3561,
            false
          ],
          "120": [
            3566,
            3580,
            true
          ],
          "121": [
            4581,
            4587,
            true
          ]
        }
      },
      "63": {},
      "66": {},
      "68": {}
    },
    "statements": {
      "24": {
        "Router.<fallback>": {
          "0": [
            14047,
            14090
          ]
        },
        "Router.getRouterImplementation": {
          "1": [
            5355,
            5374
          ],
          "2": [
            5902,
            5929
          ],
          "3": [
            6340,
            6361
          ],
          "4": [
            7123,
            7137
          ],
          "5": [
            8078,
            8099
          ],
          "6": [
            8446,
            8471
          ],
          "7": [
            8812,
            8834
          ],
          "8": [
            9804,
            9823
          ],
          "9": [
            9995,
            10019
          ],
          "10": [
            11326,
            11343
          ],
          "11": [
            11731,
            11746
          ],
          "12": [
            12642,
            12666
          ],
          "13": [
            12824,
            12836
          ]
        },
        "Router.initialize": {
          "14": [
            3531,
            3581
          ],
          "15": [
            3715,
            3733
          ],
          "16": [
            4573,
            4588
          ],
          "17": [
            4599,
            4613
          ],
          "18": [
            4697,
            4723
          ],
          "19": [
            4733,
            4763
          ]
        }
      },
      "63": {},
      "66": {},
      "68": {}
    }
  },
  "dependencies": [
    "Constants",
    "StorageLayoutV1"
  ],
  "deployedBytecode": "6080604052600436106101145760003560e01c80636d7cdbbf116100a0578063a1b4d01111610064578063a1b4d0111461027a578063ba6b7fc21461028f578063c0c53b8b146102a4578063d8e310a4146102c4578063dcc1a738146102d957610114565b80636d7cdbbf1461020657806372d271341461021b57806376e1df481461023057806382463367146102505780638da5cb5b1461026557610114565b806324a3d622116100e757806324a3d6221461019d5780632be75895146101b25780632d255471146101c75780632d2c5565146101dc5780636009b8e6146101f157610114565b80630c4e793514610133578063146278341461015e57806315beeb9314610173578063206109b514610188575b61013161012c6000356001600160e01b0319166102ee565b610f42565b005b34801561013f57600080fd5b50610148610f66565b60405161015591906114b0565b60405180910390f35b34801561016a57600080fd5b50610148610f8a565b34801561017f57600080fd5b50610148610fae565b34801561019457600080fd5b50610148610fd2565b3480156101a957600080fd5b50610148610ff6565b3480156101be57600080fd5b50610148611005565b3480156101d357600080fd5b50610148611029565b3480156101e857600080fd5b5061014861104d565b3480156101fd57600080fd5b50610148611071565b34801561021257600080fd5b50610148611095565b34801561022757600080fd5b506101486110b9565b34801561023c57600080fd5b5061014861024b3660046113f8565b6102ee565b34801561025c57600080fd5b506101486110dd565b34801561027157600080fd5b506101486110ec565b34801561028657600080fd5b50610148611103565b34801561029b57600080fd5b50610148611127565b3480156102b057600080fd5b506101316102bf3660046113b6565b61114b565b3480156102d057600080fd5b50610148611357565b3480156102e557600080fd5b5061014861137b565b60006001600160e01b03198216633735195360e11b148061031f57506001600160e01b03198216630276b64b60e01b145b8061033a57506001600160e01b03198216635950d8e960e01b145b8061035557506001600160e01b03198216630541f52760e41b145b1561038157507f0000000000000000000000000000000000000000000000000000000000000000610f3d565b6001600160e01b03198216638f0ba30f60e01b14806103b057506001600160e01b0319821663734b723160e11b145b806103cb57506001600160e01b03198216636dad6afb60e01b145b806103e657506001600160e01b0319821663f292c41560e01b145b8061040157506001600160e01b0319821663c025d1a560e01b145b8061041c57506001600160e01b03198216630604ffab60e11b145b8061043757506001600160e01b0319821663323e60cb60e11b145b1561046357507f0000000000000000000000000000000000000000000000000000000000000000610f3d565b6001600160e01b03198216632890fb6560e01b148061049257506001600160e01b0319821663b8a6945560e01b145b806104ac57506001600160e01b03198216625e665d60e31b145b806104c757506001600160e01b0319821663f667f89760e01b145b806104e257506001600160e01b03198216636689064360e01b145b806104fd57506001600160e01b031982166309c9794560e41b145b1561052957507f0000000000000000000000000000000000000000000000000000000000000000610f3d565b6001600160e01b031982166301ffc9a760e01b148061055757506001600160e01b03198216627eeac760e11b145b8061057257506001600160e01b031982166313849cfd60e21b145b8061058d57506001600160e01b03198216630fac8f0960e01b145b806105a857506001600160e01b031982166381a8685560e01b145b806105c357506001600160e01b03198216637921219560e11b145b806105de57506001600160e01b03198216631759616b60e11b145b806105f957506001600160e01b031982166307f4d70160e31b145b8061061457506001600160e01b03198216630e6b43b960e31b145b8061062f57506001600160e01b0319821663a22cb46560e01b145b8061064a57506001600160e01b0319821663e985e9c560e01b145b1561067657507f0000000000000000000000000000000000000000000000000000000000000000610f3d565b6001600160e01b03198216636a96e86f60e01b14806106a557506001600160e01b03198216637db31ab960e01b145b806106c057506001600160e01b0319821663a78dbfff60e01b145b806106db57506001600160e01b0319821663184e005360e11b145b806106f657506001600160e01b031982166318ae40d760e01b145b8061071157506001600160e01b03198216634425384960e11b145b8061072c57506001600160e01b031982166305c1d97560e31b145b8061074757506001600160e01b03198216636d6503d360e11b145b8061076257506001600160e01b03198216631a05bce160e01b145b8061077d57506001600160e01b03198216633b2987b360e01b145b8061079857506001600160e01b03198216634cb6b35960e01b145b806107b357506001600160e01b031982166331e14c1960e11b145b806107ce57506001600160e01b0319821663450083df60e11b145b156107fa57507f0000000000000000000000000000000000000000000000000000000000000000610f3d565b6001600160e01b03198216632d10e6eb60e01b148061082957506001600160e01b03198216636633af3960e01b145b8061084457506001600160e01b0319821663e3e7cb4f60e01b145b8061085f57506001600160e01b03198216639a600eeb60e01b145b1561088b57507f0000000000000000000000000000000000000000000000000000000000000000610f3d565b6001600160e01b03198216631ff7aefd60e21b14806108ba57506001600160e01b0319821663e816469d60e01b145b806108d557506001600160e01b03198216630fb281d960e01b145b806108f057506001600160e01b0319821663fa37e39560e01b145b1561091c57507f0000000000000000000000000000000000000000000000000000000000000000610f3d565b6001600160e01b031982166351479e3960e01b148061094b57506001600160e01b031982166315bd0a3160e21b145b8061096657506001600160e01b03198216636b6ef5cd60e11b145b8061098157506001600160e01b0319821663291afdf360e01b145b8061099c57506001600160e01b0319821663341305ab60e21b145b806109b757506001600160e01b0319821663ee01436b60e01b145b806109d257506001600160e01b031982166383e50fb760e01b145b806109ed57506001600160e01b03198216636674bc3b60e11b145b80610a0857506001600160e01b0319821663295e6b7f60e01b145b80610a2357506001600160e01b0319821663de1eb9a360e01b145b80610a3e57506001600160e01b031982166333a8abbb60e11b145b80610a5957506001600160e01b031982166328536d5f60e21b145b80610a7457506001600160e01b03198216633157228160e01b145b80610a8f57506001600160e01b03198216636c346c0960e01b145b15610abb57507f0000000000000000000000000000000000000000000000000000000000000000610f3d565b6001600160e01b03198216630343819360e61b1480610aea57506001600160e01b03198216635db6eac760e11b145b15610b1657507f0000000000000000000000000000000000000000000000000000000000000000610f3d565b6001600160e01b03198216637abaf27160e11b1480610b4557506001600160e01b0319821663e31051a160e01b145b80610b6057506001600160e01b0319821663a11a429360e01b145b80610b7b57506001600160e01b03198216630528476560e51b145b80610b9657506001600160e01b0319821663315cb2b960e21b145b80610bb157506001600160e01b03198216632c90b94d60e21b145b80610bcc57506001600160e01b031982166309ce3c1960e31b145b80610be757506001600160e01b031982166354ebde2960e11b145b80610c0257506001600160e01b031982166398dcbc2360e01b145b80610c1d57506001600160e01b031982166333eabd1d60e21b145b80610c3857506001600160e01b0319821663413f2c5f60e01b145b80610c5357506001600160e01b03198216630d0da86760e21b145b80610c6e57506001600160e01b0319821663353abc5d60e01b145b80610c8957506001600160e01b0319821663fa17b5f160e01b145b80610ca457506001600160e01b0319821663113aa8b160e01b145b80610cbe57506001600160e01b031982166247466360e01b145b80610cd957506001600160e01b03198216631b2ce7f360e11b145b80610cf457506001600160e01b0319821663278f794360e11b145b15610d2057507f0000000000000000000000000000000000000000000000000000000000000000610f3d565b6001600160e01b03198216637d6dbff760e11b1480610d4f57506001600160e01b03198216636d7a00eb60e01b145b80610d6a57506001600160e01b03198216637f23d4f960e11b145b80610d8557506001600160e01b0319821663239cec8f60e21b145b80610da057506001600160e01b031982166312adc47b60e01b145b15610dcc57507f0000000000000000000000000000000000000000000000000000000000000000610f3d565b6001600160e01b03198216636a09a2a360e01b1480610dfb57506001600160e01b03198216638355e89560e01b145b80610e1657506001600160e01b0319821663094614df60e01b145b80610e3157506001600160e01b03198216634beb6d9760e11b145b80610e4c57506001600160e01b0319821663c52c43e160e01b145b80610e6757506001600160e01b03198216635953c77b60e01b145b80610e8257506001600160e01b03198216631f0750c160e31b145b80610e9d57506001600160e01b0319821663bac9e8b160e01b145b80610eb857506001600160e01b0319821663aaae47b560e01b145b80610ed357506001600160e01b0319821663416a158760e01b145b80610eee57506001600160e01b03198216631baefc5d60e21b145b15610f1a57507f0000000000000000000000000000000000000000000000000000000000000000610f3d565b507f00000000000000000000000000000000000000000000000000000000000000005b919050565b3660008037600080366000845af43d6000803e808015610f61573d6000f35b3d6000fd5b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b6002546001600160a01b031681565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b6001546001600160a01b031681565b60005464010000000090046001600160a01b031681565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614801561118d57506000546301000000900460ff16155b61119657600080fd5b60008054640100000000600160c01b03191633640100000000021781556040805160a0810182526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081168252602082018490527f00000000000000000000000000000000000000000000000000000000000000001691637abaf27160e11b9190810160028152600860208083019190915260006040928301819052825160a08101845281815291820152908101600381526012602082015260006040918201819052905161127c939291908190608590604b90606c906024016114c4565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b03199094169390931790925290516112ba9190611477565b600060405180830381855af49150503d80600081146112f5576040519150601f19603f3d011682016040523d82523d6000602084013e6112fa565b606091505b505090508061130857600080fd5b50600080546001600160a01b0394851664010000000002640100000000600160c01b0319909116179055600180549284166001600160a01b031993841617905560028054919093169116179055565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b80356001600160a01b0381168114610f3d57600080fd5b6000806000606084860312156113ca578283fd5b6113d38461139f565b92506113e16020850161139f565b91506113ef6040850161139f565b90509250925092565b600060208284031215611409578081fd5b81356001600160e01b031981168114611420578182fd5b9392505050565b80516001600160a01b0316825260208082015115159083015260408101516006811061144f57fe5b604083015260608181015160ff169083015260809081015168ffffffffffffffffff16910152565b60008251815b81811015611497576020818601810151858301520161147d565b818111156114a55782828501525b509190910192915050565b6001600160a01b0391909116815260200190565b6101e081016114d3828a611427565b6114e060a0830189611427565b6001600160a01b039690961661014082015293151561016085015260ff9283166101808501529082166101a0840152166101c0909101529291505056fea264697066735822122097944f8dc8d335f67f0a50fad1df2bd432ef786ddca51de74fe4abbdb989873d64736f6c63430007060033",
  "deployedSourceMap": "1271:12916:24:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14047:43;14057:32;14081:7;;-1:-1:-1;;;;;;14081:7:24;14057:23;:32::i;:::-;14047:9;:43::i;:::-;1271:12916;1431:30;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1390:35;;;;;;;;;;;;;:::i;1515:39::-;;;;;;;;;;;;;:::i;1735:40::-;;;;;;;;;;;;;:::i;1035:28:66:-;;;;;;;;;;;;;:::i;1686:43:24:-;;;;;;;;;;;;;:::i;1648:32::-;;;;;;;;;;;;;:::i;1816:33::-;;;;;;;;;;;;;:::i;1603:39::-;;;;;;;;;;;;;:::i;1560:37::-;;;;;;;;;;;;;:::i;1855:42::-;;;;;;;;;;;;;:::i;4969:7884::-;;;;;;;;;;-1:-1:-1;4969:7884:24;;;;;:::i;:::-;;:::i;920:26:66:-;;;;;;;;;;;;;:::i;811:20::-;;;;;;;;;;;;;:::i;1781:29:24:-;;;;;;;;;;;;;:::i;1903:45::-;;;;;;;;;;;;;:::i;3377:1426::-;;;;;;;;;;-1:-1:-1;3377:1426:24;;;;;:::i;:::-;;:::i;1954:37::-;;;;;;;;;;;;;:::i;1467:42::-;;;;;;;;;;;;;:::i;4969:7884::-;5035:7;-1:-1:-1;;;;;;5071:48:24;;-1:-1:-1;;;5071:48:24;;:120;;-1:-1:-1;;;;;;;5135:56:24;;-1:-1:-1;;;5135:56:24;5071:120;:204;;;-1:-1:-1;;;;;;;5207:68:24;;-1:-1:-1;;;5207:68:24;5071:204;:259;;;-1:-1:-1;;;;;;;5291:39:24;;-1:-1:-1;;;5291:39:24;5071:259;5054:7793;;;-1:-1:-1;5362:12:24;5355:19;;5054:7793;-1:-1:-1;;;;;;5408:46:24;;-1:-1:-1;;;5408:46:24;;:115;;-1:-1:-1;;;;;;;5470:53:24;;-1:-1:-1;;;5470:53:24;5408:115;:176;;;-1:-1:-1;;;;;;;5539:45:24;;-1:-1:-1;;;5539:45:24;5408:176;:245;;;-1:-1:-1;;;;;;;5600:53:24;;-1:-1:-1;;;5600:53:24;5408:245;:312;;;-1:-1:-1;;;;;;;5669:51:24;;-1:-1:-1;;;5669:51:24;5408:312;:387;;;-1:-1:-1;;;;;;;5736:59:24;;-1:-1:-1;;;5736:59:24;5408:387;:469;;;-1:-1:-1;;;;;;;5811:66:24;;-1:-1:-1;;;5811:66:24;5408:469;5391:7456;;;-1:-1:-1;5909:20:24;5902:27;;5391:7456;-1:-1:-1;;;;;;5963:52:24;;-1:-1:-1;;;5963:52:24;;:115;;-1:-1:-1;;;;;;;6031:47:24;;-1:-1:-1;;;6031:47:24;5963:115;:169;;;-1:-1:-1;;;;;;;6094:38:24;;-1:-1:-1;;;6094:38:24;5963:169;:228;;;-1:-1:-1;;;;;;;6148:43:24;;-1:-1:-1;;;6148:43:24;5963:228;:286;;;-1:-1:-1;;;;;;;6207:42:24;;-1:-1:-1;;;6207:42:24;5963:286;:352;;;-1:-1:-1;;;;;;;6265:50:24;;-1:-1:-1;;;6265:50:24;5963:352;5946:6901;;;-1:-1:-1;6347:14:24;6340:21;;5946:6901;-1:-1:-1;;;;;;6395:51:24;;-1:-1:-1;;;6395:51:24;;:110;;-1:-1:-1;;;;;;;6462:43:24;;-1:-1:-1;;;6462:43:24;6395:110;:174;;;-1:-1:-1;;;;;;;6521:48:24;;-1:-1:-1;;;6521:48:24;6395:174;:239;;;-1:-1:-1;;;;;;;6585:49:24;;-1:-1:-1;;;6585:49:24;6395:239;:309;;;-1:-1:-1;;;;;;;6650:54:24;;-1:-1:-1;;;6650:54:24;6395:309;:375;;;-1:-1:-1;;;;;;;6720:50:24;;-1:-1:-1;;;6720:50:24;6395:375;:446;;;-1:-1:-1;;;;;;;6786:55:24;;-1:-1:-1;;;6786:55:24;6395:446;:510;;;-1:-1:-1;;;;;;;6857:48:24;;-1:-1:-1;;;6857:48:24;6395:510;:570;;;-1:-1:-1;;;;;;;6921:44:24;;-1:-1:-1;;;6921:44:24;6395:570;:637;;;-1:-1:-1;;;;;;;6981:51:24;;-1:-1:-1;;;6981:51:24;6395:637;:703;;;-1:-1:-1;;;;;;;7048:50:24;;-1:-1:-1;;;7048:50:24;6395:703;6378:6469;;;-1:-1:-1;7130:7:24;7123:14;;6378:6469;-1:-1:-1;;;;;;7171:47:24;;-1:-1:-1;;;7171:47:24;;:116;;-1:-1:-1;;;;;;;7234:53:24;;-1:-1:-1;;;7234:53:24;7171:116;:177;;;-1:-1:-1;;;;;;;7303:45:24;;-1:-1:-1;;;7303:45:24;7171:177;:244;;;-1:-1:-1;;;;;;;7364:51:24;;-1:-1:-1;;;7364:51:24;7171:244;:304;;;-1:-1:-1;;;;;;;7431:44:24;;-1:-1:-1;;;7431:44:24;7171:304;:368;;;-1:-1:-1;;;;;;;7491:48:24;;-1:-1:-1;;;7491:48:24;7171:368;:438;;;-1:-1:-1;;;;;;;7555:54:24;;-1:-1:-1;;;7555:54:24;7171:438;:505;;;-1:-1:-1;;;;;;;7625:51:24;;-1:-1:-1;;;7625:51:24;7171:505;:585;;;-1:-1:-1;;;;;;;7692:64:24;;-1:-1:-1;;;7692:64:24;7171:585;:670;;;-1:-1:-1;;;;;;;7772:69:24;;-1:-1:-1;;;7772:69:24;7171:670;:752;;;-1:-1:-1;;;;;;;7857:66:24;;-1:-1:-1;;;7857:66:24;7171:752;:818;;;-1:-1:-1;;;;;;;7939:50:24;;-1:-1:-1;;;7939:50:24;7171:818;:882;;;-1:-1:-1;;;;;;;8005:48:24;;-1:-1:-1;;;8005:48:24;7171:882;7154:5693;;;-1:-1:-1;8085:14:24;8078:21;;7154:5693;-1:-1:-1;;;;;;8133:52:24;;-1:-1:-1;;;8133:52:24;;:125;;-1:-1:-1;;;;;;;8201:57:24;;-1:-1:-1;;;8201:57:24;8133:125;:204;;;-1:-1:-1;;;;;;;8274:63:24;;-1:-1:-1;;;8274:63:24;8133:204;:288;;;-1:-1:-1;;;;;;;8353:68:24;;-1:-1:-1;;;8353:68:24;8133:288;8116:4731;;;-1:-1:-1;8453:18:24;8446:25;;8116:4731;-1:-1:-1;;;;;;8505:49:24;;-1:-1:-1;;;8505:49:24;;:122;;-1:-1:-1;;;;;;;8570:57:24;;-1:-1:-1;;;8570:57:24;8505:122;:198;;;-1:-1:-1;;;;;;;8643:60:24;;-1:-1:-1;;;8643:60:24;8505:198;:282;;;-1:-1:-1;;;;;;;8719:68:24;;-1:-1:-1;;;8719:68:24;8505:282;8488:4359;;;-1:-1:-1;8819:15:24;8812:22;;8488:4359;-1:-1:-1;;;;;;8868:40:24;;-1:-1:-1;;;8868:40:24;;:104;;-1:-1:-1;;;;;;;8924:48:24;;-1:-1:-1;;;8924:48:24;8868:104;:172;;;-1:-1:-1;;;;;;;8988:52:24;;-1:-1:-1;;;8988:52:24;8868:172;:246;;;-1:-1:-1;;;;;;;9056:58:24;;-1:-1:-1;;;9056:58:24;8868:246;:323;;;-1:-1:-1;;;;;;;9130:61:24;;-1:-1:-1;;;9130:61:24;8868:323;:394;;;-1:-1:-1;;;;;;;9207:55:24;;-1:-1:-1;;;9207:55:24;8868:394;:469;;;-1:-1:-1;;;;;;;9278:59:24;;-1:-1:-1;;;9278:59:24;8868:469;:545;;;-1:-1:-1;;;;;;;9353:60:24;;-1:-1:-1;;;9353:60:24;8868:545;:601;;;-1:-1:-1;;;;;;;9429:40:24;;-1:-1:-1;;;9429:40:24;8868:601;:660;;;-1:-1:-1;;;;;;;9485:43:24;;-1:-1:-1;;;9485:43:24;8868:660;:722;;;-1:-1:-1;;;;;;;9544:46:24;;-1:-1:-1;;;9544:46:24;8868:722;:785;;;-1:-1:-1;;;;;;;9606:47:24;;-1:-1:-1;;;9606:47:24;8868:785;:843;;;-1:-1:-1;;;;;;;9669:42:24;;-1:-1:-1;;;9669:42:24;8868:843;:911;;;-1:-1:-1;;;;;;;9727:52:24;;-1:-1:-1;;;9727:52:24;8868:911;8851:3996;;;-1:-1:-1;9811:12:24;9804:19;;8851:3996;-1:-1:-1;;;;;;9857:47:24;;-1:-1:-1;;;9857:47:24;;:113;;-1:-1:-1;;;;;;;9920:50:24;;-1:-1:-1;;;9920:50:24;9857:113;9840:3007;;;-1:-1:-1;10002:17:24;9995:24;;9840:3007;-1:-1:-1;;;;;;10053:47:24;;-1:-1:-1;;;10053:47:24;;:113;;-1:-1:-1;;;;;;;10116:50:24;;-1:-1:-1;;;10116:50:24;10053:113;:179;;;-1:-1:-1;;;;;;;10182:50:24;;-1:-1:-1;;;10182:50:24;10053:179;:245;;;-1:-1:-1;;;;;;;10248:50:24;;-1:-1:-1;;;10248:50:24;10053:245;:309;;;-1:-1:-1;;;;;;;10314:48:24;;-1:-1:-1;;;10314:48:24;10053:309;:377;;;-1:-1:-1;;;;;;;10378:52:24;;-1:-1:-1;;;10378:52:24;10053:377;:442;;;-1:-1:-1;;;;;;;10446:49:24;;-1:-1:-1;;;10446:49:24;10053:442;:520;;;-1:-1:-1;;;;;;;10511:62:24;;-1:-1:-1;;;10511:62:24;10053:520;:597;;;-1:-1:-1;;;;;;;10589:61:24;;-1:-1:-1;;;10589:61:24;10053:597;:671;;;-1:-1:-1;;;;;;;10666:58:24;;-1:-1:-1;;;10666:58:24;10053:671;:752;;;-1:-1:-1;;;;;;;10740:65:24;;-1:-1:-1;;;10740:65:24;10053:752;:834;;;-1:-1:-1;;;;;;;10821:66:24;;-1:-1:-1;;;10821:66:24;10053:834;:913;;;-1:-1:-1;;;;;;;10903:63:24;;-1:-1:-1;;;10903:63:24;10053:913;:996;;;-1:-1:-1;;;;;;;10982:67:24;;-1:-1:-1;;;10982:67:24;10053:996;:1061;;;-1:-1:-1;;;;;;;11065:49:24;;-1:-1:-1;;;11065:49:24;10053:1061;:1131;;;-1:-1:-1;;;;;;;11130:54:24;;-1:-1:-1;;;11130:54:24;10053:1131;:1186;;;-1:-1:-1;;;;;;;11200:39:24;;-1:-1:-1;;;11200:39:24;10053:1186;:1248;;;-1:-1:-1;;;;;;;11255:46:24;;-1:-1:-1;;;11255:46:24;10053:1248;10036:2811;;;-1:-1:-1;11333:10:24;11326:17;;10036:2811;-1:-1:-1;;;;;;11377:53:24;;-1:-1:-1;;;11377:53:24;;:127;;-1:-1:-1;;;;;;;11446:58:24;;-1:-1:-1;;;11446:58:24;11377:127;:194;;;-1:-1:-1;;;;;;;11520:51:24;;-1:-1:-1;;;11520:51:24;11377:194;:259;;;-1:-1:-1;;;;;;;11587:49:24;;-1:-1:-1;;;11587:49:24;11377:259;:329;;;-1:-1:-1;;;;;;;11652:54:24;;-1:-1:-1;;;11652:54:24;11377:329;11360:1487;;;-1:-1:-1;11738:8:24;11731:15;;11360:1487;-1:-1:-1;;;;;;11780:59:24;;-1:-1:-1;;;11780:59:24;;:141;;-1:-1:-1;;;;;;;11855:66:24;;-1:-1:-1;;;11855:66:24;11780:141;:223;;;-1:-1:-1;;;;;;;11937:66:24;;-1:-1:-1;;;11937:66:24;11780:223;:304;;;-1:-1:-1;;;;;;;12019:65:24;;-1:-1:-1;;;12019:65:24;11780:304;:377;;;-1:-1:-1;;;;;;;12100:57:24;;-1:-1:-1;;;12100:57:24;11780:377;:444;;;-1:-1:-1;;;;;;;12173:51:24;;-1:-1:-1;;;12173:51:24;11780:444;:520;;;-1:-1:-1;;;;;;;12240:60:24;;-1:-1:-1;;;12240:60:24;11780:520;:600;;;-1:-1:-1;;;;;;;12316:64:24;;-1:-1:-1;;;12316:64:24;11780:600;:676;;;-1:-1:-1;;;;;;;12396:60:24;;-1:-1:-1;;;12396:60:24;11780:676;:756;;;-1:-1:-1;;;;;;;12472:64:24;;-1:-1:-1;;;12472:64:24;11780:756;:837;;;-1:-1:-1;;;;;;;12552:65:24;;-1:-1:-1;;;12552:65:24;11780:837;11763:1084;;;-1:-1:-1;12649:17:24;12642:24;;11763:1084;-1:-1:-1;12831:5:24;11763:1084;4969:7884;;;:::o;13033:970::-;13418:14;13415:1;13412;13399:34;13632:1;13629;13613:14;13610:1;13594:14;13587:5;13574:60;13708:16;13705:1;13702;13687:38;13746:6;13821:74;;;;13952:16;13949:1;13942:27;13821:74;13860:16;13857:1;13850:27;1431:30;;;:::o;1390:35::-;;;:::o;1515:39::-;;;:::o;1735:40::-;;;:::o;1035:28:66:-;;;-1:-1:-1;;;;;1035:28:66;;:::o;1686:43:24:-;;;:::o;1648:32::-;;;:::o;1816:33::-;;;:::o;1603:39::-;;;:::o;1560:37::-;;;:::o;1855:42::-;;;:::o;920:26:66:-;;;-1:-1:-1;;;;;920:26:66;;:::o;811:20::-;;;;;;-1:-1:-1;;;;;811:20:66;;:::o;1781:29:24:-;;;:::o;1903:45::-;;;:::o;3377:1426::-;3539:10;-1:-1:-1;;;;;3553:8:24;3539:22;;:41;;;;-1:-1:-1;3566:14:24;;;;;;;3565:15;3539:41;3531:50;;;;;;3715:5;:18;;-1:-1:-1;;;;;;3715:18:24;3723:10;3715:18;;;;;4091:75;;;;;;;;-1:-1:-1;;;;;4104:4:24;4091:75;;;;;;;;;;3943:10;3935:32;;-1:-1:-1;;;4029:40:24;4091:75;;;4117:14;4091:75;;223:1:63;4091:75:24;;;;;;;;-1:-1:-1;4091:75:24;;;;;;;4238:81;;;;;;;;;;;;;;;;;4270:15;4238:81;;674:2:63;4238:81:24;;;;-1:-1:-1;4238:81:24;;;;;;;3985:564;;;;;;-1:-1:-1;;;4400:3:24;;4460:2;;4500:3;;3985:564;;;:::i;:::-;;;;-1:-1:-1;;3985:564:24;;;;;;;;;;;;;;-1:-1:-1;;;;;3985:564:24;-1:-1:-1;;;;;;3985:564:24;;;;;;;;;;3935:628;;;;3985:564;3935:628;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3905:658;;;4581:6;4573:15;;;;;;-1:-1:-1;4599:5:24;:14;;-1:-1:-1;;;;;4599:14:24;;;;;-1:-1:-1;;;;;;4599:14:24;;;;;;-1:-1:-1;4697:26:24;;;;;-1:-1:-1;;;;;;4697:26:24;;;;;;4733:13;:30;;;;;;;;;;;3377:1426::o;1954:37::-;;;:::o;1467:42::-;;;:::o;14:175:184:-;84:20;;-1:-1:-1;;;;;133:31:184;;123:42;;113:2;;179:1;176;169:12;194:350;;;;340:2;328:9;319:7;315:23;311:32;308:2;;;361:6;353;346:22;308:2;389:31;410:9;389:31;:::i;:::-;379:41;;439:40;475:2;464:9;460:18;439:40;:::i;:::-;429:50;;498:40;534:2;523:9;519:18;498:40;:::i;:::-;488:50;;298:246;;;;;:::o;549:306::-;;660:2;648:9;639:7;635:23;631:32;628:2;;;681:6;673;666:22;628:2;712:23;;-1:-1:-1;;;;;;764:32:184;;754:43;;744:2;;816:6;808;801:22;744:2;844:5;618:237;-1:-1:-1;;;618:237:184:o;860:498::-;945:12;;-1:-1:-1;;;;;941:38:184;929:51;;1043:4;1032:16;;;1026:23;1019:31;1012:39;996:14;;;989:63;1098:4;1087:16;;1081:23;1140:1;1123:19;;1113:2;;1146:9;1113:2;1182:4;1173:14;;1166:36;1255:4;1244:16;;;1238:23;1263:4;1234:34;1218:14;;;1211:58;1322:4;1311:16;;;1305:23;1330:20;1301:50;1285:14;;1278:74;919:439::o;1363:430::-;;1530:6;1524:13;1555:3;1567:129;1581:6;1578:1;1575:13;1567:129;;;1679:4;1663:14;;;1659:25;;1653:32;1640:11;;;1633:53;1596:12;1567:129;;;1714:6;1711:1;1708:13;1705:2;;;1749:3;1740:6;1735:3;1731:16;1724:29;1705:2;-1:-1:-1;1771:16:184;;;;;1500:293;-1:-1:-1;;1500:293:184:o;1798:203::-;-1:-1:-1;;;;;1962:32:184;;;;1944:51;;1932:2;1917:18;;1899:102::o;2006:896::-;2465:3;2450:19;;2478:52;2454:9;2512:6;2478:52;:::i;:::-;2539:62;2596:3;2585:9;2581:19;2573:6;2539:62;:::i;:::-;-1:-1:-1;;;;;2638:32:184;;;;2632:3;2617:19;;2610:61;2715:14;;2708:22;2702:3;2687:19;;2680:51;2780:4;2768:17;;;2762:3;2747:19;;2740:46;2823:17;;;2817:3;2802:19;;2795:46;2878:17;2872:3;2857:19;;;2850:46;2432:470;;-1:-1:-1;;2432:470:184:o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "getRouterImplementation(bytes4)": {
        "notice": "Returns the implementation contract for the method signature",
        "params": {
          "sig": "method signature to call"
        },
        "returns": {
          "_0": "implementation address"
        }
      }
    },
    "notice": "Sits behind an upgradeable proxy and routes methods to an appropriate implementation contract. All storage will sit inside the upgradeable proxy and this router will authorize the call and re-route the calls to implementing contracts. This pattern adds an additional hop between the proxy and the ultimate implementation contract, however, it also allows for atomic upgrades of the entire system. Individual implementation contracts will be deployed and then a new Router with the new hardcoded addresses will then be deployed and upgraded into place.",
    "version": 1
  },
  "offset": [
    1271,
    14187
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x114 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6D7CDBBF GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xA1B4D011 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xA1B4D011 EQ PUSH2 0x27A JUMPI DUP1 PUSH4 0xBA6B7FC2 EQ PUSH2 0x28F JUMPI DUP1 PUSH4 0xC0C53B8B EQ PUSH2 0x2A4 JUMPI DUP1 PUSH4 0xD8E310A4 EQ PUSH2 0x2C4 JUMPI DUP1 PUSH4 0xDCC1A738 EQ PUSH2 0x2D9 JUMPI PUSH2 0x114 JUMP JUMPDEST DUP1 PUSH4 0x6D7CDBBF EQ PUSH2 0x206 JUMPI DUP1 PUSH4 0x72D27134 EQ PUSH2 0x21B JUMPI DUP1 PUSH4 0x76E1DF48 EQ PUSH2 0x230 JUMPI DUP1 PUSH4 0x82463367 EQ PUSH2 0x250 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x265 JUMPI PUSH2 0x114 JUMP JUMPDEST DUP1 PUSH4 0x24A3D622 GT PUSH2 0xE7 JUMPI DUP1 PUSH4 0x24A3D622 EQ PUSH2 0x19D JUMPI DUP1 PUSH4 0x2BE75895 EQ PUSH2 0x1B2 JUMPI DUP1 PUSH4 0x2D255471 EQ PUSH2 0x1C7 JUMPI DUP1 PUSH4 0x2D2C5565 EQ PUSH2 0x1DC JUMPI DUP1 PUSH4 0x6009B8E6 EQ PUSH2 0x1F1 JUMPI PUSH2 0x114 JUMP JUMPDEST DUP1 PUSH4 0xC4E7935 EQ PUSH2 0x133 JUMPI DUP1 PUSH4 0x14627834 EQ PUSH2 0x15E JUMPI DUP1 PUSH4 0x15BEEB93 EQ PUSH2 0x173 JUMPI DUP1 PUSH4 0x206109B5 EQ PUSH2 0x188 JUMPI JUMPDEST PUSH2 0x131 PUSH2 0x12C PUSH1 0x0 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH2 0x2EE JUMP JUMPDEST PUSH2 0xF42 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x13F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x148 PUSH2 0xF66 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x155 SWAP2 SWAP1 PUSH2 0x14B0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x16A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x148 PUSH2 0xF8A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x17F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x148 PUSH2 0xFAE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x194 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x148 PUSH2 0xFD2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x148 PUSH2 0xFF6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x148 PUSH2 0x1005 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x148 PUSH2 0x1029 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x148 PUSH2 0x104D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x148 PUSH2 0x1071 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x212 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x148 PUSH2 0x1095 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x227 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x148 PUSH2 0x10B9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x23C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x148 PUSH2 0x24B CALLDATASIZE PUSH1 0x4 PUSH2 0x13F8 JUMP JUMPDEST PUSH2 0x2EE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x25C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x148 PUSH2 0x10DD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x271 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x148 PUSH2 0x10EC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x286 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x148 PUSH2 0x1103 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x29B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x148 PUSH2 0x1127 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x131 PUSH2 0x2BF CALLDATASIZE PUSH1 0x4 PUSH2 0x13B6 JUMP JUMPDEST PUSH2 0x114B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x148 PUSH2 0x1357 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x148 PUSH2 0x137B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x37351953 PUSH1 0xE1 SHL EQ DUP1 PUSH2 0x31F JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x276B64B PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x33A JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5950D8E9 PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x355 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x541F527 PUSH1 0xE4 SHL EQ JUMPDEST ISZERO PUSH2 0x381 JUMPI POP PUSH32 0x0 PUSH2 0xF3D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x8F0BA30F PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x3B0 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x734B7231 PUSH1 0xE1 SHL EQ JUMPDEST DUP1 PUSH2 0x3CB JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x6DAD6AFB PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x3E6 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0xF292C415 PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x401 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0xC025D1A5 PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x41C JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x604FFAB PUSH1 0xE1 SHL EQ JUMPDEST DUP1 PUSH2 0x437 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x323E60CB PUSH1 0xE1 SHL EQ JUMPDEST ISZERO PUSH2 0x463 JUMPI POP PUSH32 0x0 PUSH2 0xF3D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x2890FB65 PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x492 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0xB8A69455 PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x4AC JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH3 0x5E665D PUSH1 0xE3 SHL EQ JUMPDEST DUP1 PUSH2 0x4C7 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0xF667F897 PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x4E2 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x66890643 PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x4FD JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x9C97945 PUSH1 0xE4 SHL EQ JUMPDEST ISZERO PUSH2 0x529 JUMPI POP PUSH32 0x0 PUSH2 0xF3D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x557 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH3 0x7EEAC7 PUSH1 0xE1 SHL EQ JUMPDEST DUP1 PUSH2 0x572 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x13849CFD PUSH1 0xE2 SHL EQ JUMPDEST DUP1 PUSH2 0x58D JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0xFAC8F09 PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x5A8 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x81A86855 PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x5C3 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x79212195 PUSH1 0xE1 SHL EQ JUMPDEST DUP1 PUSH2 0x5DE JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x1759616B PUSH1 0xE1 SHL EQ JUMPDEST DUP1 PUSH2 0x5F9 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x7F4D701 PUSH1 0xE3 SHL EQ JUMPDEST DUP1 PUSH2 0x614 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0xE6B43B9 PUSH1 0xE3 SHL EQ JUMPDEST DUP1 PUSH2 0x62F JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0xA22CB465 PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x64A JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0xE985E9C5 PUSH1 0xE0 SHL EQ JUMPDEST ISZERO PUSH2 0x676 JUMPI POP PUSH32 0x0 PUSH2 0xF3D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x6A96E86F PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x6A5 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x7DB31AB9 PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x6C0 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0xA78DBFFF PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x6DB JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x184E0053 PUSH1 0xE1 SHL EQ JUMPDEST DUP1 PUSH2 0x6F6 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x18AE40D7 PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x711 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x44253849 PUSH1 0xE1 SHL EQ JUMPDEST DUP1 PUSH2 0x72C JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5C1D975 PUSH1 0xE3 SHL EQ JUMPDEST DUP1 PUSH2 0x747 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x6D6503D3 PUSH1 0xE1 SHL EQ JUMPDEST DUP1 PUSH2 0x762 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x1A05BCE1 PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x77D JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x3B2987B3 PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x798 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x4CB6B359 PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x7B3 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x31E14C19 PUSH1 0xE1 SHL EQ JUMPDEST DUP1 PUSH2 0x7CE JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x450083DF PUSH1 0xE1 SHL EQ JUMPDEST ISZERO PUSH2 0x7FA JUMPI POP PUSH32 0x0 PUSH2 0xF3D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x2D10E6EB PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x829 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x6633AF39 PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x844 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0xE3E7CB4F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x85F JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x9A600EEB PUSH1 0xE0 SHL EQ JUMPDEST ISZERO PUSH2 0x88B JUMPI POP PUSH32 0x0 PUSH2 0xF3D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x1FF7AEFD PUSH1 0xE2 SHL EQ DUP1 PUSH2 0x8BA JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0xE816469D PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x8D5 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0xFB281D9 PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x8F0 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0xFA37E395 PUSH1 0xE0 SHL EQ JUMPDEST ISZERO PUSH2 0x91C JUMPI POP PUSH32 0x0 PUSH2 0xF3D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x51479E39 PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x94B JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x15BD0A31 PUSH1 0xE2 SHL EQ JUMPDEST DUP1 PUSH2 0x966 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x6B6EF5CD PUSH1 0xE1 SHL EQ JUMPDEST DUP1 PUSH2 0x981 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x291AFDF3 PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x99C JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x341305AB PUSH1 0xE2 SHL EQ JUMPDEST DUP1 PUSH2 0x9B7 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0xEE01436B PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x9D2 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x83E50FB7 PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x9ED JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x6674BC3B PUSH1 0xE1 SHL EQ JUMPDEST DUP1 PUSH2 0xA08 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x295E6B7F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0xA23 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0xDE1EB9A3 PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0xA3E JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x33A8ABBB PUSH1 0xE1 SHL EQ JUMPDEST DUP1 PUSH2 0xA59 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x28536D5F PUSH1 0xE2 SHL EQ JUMPDEST DUP1 PUSH2 0xA74 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x31572281 PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0xA8F JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x6C346C09 PUSH1 0xE0 SHL EQ JUMPDEST ISZERO PUSH2 0xABB JUMPI POP PUSH32 0x0 PUSH2 0xF3D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x3438193 PUSH1 0xE6 SHL EQ DUP1 PUSH2 0xAEA JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5DB6EAC7 PUSH1 0xE1 SHL EQ JUMPDEST ISZERO PUSH2 0xB16 JUMPI POP PUSH32 0x0 PUSH2 0xF3D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x7ABAF271 PUSH1 0xE1 SHL EQ DUP1 PUSH2 0xB45 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0xE31051A1 PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0xB60 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0xA11A4293 PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0xB7B JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5284765 PUSH1 0xE5 SHL EQ JUMPDEST DUP1 PUSH2 0xB96 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x315CB2B9 PUSH1 0xE2 SHL EQ JUMPDEST DUP1 PUSH2 0xBB1 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x2C90B94D PUSH1 0xE2 SHL EQ JUMPDEST DUP1 PUSH2 0xBCC JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x9CE3C19 PUSH1 0xE3 SHL EQ JUMPDEST DUP1 PUSH2 0xBE7 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x54EBDE29 PUSH1 0xE1 SHL EQ JUMPDEST DUP1 PUSH2 0xC02 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x98DCBC23 PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0xC1D JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x33EABD1D PUSH1 0xE2 SHL EQ JUMPDEST DUP1 PUSH2 0xC38 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x413F2C5F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0xC53 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0xD0DA867 PUSH1 0xE2 SHL EQ JUMPDEST DUP1 PUSH2 0xC6E JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x353ABC5D PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0xC89 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0xFA17B5F1 PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0xCA4 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x113AA8B1 PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0xCBE JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH3 0x474663 PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0xCD9 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x1B2CE7F3 PUSH1 0xE1 SHL EQ JUMPDEST DUP1 PUSH2 0xCF4 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x278F7943 PUSH1 0xE1 SHL EQ JUMPDEST ISZERO PUSH2 0xD20 JUMPI POP PUSH32 0x0 PUSH2 0xF3D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x7D6DBFF7 PUSH1 0xE1 SHL EQ DUP1 PUSH2 0xD4F JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x6D7A00EB PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0xD6A JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x7F23D4F9 PUSH1 0xE1 SHL EQ JUMPDEST DUP1 PUSH2 0xD85 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x239CEC8F PUSH1 0xE2 SHL EQ JUMPDEST DUP1 PUSH2 0xDA0 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x12ADC47B PUSH1 0xE0 SHL EQ JUMPDEST ISZERO PUSH2 0xDCC JUMPI POP PUSH32 0x0 PUSH2 0xF3D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x6A09A2A3 PUSH1 0xE0 SHL EQ DUP1 PUSH2 0xDFB JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x8355E895 PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0xE16 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x94614DF PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0xE31 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x4BEB6D97 PUSH1 0xE1 SHL EQ JUMPDEST DUP1 PUSH2 0xE4C JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0xC52C43E1 PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0xE67 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5953C77B PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0xE82 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x1F0750C1 PUSH1 0xE3 SHL EQ JUMPDEST DUP1 PUSH2 0xE9D JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0xBAC9E8B1 PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0xEB8 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0xAAAE47B5 PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0xED3 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x416A1587 PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0xEEE JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x1BAEFC5D PUSH1 0xE2 SHL EQ JUMPDEST ISZERO PUSH2 0xF1A JUMPI POP PUSH32 0x0 PUSH2 0xF3D JUMP JUMPDEST POP PUSH32 0x0 JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST CALLDATASIZE PUSH1 0x0 DUP1 CALLDATACOPY PUSH1 0x0 DUP1 CALLDATASIZE PUSH1 0x0 DUP5 GAS DELEGATECALL RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY DUP1 DUP1 ISZERO PUSH2 0xF61 JUMPI RETURNDATASIZE PUSH1 0x0 RETURN JUMPDEST RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH5 0x100000000 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ DUP1 ISZERO PUSH2 0x118D JUMPI POP PUSH1 0x0 SLOAD PUSH4 0x1000000 SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x1196 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH5 0x100000000 PUSH1 0x1 PUSH1 0xC0 SHL SUB NOT AND CALLER PUSH5 0x100000000 MUL OR DUP2 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP5 SWAP1 MSTORE PUSH32 0x0 AND SWAP2 PUSH4 0x7ABAF271 PUSH1 0xE1 SHL SWAP2 SWAP1 DUP2 ADD PUSH1 0x2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x0 PUSH1 0x40 SWAP3 DUP4 ADD DUP2 SWAP1 MSTORE DUP3 MLOAD PUSH1 0xA0 DUP2 ADD DUP5 MSTORE DUP2 DUP2 MSTORE SWAP2 DUP3 ADD MSTORE SWAP1 DUP2 ADD PUSH1 0x3 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x40 SWAP2 DUP3 ADD DUP2 SWAP1 MSTORE SWAP1 MLOAD PUSH2 0x127C SWAP4 SWAP3 SWAP2 SWAP1 DUP2 SWAP1 PUSH1 0x85 SWAP1 PUSH1 0x4B SWAP1 PUSH1 0x6C SWAP1 PUSH1 0x24 ADD PUSH2 0x14C4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 MSTORE SWAP1 MLOAD PUSH2 0x12BA SWAP2 SWAP1 PUSH2 0x1477 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x12F5 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x12FA JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x1308 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND PUSH5 0x100000000 MUL PUSH5 0x100000000 PUSH1 0x1 PUSH1 0xC0 SHL SUB NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE PUSH1 0x1 DUP1 SLOAD SWAP3 DUP5 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP4 DUP5 AND OR SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD SWAP2 SWAP1 SWAP4 AND SWAP2 AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xF3D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x13CA JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH2 0x13D3 DUP5 PUSH2 0x139F JUMP JUMPDEST SWAP3 POP PUSH2 0x13E1 PUSH1 0x20 DUP6 ADD PUSH2 0x139F JUMP JUMPDEST SWAP2 POP PUSH2 0x13EF PUSH1 0x40 DUP6 ADD PUSH2 0x139F JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1409 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x1420 JUMPI DUP2 DUP3 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP3 ADD MLOAD ISZERO ISZERO SWAP1 DUP4 ADD MSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x6 DUP2 LT PUSH2 0x144F JUMPI INVALID JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP2 DUP2 ADD MLOAD PUSH1 0xFF AND SWAP1 DUP4 ADD MSTORE PUSH1 0x80 SWAP1 DUP2 ADD MLOAD PUSH9 0xFFFFFFFFFFFFFFFFFF AND SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD DUP2 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1497 JUMPI PUSH1 0x20 DUP2 DUP7 ADD DUP2 ADD MLOAD DUP6 DUP4 ADD MSTORE ADD PUSH2 0x147D JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x14A5 JUMPI DUP3 DUP3 DUP6 ADD MSTORE JUMPDEST POP SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH2 0x1E0 DUP2 ADD PUSH2 0x14D3 DUP3 DUP11 PUSH2 0x1427 JUMP JUMPDEST PUSH2 0x14E0 PUSH1 0xA0 DUP4 ADD DUP10 PUSH2 0x1427 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP7 SWAP1 SWAP7 AND PUSH2 0x140 DUP3 ADD MSTORE SWAP4 ISZERO ISZERO PUSH2 0x160 DUP6 ADD MSTORE PUSH1 0xFF SWAP3 DUP4 AND PUSH2 0x180 DUP6 ADD MSTORE SWAP1 DUP3 AND PUSH2 0x1A0 DUP5 ADD MSTORE AND PUSH2 0x1C0 SWAP1 SWAP2 ADD MSTORE SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP8 SWAP5 0x4F DUP14 0xC8 0xD3 CALLDATALOAD 0xF6 PUSH32 0xA50FAD1DF2BD432EF786DDCA51DE74FE4ABBDB989873D64736F6C6343000706 STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        1271,
        14187
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        1271,
        14187
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        1271,
        14187
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "5": {
      "fn": null,
      "offset": [
        1271,
        14187
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        1271,
        14187
      ],
      "op": "CALLDATASIZE",
      "path": "24"
    },
    "8": {
      "fn": null,
      "offset": [
        1271,
        14187
      ],
      "op": "LT",
      "path": "24"
    },
    "9": {
      "fn": null,
      "offset": [
        1271,
        14187
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x114"
    },
    "12": {
      "fn": null,
      "offset": [
        1271,
        14187
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "13": {
      "fn": null,
      "offset": [
        1271,
        14187
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        1271,
        14187
      ],
      "op": "CALLDATALOAD",
      "path": "24"
    },
    "16": {
      "fn": null,
      "offset": [
        1271,
        14187
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        1271,
        14187
      ],
      "op": "SHR",
      "path": "24"
    },
    "19": {
      "fn": null,
      "offset": [
        1271,
        14187
      ],
      "op": "DUP1",
      "path": "24"
    },
    "20": {
      "fn": null,
      "offset": [
        1271,
        14187
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x6D7CDBBF"
    },
    "25": {
      "fn": null,
      "offset": [
        1271,
        14187
      ],
      "op": "GT",
      "path": "24"
    },
    "26": {
      "fn": null,
      "offset": [
        1271,
        14187
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xA0"
    },
    "29": {
      "fn": null,
      "offset": [
        1271,
        14187
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "30": {
      "fn": null,
      "offset": [
        1271,
        14187
      ],
      "op": "DUP1",
      "path": "24"
    },
    "31": {
      "fn": null,
      "offset": [
        1271,
        14187
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0xA1B4D011"
    },
    "36": {
      "fn": null,
      "offset": [
        1271,
        14187
      ],
      "op": "GT",
      "path": "24"
    },
    "37": {
      "fn": null,
      "offset": [
        1271,
        14187
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x64"
    },
    "40": {
      "fn": null,
      "offset": [
        1271,
        14187
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "41": {
      "fn": null,
      "offset": [
        1271,
        14187
      ],
      "op": "DUP1",
      "path": "24"
    },
    "42": {
      "fn": null,
      "offset": [
        1271,
        14187
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0xA1B4D011"
    },
    "47": {
      "fn": null,
      "offset": [
        1271,
        14187
      ],
      "op": "EQ",
      "path": "24"
    },
    "48": {
      "fn": null,
      "offset": [
        1271,
        14187
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x27A"
    },
    "51": {
      "fn": null,
      "offset": [
        1271,
        14187
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "52": {
      "fn": null,
      "offset": [
        1271,
        14187
      ],
      "op": "DUP1",
      "path": "24"
    },
    "53": {
      "fn": null,
      "offset": [
        1271,
        14187
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0xBA6B7FC2"
    },
    "58": {
      "fn": null,
      "offset": [
        1271,
        14187
      ],
      "op": "EQ",
      "path": "24"
    },
    "59": {
      "fn": null,
      "offset": [
        1271,
        14187
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x28F"
    },
    "62": {
      "fn": null,
      "offset": [
        1271,
        14187
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "63": {
      "fn": null,
      "offset": [
        1271,
        14187
      ],
      "op": "DUP1",
      "path": "24"
    },
    "64": {
      "fn": null,
      "offset": [
        1271,
        14187
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0xC0C53B8B"
    },
    "69": {
      "fn": null,
      "offset": [
        1271,
        14187
      ],
      "op": "EQ",
      "path": "24"
    },
    "70": {
      "fn": null,
      "offset": [
        1271,
        14187
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2A4"
    },
    "73": {
      "fn": null,
      "offset": [
        1271,
        14187
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "74": {
      "fn": null,
      "offset": [
        1271,
        14187
      ],
      "op": "DUP1",
      "path": "24"
    },
    "75": {
      "fn": null,
      "offset": [
        1271,
        14187
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0xD8E310A4"
    },
    "80": {
      "fn": null,
      "offset": [
        1271,
        14187
      ],
      "op": "EQ",
      "path": "24"
    },
    "81": {
      "fn": null,
      "offset": [
        1271,
        14187
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2C4"
    },
    "84": {
      "fn": null,
      "offset": [
        1271,
        14187
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "85": {
      "fn": null,
      "offset": [
        1271,
        14187
      ],
      "op": "DUP1",
      "path": "24"
    },
    "86": {
      "fn": null,
      "offset": [
        1271,
        14187
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0xDCC1A738"
    },
    "91": {
      "fn": null,
      "offset": [
        1271,
        14187
      ],
      "op": "EQ",
      "path": "24"
    },
    "92": {
      "fn": null,
      "offset": [
        1271,
        14187
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2D9"
    },
    "95": {
      "fn": null,
      "offset": [
        1271,
        14187
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "96": {
      "fn": null,
      "offset": [
        1271,
        14187
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x114"
    },
    "99": {
      "fn": null,
      "offset": [
        1271,
        14187
      ],
      "op": "JUMP",
      "path": "24"
    },
    "100": {
      "fn": null,
      "offset": [
        1271,
        14187
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "101": {
      "fn": null,
      "offset": [
        1271,
        14187
      ],
      "op": "DUP1",
      "path": "24"
    },
    "102": {
      "fn": null,
      "offset": [
        1271,
        14187
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x6D7CDBBF"
    },
    "107": {
      "fn": null,
      "offset": [
        1271,
        14187
      ],
      "op": "EQ",
      "path": "24"
    },
    "108": {
      "fn": null,
      "offset": [
        1271,
        14187
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x206"
    },
    "111": {
      "fn": null,
      "offset": [
        1271,
        14187
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "112": {
      "fn": null,
      "offset": [
        1271,
        14187
      ],
      "op": "DUP1",
      "path": "24"
    },
    "113": {
      "fn": null,
      "offset": [
        1271,
        14187
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x72D27134"
    },
    "118": {
      "fn": null,
      "offset": [
        1271,
        14187
      ],
      "op": "EQ",
      "path": "24"
    },
    "119": {
      "fn": null,
      "offset": [
        1271,
        14187
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x21B"
    },
    "122": {
      "fn": null,
      "offset": [
        1271,
        14187
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "123": {
      "fn": null,
      "offset": [
        1271,
        14187
      ],
      "op": "DUP1",
      "path": "24"
    },
    "124": {
      "fn": null,
      "offset": [
        1271,
        14187
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x76E1DF48"
    },
    "129": {
      "fn": null,
      "offset": [
        1271,
        14187
      ],
      "op": "EQ",
      "path": "24"
    },
    "130": {
      "fn": null,
      "offset": [
        1271,
        14187
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x230"
    },
    "133": {
      "fn": null,
      "offset": [
        1271,
        14187
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "134": {
      "fn": null,
      "offset": [
        1271,
        14187
      ],
      "op": "DUP1",
      "path": "24"
    },
    "135": {
      "fn": null,
      "offset": [
        1271,
        14187
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x82463367"
    },
    "140": {
      "fn": null,
      "offset": [
        1271,
        14187
      ],
      "op": "EQ",
      "path": "24"
    },
    "141": {
      "fn": null,
      "offset": [
        1271,
        14187
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x250"
    },
    "144": {
      "fn": null,
      "offset": [
        1271,
        14187
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "145": {
      "fn": null,
      "offset": [
        1271,
        14187
      ],
      "op": "DUP1",
      "path": "24"
    },
    "146": {
      "fn": null,
      "offset": [
        1271,
        14187
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x8DA5CB5B"
    },
    "151": {
      "fn": null,
      "offset": [
        1271,
        14187
      ],
      "op": "EQ",
      "path": "24"
    },
    "152": {
      "fn": null,
      "offset": [
        1271,
        14187
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x265"
    },
    "155": {
      "fn": null,
      "offset": [
        1271,
        14187
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "156": {
      "fn": null,
      "offset": [
        1271,
        14187
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x114"
    },
    "159": {
      "fn": null,
      "offset": [
        1271,
        14187
      ],
      "op": "JUMP",
      "path": "24"
    },
    "160": {
      "fn": null,
      "offset": [
        1271,
        14187
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "161": {
      "fn": null,
      "offset": [
        1271,
        14187
      ],
      "op": "DUP1",
      "path": "24"
    },
    "162": {
      "fn": null,
      "offset": [
        1271,
        14187
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x24A3D622"
    },
    "167": {
      "fn": null,
      "offset": [
        1271,
        14187
      ],
      "op": "GT",
      "path": "24"
    },
    "168": {
      "fn": null,
      "offset": [
        1271,
        14187
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xE7"
    },
    "171": {
      "fn": null,
      "offset": [
        1271,
        14187
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "172": {
      "fn": null,
      "offset": [
        1271,
        14187
      ],
      "op": "DUP1",
      "path": "24"
    },
    "173": {
      "fn": null,
      "offset": [
        1271,
        14187
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x24A3D622"
    },
    "178": {
      "fn": null,
      "offset": [
        1271,
        14187
      ],
      "op": "EQ",
      "path": "24"
    },
    "179": {
      "fn": null,
      "offset": [
        1271,
        14187
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x19D"
    },
    "182": {
      "fn": null,
      "offset": [
        1271,
        14187
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "183": {
      "fn": null,
      "offset": [
        1271,
        14187
      ],
      "op": "DUP1",
      "path": "24"
    },
    "184": {
      "fn": null,
      "offset": [
        1271,
        14187
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x2BE75895"
    },
    "189": {
      "fn": null,
      "offset": [
        1271,
        14187
      ],
      "op": "EQ",
      "path": "24"
    },
    "190": {
      "fn": null,
      "offset": [
        1271,
        14187
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1B2"
    },
    "193": {
      "fn": null,
      "offset": [
        1271,
        14187
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "194": {
      "fn": null,
      "offset": [
        1271,
        14187
      ],
      "op": "DUP1",
      "path": "24"
    },
    "195": {
      "fn": null,
      "offset": [
        1271,
        14187
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x2D255471"
    },
    "200": {
      "fn": null,
      "offset": [
        1271,
        14187
      ],
      "op": "EQ",
      "path": "24"
    },
    "201": {
      "fn": null,
      "offset": [
        1271,
        14187
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1C7"
    },
    "204": {
      "fn": null,
      "offset": [
        1271,
        14187
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "205": {
      "fn": null,
      "offset": [
        1271,
        14187
      ],
      "op": "DUP1",
      "path": "24"
    },
    "206": {
      "fn": null,
      "offset": [
        1271,
        14187
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x2D2C5565"
    },
    "211": {
      "fn": null,
      "offset": [
        1271,
        14187
      ],
      "op": "EQ",
      "path": "24"
    },
    "212": {
      "fn": null,
      "offset": [
        1271,
        14187
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1DC"
    },
    "215": {
      "fn": null,
      "offset": [
        1271,
        14187
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "216": {
      "fn": null,
      "offset": [
        1271,
        14187
      ],
      "op": "DUP1",
      "path": "24"
    },
    "217": {
      "fn": null,
      "offset": [
        1271,
        14187
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x6009B8E6"
    },
    "222": {
      "fn": null,
      "offset": [
        1271,
        14187
      ],
      "op": "EQ",
      "path": "24"
    },
    "223": {
      "fn": null,
      "offset": [
        1271,
        14187
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1F1"
    },
    "226": {
      "fn": null,
      "offset": [
        1271,
        14187
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "227": {
      "fn": null,
      "offset": [
        1271,
        14187
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x114"
    },
    "230": {
      "fn": null,
      "offset": [
        1271,
        14187
      ],
      "op": "JUMP",
      "path": "24"
    },
    "231": {
      "fn": null,
      "offset": [
        1271,
        14187
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "232": {
      "fn": null,
      "offset": [
        1271,
        14187
      ],
      "op": "DUP1",
      "path": "24"
    },
    "233": {
      "fn": null,
      "offset": [
        1271,
        14187
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0xC4E7935"
    },
    "238": {
      "fn": null,
      "offset": [
        1271,
        14187
      ],
      "op": "EQ",
      "path": "24"
    },
    "239": {
      "fn": null,
      "offset": [
        1271,
        14187
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x133"
    },
    "242": {
      "fn": null,
      "offset": [
        1271,
        14187
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "243": {
      "fn": null,
      "offset": [
        1271,
        14187
      ],
      "op": "DUP1",
      "path": "24"
    },
    "244": {
      "fn": null,
      "offset": [
        1271,
        14187
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x14627834"
    },
    "249": {
      "fn": null,
      "offset": [
        1271,
        14187
      ],
      "op": "EQ",
      "path": "24"
    },
    "250": {
      "fn": null,
      "offset": [
        1271,
        14187
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x15E"
    },
    "253": {
      "fn": null,
      "offset": [
        1271,
        14187
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "254": {
      "fn": null,
      "offset": [
        1271,
        14187
      ],
      "op": "DUP1",
      "path": "24"
    },
    "255": {
      "fn": null,
      "offset": [
        1271,
        14187
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x15BEEB93"
    },
    "260": {
      "fn": null,
      "offset": [
        1271,
        14187
      ],
      "op": "EQ",
      "path": "24"
    },
    "261": {
      "fn": null,
      "offset": [
        1271,
        14187
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x173"
    },
    "264": {
      "fn": null,
      "offset": [
        1271,
        14187
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "265": {
      "fn": null,
      "offset": [
        1271,
        14187
      ],
      "op": "DUP1",
      "path": "24"
    },
    "266": {
      "fn": null,
      "offset": [
        1271,
        14187
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x206109B5"
    },
    "271": {
      "fn": null,
      "offset": [
        1271,
        14187
      ],
      "op": "EQ",
      "path": "24"
    },
    "272": {
      "fn": null,
      "offset": [
        1271,
        14187
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x188"
    },
    "275": {
      "fn": null,
      "offset": [
        1271,
        14187
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "276": {
      "fn": null,
      "offset": [
        1271,
        14187
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "277": {
      "fn": "Router.<fallback>",
      "offset": [
        14047,
        14090
      ],
      "op": "PUSH2",
      "path": "24",
      "statement": 0,
      "value": "0x131"
    },
    "280": {
      "fn": "Router.<fallback>",
      "offset": [
        14057,
        14089
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x12C"
    },
    "283": {
      "fn": "Router.<fallback>",
      "offset": [
        14081,
        14088
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "285": {
      "fn": "Router.<fallback>",
      "offset": [
        14081,
        14088
      ],
      "op": "CALLDATALOAD",
      "path": "24"
    },
    "286": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "288": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "290": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "292": {
      "op": "SHL"
    },
    "293": {
      "op": "SUB"
    },
    "294": {
      "op": "NOT"
    },
    "295": {
      "fn": "Router.<fallback>",
      "offset": [
        14081,
        14088
      ],
      "op": "AND",
      "path": "24"
    },
    "296": {
      "fn": "Router.<fallback>",
      "offset": [
        14057,
        14080
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2EE"
    },
    "299": {
      "fn": "Router.<fallback>",
      "jump": "i",
      "offset": [
        14057,
        14089
      ],
      "op": "JUMP",
      "path": "24"
    },
    "300": {
      "fn": "Router.<fallback>",
      "offset": [
        14057,
        14089
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "301": {
      "fn": "Router.<fallback>",
      "offset": [
        14047,
        14056
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xF42"
    },
    "304": {
      "fn": "Router.<fallback>",
      "jump": "i",
      "offset": [
        14047,
        14090
      ],
      "op": "JUMP",
      "path": "24"
    },
    "305": {
      "fn": "Router.<fallback>",
      "offset": [
        14047,
        14090
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "306": {
      "offset": [
        1271,
        14187
      ],
      "op": "STOP",
      "path": "24"
    },
    "307": {
      "offset": [
        1431,
        1461
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "308": {
      "fn": "Router.<fallback>",
      "offset": [
        1431,
        1461
      ],
      "op": "CALLVALUE",
      "path": "24"
    },
    "309": {
      "fn": "Router.<fallback>",
      "offset": [
        1431,
        1461
      ],
      "op": "DUP1",
      "path": "24"
    },
    "310": {
      "fn": "Router.<fallback>",
      "offset": [
        1431,
        1461
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "311": {
      "fn": "Router.<fallback>",
      "offset": [
        1431,
        1461
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x13F"
    },
    "314": {
      "fn": "Router.<fallback>",
      "offset": [
        1431,
        1461
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "315": {
      "fn": "Router.<fallback>",
      "offset": [
        1431,
        1461
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "317": {
      "fn": "Router.<fallback>",
      "offset": [
        1431,
        1461
      ],
      "op": "DUP1",
      "path": "24"
    },
    "318": {
      "fn": "Router.<fallback>",
      "offset": [
        1431,
        1461
      ],
      "op": "REVERT",
      "path": "24"
    },
    "319": {
      "fn": "Router.<fallback>",
      "offset": [
        1431,
        1461
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "320": {
      "fn": "Router.<fallback>",
      "offset": [
        1431,
        1461
      ],
      "op": "POP",
      "path": "24"
    },
    "321": {
      "fn": "Router.<fallback>",
      "offset": [
        1431,
        1461
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x148"
    },
    "324": {
      "fn": "Router.<fallback>",
      "offset": [
        1431,
        1461
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xF66"
    },
    "327": {
      "fn": "Router.<fallback>",
      "jump": "i",
      "offset": [
        1431,
        1461
      ],
      "op": "JUMP",
      "path": "24"
    },
    "328": {
      "fn": "Router.<fallback>",
      "offset": [
        1431,
        1461
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "329": {
      "fn": "Router.<fallback>",
      "offset": [
        1431,
        1461
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "331": {
      "fn": "Router.<fallback>",
      "offset": [
        1431,
        1461
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "332": {
      "fn": "Router.<fallback>",
      "offset": [
        1431,
        1461
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x155"
    },
    "335": {
      "fn": "Router.<fallback>",
      "offset": [
        1431,
        1461
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "336": {
      "fn": "Router.<fallback>",
      "offset": [
        1431,
        1461
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "337": {
      "fn": "Router.<fallback>",
      "offset": [
        1431,
        1461
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x14B0"
    },
    "340": {
      "fn": "Router.<fallback>",
      "jump": "i",
      "offset": [
        1431,
        1461
      ],
      "op": "JUMP",
      "path": "24"
    },
    "341": {
      "fn": "Router.<fallback>",
      "offset": [
        1431,
        1461
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "342": {
      "fn": "Router.<fallback>",
      "offset": [
        1431,
        1461
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "344": {
      "fn": "Router.<fallback>",
      "offset": [
        1431,
        1461
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "345": {
      "fn": "Router.<fallback>",
      "offset": [
        1431,
        1461
      ],
      "op": "DUP1",
      "path": "24"
    },
    "346": {
      "fn": "Router.<fallback>",
      "offset": [
        1431,
        1461
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "347": {
      "fn": "Router.<fallback>",
      "offset": [
        1431,
        1461
      ],
      "op": "SUB",
      "path": "24"
    },
    "348": {
      "fn": "Router.<fallback>",
      "offset": [
        1431,
        1461
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "349": {
      "fn": "Router.<fallback>",
      "offset": [
        1431,
        1461
      ],
      "op": "RETURN",
      "path": "24"
    },
    "350": {
      "offset": [
        1390,
        1425
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "351": {
      "fn": "Router.<fallback>",
      "offset": [
        1390,
        1425
      ],
      "op": "CALLVALUE",
      "path": "24"
    },
    "352": {
      "fn": "Router.<fallback>",
      "offset": [
        1390,
        1425
      ],
      "op": "DUP1",
      "path": "24"
    },
    "353": {
      "fn": "Router.<fallback>",
      "offset": [
        1390,
        1425
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "354": {
      "fn": "Router.<fallback>",
      "offset": [
        1390,
        1425
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x16A"
    },
    "357": {
      "fn": "Router.<fallback>",
      "offset": [
        1390,
        1425
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "358": {
      "fn": "Router.<fallback>",
      "offset": [
        1390,
        1425
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "360": {
      "fn": "Router.<fallback>",
      "offset": [
        1390,
        1425
      ],
      "op": "DUP1",
      "path": "24"
    },
    "361": {
      "fn": "Router.<fallback>",
      "offset": [
        1390,
        1425
      ],
      "op": "REVERT",
      "path": "24"
    },
    "362": {
      "fn": "Router.<fallback>",
      "offset": [
        1390,
        1425
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "363": {
      "fn": "Router.<fallback>",
      "offset": [
        1390,
        1425
      ],
      "op": "POP",
      "path": "24"
    },
    "364": {
      "fn": "Router.<fallback>",
      "offset": [
        1390,
        1425
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x148"
    },
    "367": {
      "fn": "Router.<fallback>",
      "offset": [
        1390,
        1425
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xF8A"
    },
    "370": {
      "fn": "Router.<fallback>",
      "jump": "i",
      "offset": [
        1390,
        1425
      ],
      "op": "JUMP",
      "path": "24"
    },
    "371": {
      "offset": [
        1515,
        1554
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "372": {
      "fn": "Router.<fallback>",
      "offset": [
        1515,
        1554
      ],
      "op": "CALLVALUE",
      "path": "24"
    },
    "373": {
      "fn": "Router.<fallback>",
      "offset": [
        1515,
        1554
      ],
      "op": "DUP1",
      "path": "24"
    },
    "374": {
      "fn": "Router.<fallback>",
      "offset": [
        1515,
        1554
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "375": {
      "fn": "Router.<fallback>",
      "offset": [
        1515,
        1554
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x17F"
    },
    "378": {
      "fn": "Router.<fallback>",
      "offset": [
        1515,
        1554
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "379": {
      "fn": "Router.<fallback>",
      "offset": [
        1515,
        1554
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "381": {
      "fn": "Router.<fallback>",
      "offset": [
        1515,
        1554
      ],
      "op": "DUP1",
      "path": "24"
    },
    "382": {
      "fn": "Router.<fallback>",
      "offset": [
        1515,
        1554
      ],
      "op": "REVERT",
      "path": "24"
    },
    "383": {
      "fn": "Router.<fallback>",
      "offset": [
        1515,
        1554
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "384": {
      "fn": "Router.<fallback>",
      "offset": [
        1515,
        1554
      ],
      "op": "POP",
      "path": "24"
    },
    "385": {
      "fn": "Router.<fallback>",
      "offset": [
        1515,
        1554
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x148"
    },
    "388": {
      "fn": "Router.<fallback>",
      "offset": [
        1515,
        1554
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xFAE"
    },
    "391": {
      "fn": "Router.<fallback>",
      "jump": "i",
      "offset": [
        1515,
        1554
      ],
      "op": "JUMP",
      "path": "24"
    },
    "392": {
      "offset": [
        1735,
        1775
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "393": {
      "fn": "Router.<fallback>",
      "offset": [
        1735,
        1775
      ],
      "op": "CALLVALUE",
      "path": "24"
    },
    "394": {
      "fn": "Router.<fallback>",
      "offset": [
        1735,
        1775
      ],
      "op": "DUP1",
      "path": "24"
    },
    "395": {
      "fn": "Router.<fallback>",
      "offset": [
        1735,
        1775
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "396": {
      "fn": "Router.<fallback>",
      "offset": [
        1735,
        1775
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x194"
    },
    "399": {
      "fn": "Router.<fallback>",
      "offset": [
        1735,
        1775
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "400": {
      "fn": "Router.<fallback>",
      "offset": [
        1735,
        1775
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "402": {
      "fn": "Router.<fallback>",
      "offset": [
        1735,
        1775
      ],
      "op": "DUP1",
      "path": "24"
    },
    "403": {
      "fn": "Router.<fallback>",
      "offset": [
        1735,
        1775
      ],
      "op": "REVERT",
      "path": "24"
    },
    "404": {
      "fn": "Router.<fallback>",
      "offset": [
        1735,
        1775
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "405": {
      "fn": "Router.<fallback>",
      "offset": [
        1735,
        1775
      ],
      "op": "POP",
      "path": "24"
    },
    "406": {
      "fn": "Router.<fallback>",
      "offset": [
        1735,
        1775
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x148"
    },
    "409": {
      "fn": "Router.<fallback>",
      "offset": [
        1735,
        1775
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xFD2"
    },
    "412": {
      "fn": "Router.<fallback>",
      "jump": "i",
      "offset": [
        1735,
        1775
      ],
      "op": "JUMP",
      "path": "24"
    },
    "413": {
      "offset": [
        1035,
        1063
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "414": {
      "fn": "Router.<fallback>",
      "offset": [
        1035,
        1063
      ],
      "op": "CALLVALUE",
      "path": "66"
    },
    "415": {
      "fn": "Router.<fallback>",
      "offset": [
        1035,
        1063
      ],
      "op": "DUP1",
      "path": "66"
    },
    "416": {
      "fn": "Router.<fallback>",
      "offset": [
        1035,
        1063
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "417": {
      "fn": "Router.<fallback>",
      "offset": [
        1035,
        1063
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x1A9"
    },
    "420": {
      "fn": "Router.<fallback>",
      "offset": [
        1035,
        1063
      ],
      "op": "JUMPI",
      "path": "66"
    },
    "421": {
      "fn": "Router.<fallback>",
      "offset": [
        1035,
        1063
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "423": {
      "fn": "Router.<fallback>",
      "offset": [
        1035,
        1063
      ],
      "op": "DUP1",
      "path": "66"
    },
    "424": {
      "fn": "Router.<fallback>",
      "offset": [
        1035,
        1063
      ],
      "op": "REVERT",
      "path": "66"
    },
    "425": {
      "fn": "Router.<fallback>",
      "offset": [
        1035,
        1063
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "426": {
      "fn": "Router.<fallback>",
      "offset": [
        1035,
        1063
      ],
      "op": "POP",
      "path": "66"
    },
    "427": {
      "fn": "Router.<fallback>",
      "offset": [
        1035,
        1063
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x148"
    },
    "430": {
      "fn": "Router.<fallback>",
      "offset": [
        1035,
        1063
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0xFF6"
    },
    "433": {
      "fn": "Router.<fallback>",
      "jump": "i",
      "offset": [
        1035,
        1063
      ],
      "op": "JUMP",
      "path": "66"
    },
    "434": {
      "offset": [
        1686,
        1729
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "435": {
      "fn": "Router.<fallback>",
      "offset": [
        1686,
        1729
      ],
      "op": "CALLVALUE",
      "path": "24"
    },
    "436": {
      "fn": "Router.<fallback>",
      "offset": [
        1686,
        1729
      ],
      "op": "DUP1",
      "path": "24"
    },
    "437": {
      "fn": "Router.<fallback>",
      "offset": [
        1686,
        1729
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "438": {
      "fn": "Router.<fallback>",
      "offset": [
        1686,
        1729
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1BE"
    },
    "441": {
      "fn": "Router.<fallback>",
      "offset": [
        1686,
        1729
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "442": {
      "fn": "Router.<fallback>",
      "offset": [
        1686,
        1729
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "444": {
      "fn": "Router.<fallback>",
      "offset": [
        1686,
        1729
      ],
      "op": "DUP1",
      "path": "24"
    },
    "445": {
      "fn": "Router.<fallback>",
      "offset": [
        1686,
        1729
      ],
      "op": "REVERT",
      "path": "24"
    },
    "446": {
      "fn": "Router.<fallback>",
      "offset": [
        1686,
        1729
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "447": {
      "fn": "Router.<fallback>",
      "offset": [
        1686,
        1729
      ],
      "op": "POP",
      "path": "24"
    },
    "448": {
      "fn": "Router.<fallback>",
      "offset": [
        1686,
        1729
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x148"
    },
    "451": {
      "fn": "Router.<fallback>",
      "offset": [
        1686,
        1729
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1005"
    },
    "454": {
      "fn": "Router.<fallback>",
      "jump": "i",
      "offset": [
        1686,
        1729
      ],
      "op": "JUMP",
      "path": "24"
    },
    "455": {
      "offset": [
        1648,
        1680
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "456": {
      "fn": "Router.<fallback>",
      "offset": [
        1648,
        1680
      ],
      "op": "CALLVALUE",
      "path": "24"
    },
    "457": {
      "fn": "Router.<fallback>",
      "offset": [
        1648,
        1680
      ],
      "op": "DUP1",
      "path": "24"
    },
    "458": {
      "fn": "Router.<fallback>",
      "offset": [
        1648,
        1680
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "459": {
      "fn": "Router.<fallback>",
      "offset": [
        1648,
        1680
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1D3"
    },
    "462": {
      "fn": "Router.<fallback>",
      "offset": [
        1648,
        1680
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "463": {
      "fn": "Router.<fallback>",
      "offset": [
        1648,
        1680
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "465": {
      "fn": "Router.<fallback>",
      "offset": [
        1648,
        1680
      ],
      "op": "DUP1",
      "path": "24"
    },
    "466": {
      "fn": "Router.<fallback>",
      "offset": [
        1648,
        1680
      ],
      "op": "REVERT",
      "path": "24"
    },
    "467": {
      "fn": "Router.<fallback>",
      "offset": [
        1648,
        1680
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "468": {
      "fn": "Router.<fallback>",
      "offset": [
        1648,
        1680
      ],
      "op": "POP",
      "path": "24"
    },
    "469": {
      "fn": "Router.<fallback>",
      "offset": [
        1648,
        1680
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x148"
    },
    "472": {
      "fn": "Router.<fallback>",
      "offset": [
        1648,
        1680
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1029"
    },
    "475": {
      "fn": "Router.<fallback>",
      "jump": "i",
      "offset": [
        1648,
        1680
      ],
      "op": "JUMP",
      "path": "24"
    },
    "476": {
      "offset": [
        1816,
        1849
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "477": {
      "fn": "Router.<fallback>",
      "offset": [
        1816,
        1849
      ],
      "op": "CALLVALUE",
      "path": "24"
    },
    "478": {
      "fn": "Router.<fallback>",
      "offset": [
        1816,
        1849
      ],
      "op": "DUP1",
      "path": "24"
    },
    "479": {
      "fn": "Router.<fallback>",
      "offset": [
        1816,
        1849
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "480": {
      "fn": "Router.<fallback>",
      "offset": [
        1816,
        1849
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1E8"
    },
    "483": {
      "fn": "Router.<fallback>",
      "offset": [
        1816,
        1849
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "484": {
      "fn": "Router.<fallback>",
      "offset": [
        1816,
        1849
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "486": {
      "fn": "Router.<fallback>",
      "offset": [
        1816,
        1849
      ],
      "op": "DUP1",
      "path": "24"
    },
    "487": {
      "fn": "Router.<fallback>",
      "offset": [
        1816,
        1849
      ],
      "op": "REVERT",
      "path": "24"
    },
    "488": {
      "fn": "Router.<fallback>",
      "offset": [
        1816,
        1849
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "489": {
      "fn": "Router.<fallback>",
      "offset": [
        1816,
        1849
      ],
      "op": "POP",
      "path": "24"
    },
    "490": {
      "fn": "Router.<fallback>",
      "offset": [
        1816,
        1849
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x148"
    },
    "493": {
      "fn": "Router.<fallback>",
      "offset": [
        1816,
        1849
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x104D"
    },
    "496": {
      "fn": "Router.<fallback>",
      "jump": "i",
      "offset": [
        1816,
        1849
      ],
      "op": "JUMP",
      "path": "24"
    },
    "497": {
      "offset": [
        1603,
        1642
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "498": {
      "fn": "Router.<fallback>",
      "offset": [
        1603,
        1642
      ],
      "op": "CALLVALUE",
      "path": "24"
    },
    "499": {
      "fn": "Router.<fallback>",
      "offset": [
        1603,
        1642
      ],
      "op": "DUP1",
      "path": "24"
    },
    "500": {
      "fn": "Router.<fallback>",
      "offset": [
        1603,
        1642
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "501": {
      "fn": "Router.<fallback>",
      "offset": [
        1603,
        1642
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1FD"
    },
    "504": {
      "fn": "Router.<fallback>",
      "offset": [
        1603,
        1642
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "505": {
      "fn": "Router.<fallback>",
      "offset": [
        1603,
        1642
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "507": {
      "fn": "Router.<fallback>",
      "offset": [
        1603,
        1642
      ],
      "op": "DUP1",
      "path": "24"
    },
    "508": {
      "fn": "Router.<fallback>",
      "offset": [
        1603,
        1642
      ],
      "op": "REVERT",
      "path": "24"
    },
    "509": {
      "fn": "Router.<fallback>",
      "offset": [
        1603,
        1642
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "510": {
      "fn": "Router.<fallback>",
      "offset": [
        1603,
        1642
      ],
      "op": "POP",
      "path": "24"
    },
    "511": {
      "fn": "Router.<fallback>",
      "offset": [
        1603,
        1642
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x148"
    },
    "514": {
      "fn": "Router.<fallback>",
      "offset": [
        1603,
        1642
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1071"
    },
    "517": {
      "fn": "Router.<fallback>",
      "jump": "i",
      "offset": [
        1603,
        1642
      ],
      "op": "JUMP",
      "path": "24"
    },
    "518": {
      "offset": [
        1560,
        1597
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "519": {
      "fn": "Router.<fallback>",
      "offset": [
        1560,
        1597
      ],
      "op": "CALLVALUE",
      "path": "24"
    },
    "520": {
      "fn": "Router.<fallback>",
      "offset": [
        1560,
        1597
      ],
      "op": "DUP1",
      "path": "24"
    },
    "521": {
      "fn": "Router.<fallback>",
      "offset": [
        1560,
        1597
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "522": {
      "fn": "Router.<fallback>",
      "offset": [
        1560,
        1597
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x212"
    },
    "525": {
      "fn": "Router.<fallback>",
      "offset": [
        1560,
        1597
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "526": {
      "fn": "Router.<fallback>",
      "offset": [
        1560,
        1597
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "528": {
      "fn": "Router.<fallback>",
      "offset": [
        1560,
        1597
      ],
      "op": "DUP1",
      "path": "24"
    },
    "529": {
      "fn": "Router.<fallback>",
      "offset": [
        1560,
        1597
      ],
      "op": "REVERT",
      "path": "24"
    },
    "530": {
      "fn": "Router.<fallback>",
      "offset": [
        1560,
        1597
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "531": {
      "fn": "Router.<fallback>",
      "offset": [
        1560,
        1597
      ],
      "op": "POP",
      "path": "24"
    },
    "532": {
      "fn": "Router.<fallback>",
      "offset": [
        1560,
        1597
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x148"
    },
    "535": {
      "fn": "Router.<fallback>",
      "offset": [
        1560,
        1597
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1095"
    },
    "538": {
      "fn": "Router.<fallback>",
      "jump": "i",
      "offset": [
        1560,
        1597
      ],
      "op": "JUMP",
      "path": "24"
    },
    "539": {
      "offset": [
        1855,
        1897
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "540": {
      "fn": "Router.<fallback>",
      "offset": [
        1855,
        1897
      ],
      "op": "CALLVALUE",
      "path": "24"
    },
    "541": {
      "fn": "Router.<fallback>",
      "offset": [
        1855,
        1897
      ],
      "op": "DUP1",
      "path": "24"
    },
    "542": {
      "fn": "Router.<fallback>",
      "offset": [
        1855,
        1897
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "543": {
      "fn": "Router.<fallback>",
      "offset": [
        1855,
        1897
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x227"
    },
    "546": {
      "fn": "Router.<fallback>",
      "offset": [
        1855,
        1897
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "547": {
      "fn": "Router.<fallback>",
      "offset": [
        1855,
        1897
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "549": {
      "fn": "Router.<fallback>",
      "offset": [
        1855,
        1897
      ],
      "op": "DUP1",
      "path": "24"
    },
    "550": {
      "fn": "Router.<fallback>",
      "offset": [
        1855,
        1897
      ],
      "op": "REVERT",
      "path": "24"
    },
    "551": {
      "fn": "Router.<fallback>",
      "offset": [
        1855,
        1897
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "552": {
      "fn": "Router.<fallback>",
      "offset": [
        1855,
        1897
      ],
      "op": "POP",
      "path": "24"
    },
    "553": {
      "fn": "Router.<fallback>",
      "offset": [
        1855,
        1897
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x148"
    },
    "556": {
      "fn": "Router.<fallback>",
      "offset": [
        1855,
        1897
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x10B9"
    },
    "559": {
      "fn": "Router.<fallback>",
      "jump": "i",
      "offset": [
        1855,
        1897
      ],
      "op": "JUMP",
      "path": "24"
    },
    "560": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        4969,
        12853
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "561": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        4969,
        12853
      ],
      "op": "CALLVALUE",
      "path": "24"
    },
    "562": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        4969,
        12853
      ],
      "op": "DUP1",
      "path": "24"
    },
    "563": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        4969,
        12853
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "564": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        4969,
        12853
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x23C"
    },
    "567": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        4969,
        12853
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "568": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        4969,
        12853
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "570": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        4969,
        12853
      ],
      "op": "DUP1",
      "path": "24"
    },
    "571": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        4969,
        12853
      ],
      "op": "REVERT",
      "path": "24"
    },
    "572": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        4969,
        12853
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "573": {
      "op": "POP"
    },
    "574": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        4969,
        12853
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x148"
    },
    "577": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        4969,
        12853
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x24B"
    },
    "580": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        4969,
        12853
      ],
      "op": "CALLDATASIZE",
      "path": "24"
    },
    "581": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        4969,
        12853
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "583": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        4969,
        12853
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x13F8"
    },
    "586": {
      "fn": "Router.getRouterImplementation",
      "jump": "i",
      "offset": [
        4969,
        12853
      ],
      "op": "JUMP",
      "path": "24"
    },
    "587": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        4969,
        12853
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "588": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        4969,
        12853
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2EE"
    },
    "591": {
      "fn": "Router.getRouterImplementation",
      "jump": "i",
      "offset": [
        4969,
        12853
      ],
      "op": "JUMP",
      "path": "24"
    },
    "592": {
      "offset": [
        920,
        946
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "593": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        920,
        946
      ],
      "op": "CALLVALUE",
      "path": "66"
    },
    "594": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        920,
        946
      ],
      "op": "DUP1",
      "path": "66"
    },
    "595": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        920,
        946
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "596": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        920,
        946
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x25C"
    },
    "599": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        920,
        946
      ],
      "op": "JUMPI",
      "path": "66"
    },
    "600": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        920,
        946
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "602": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        920,
        946
      ],
      "op": "DUP1",
      "path": "66"
    },
    "603": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        920,
        946
      ],
      "op": "REVERT",
      "path": "66"
    },
    "604": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        920,
        946
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "605": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        920,
        946
      ],
      "op": "POP",
      "path": "66"
    },
    "606": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        920,
        946
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x148"
    },
    "609": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        920,
        946
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x10DD"
    },
    "612": {
      "fn": "Router.getRouterImplementation",
      "jump": "i",
      "offset": [
        920,
        946
      ],
      "op": "JUMP",
      "path": "66"
    },
    "613": {
      "offset": [
        811,
        831
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "614": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        811,
        831
      ],
      "op": "CALLVALUE",
      "path": "66"
    },
    "615": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        811,
        831
      ],
      "op": "DUP1",
      "path": "66"
    },
    "616": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        811,
        831
      ],
      "op": "ISZERO",
      "path": "66"
    },
    "617": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        811,
        831
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x271"
    },
    "620": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        811,
        831
      ],
      "op": "JUMPI",
      "path": "66"
    },
    "621": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        811,
        831
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "623": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        811,
        831
      ],
      "op": "DUP1",
      "path": "66"
    },
    "624": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        811,
        831
      ],
      "op": "REVERT",
      "path": "66"
    },
    "625": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        811,
        831
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "626": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        811,
        831
      ],
      "op": "POP",
      "path": "66"
    },
    "627": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        811,
        831
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x148"
    },
    "630": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        811,
        831
      ],
      "op": "PUSH2",
      "path": "66",
      "value": "0x10EC"
    },
    "633": {
      "fn": "Router.getRouterImplementation",
      "jump": "i",
      "offset": [
        811,
        831
      ],
      "op": "JUMP",
      "path": "66"
    },
    "634": {
      "offset": [
        1781,
        1810
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "635": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        1781,
        1810
      ],
      "op": "CALLVALUE",
      "path": "24"
    },
    "636": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        1781,
        1810
      ],
      "op": "DUP1",
      "path": "24"
    },
    "637": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        1781,
        1810
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "638": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        1781,
        1810
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x286"
    },
    "641": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        1781,
        1810
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "642": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        1781,
        1810
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "644": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        1781,
        1810
      ],
      "op": "DUP1",
      "path": "24"
    },
    "645": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        1781,
        1810
      ],
      "op": "REVERT",
      "path": "24"
    },
    "646": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        1781,
        1810
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "647": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        1781,
        1810
      ],
      "op": "POP",
      "path": "24"
    },
    "648": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        1781,
        1810
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x148"
    },
    "651": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        1781,
        1810
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1103"
    },
    "654": {
      "fn": "Router.getRouterImplementation",
      "jump": "i",
      "offset": [
        1781,
        1810
      ],
      "op": "JUMP",
      "path": "24"
    },
    "655": {
      "offset": [
        1903,
        1948
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "656": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        1903,
        1948
      ],
      "op": "CALLVALUE",
      "path": "24"
    },
    "657": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        1903,
        1948
      ],
      "op": "DUP1",
      "path": "24"
    },
    "658": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        1903,
        1948
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "659": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        1903,
        1948
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x29B"
    },
    "662": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        1903,
        1948
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "663": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        1903,
        1948
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "665": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        1903,
        1948
      ],
      "op": "DUP1",
      "path": "24"
    },
    "666": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        1903,
        1948
      ],
      "op": "REVERT",
      "path": "24"
    },
    "667": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        1903,
        1948
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "668": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        1903,
        1948
      ],
      "op": "POP",
      "path": "24"
    },
    "669": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        1903,
        1948
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x148"
    },
    "672": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        1903,
        1948
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1127"
    },
    "675": {
      "fn": "Router.getRouterImplementation",
      "jump": "i",
      "offset": [
        1903,
        1948
      ],
      "op": "JUMP",
      "path": "24"
    },
    "676": {
      "fn": "Router.initialize",
      "offset": [
        3377,
        4803
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "677": {
      "fn": "Router.initialize",
      "offset": [
        3377,
        4803
      ],
      "op": "CALLVALUE",
      "path": "24"
    },
    "678": {
      "fn": "Router.initialize",
      "offset": [
        3377,
        4803
      ],
      "op": "DUP1",
      "path": "24"
    },
    "679": {
      "fn": "Router.initialize",
      "offset": [
        3377,
        4803
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "680": {
      "fn": "Router.initialize",
      "offset": [
        3377,
        4803
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2B0"
    },
    "683": {
      "fn": "Router.initialize",
      "offset": [
        3377,
        4803
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "684": {
      "fn": "Router.initialize",
      "offset": [
        3377,
        4803
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "686": {
      "fn": "Router.initialize",
      "offset": [
        3377,
        4803
      ],
      "op": "DUP1",
      "path": "24"
    },
    "687": {
      "fn": "Router.initialize",
      "offset": [
        3377,
        4803
      ],
      "op": "REVERT",
      "path": "24"
    },
    "688": {
      "fn": "Router.initialize",
      "offset": [
        3377,
        4803
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "689": {
      "op": "POP"
    },
    "690": {
      "fn": "Router.initialize",
      "offset": [
        3377,
        4803
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x131"
    },
    "693": {
      "fn": "Router.initialize",
      "offset": [
        3377,
        4803
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2BF"
    },
    "696": {
      "fn": "Router.initialize",
      "offset": [
        3377,
        4803
      ],
      "op": "CALLDATASIZE",
      "path": "24"
    },
    "697": {
      "fn": "Router.initialize",
      "offset": [
        3377,
        4803
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "699": {
      "fn": "Router.initialize",
      "offset": [
        3377,
        4803
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x13B6"
    },
    "702": {
      "fn": "Router.initialize",
      "jump": "i",
      "offset": [
        3377,
        4803
      ],
      "op": "JUMP",
      "path": "24"
    },
    "703": {
      "fn": "Router.initialize",
      "offset": [
        3377,
        4803
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "704": {
      "fn": "Router.initialize",
      "offset": [
        3377,
        4803
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x114B"
    },
    "707": {
      "fn": "Router.initialize",
      "jump": "i",
      "offset": [
        3377,
        4803
      ],
      "op": "JUMP",
      "path": "24"
    },
    "708": {
      "offset": [
        1954,
        1991
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "709": {
      "fn": "Router.initialize",
      "offset": [
        1954,
        1991
      ],
      "op": "CALLVALUE",
      "path": "24"
    },
    "710": {
      "fn": "Router.initialize",
      "offset": [
        1954,
        1991
      ],
      "op": "DUP1",
      "path": "24"
    },
    "711": {
      "fn": "Router.initialize",
      "offset": [
        1954,
        1991
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "712": {
      "fn": "Router.initialize",
      "offset": [
        1954,
        1991
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2D0"
    },
    "715": {
      "fn": "Router.initialize",
      "offset": [
        1954,
        1991
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "716": {
      "fn": "Router.initialize",
      "offset": [
        1954,
        1991
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "718": {
      "fn": "Router.initialize",
      "offset": [
        1954,
        1991
      ],
      "op": "DUP1",
      "path": "24"
    },
    "719": {
      "fn": "Router.initialize",
      "offset": [
        1954,
        1991
      ],
      "op": "REVERT",
      "path": "24"
    },
    "720": {
      "fn": "Router.initialize",
      "offset": [
        1954,
        1991
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "721": {
      "fn": "Router.initialize",
      "offset": [
        1954,
        1991
      ],
      "op": "POP",
      "path": "24"
    },
    "722": {
      "fn": "Router.initialize",
      "offset": [
        1954,
        1991
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x148"
    },
    "725": {
      "fn": "Router.initialize",
      "offset": [
        1954,
        1991
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1357"
    },
    "728": {
      "fn": "Router.initialize",
      "jump": "i",
      "offset": [
        1954,
        1991
      ],
      "op": "JUMP",
      "path": "24"
    },
    "729": {
      "offset": [
        1467,
        1509
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "730": {
      "fn": "Router.initialize",
      "offset": [
        1467,
        1509
      ],
      "op": "CALLVALUE",
      "path": "24"
    },
    "731": {
      "fn": "Router.initialize",
      "offset": [
        1467,
        1509
      ],
      "op": "DUP1",
      "path": "24"
    },
    "732": {
      "fn": "Router.initialize",
      "offset": [
        1467,
        1509
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "733": {
      "fn": "Router.initialize",
      "offset": [
        1467,
        1509
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2E5"
    },
    "736": {
      "fn": "Router.initialize",
      "offset": [
        1467,
        1509
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "737": {
      "fn": "Router.initialize",
      "offset": [
        1467,
        1509
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "739": {
      "fn": "Router.initialize",
      "offset": [
        1467,
        1509
      ],
      "op": "DUP1",
      "path": "24"
    },
    "740": {
      "fn": "Router.initialize",
      "offset": [
        1467,
        1509
      ],
      "op": "REVERT",
      "path": "24"
    },
    "741": {
      "fn": "Router.initialize",
      "offset": [
        1467,
        1509
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "742": {
      "fn": "Router.initialize",
      "offset": [
        1467,
        1509
      ],
      "op": "POP",
      "path": "24"
    },
    "743": {
      "fn": "Router.initialize",
      "offset": [
        1467,
        1509
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x148"
    },
    "746": {
      "fn": "Router.initialize",
      "offset": [
        1467,
        1509
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x137B"
    },
    "749": {
      "fn": "Router.initialize",
      "jump": "i",
      "offset": [
        1467,
        1509
      ],
      "op": "JUMP",
      "path": "24"
    },
    "750": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        4969,
        12853
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "751": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5035,
        5042
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "753": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "755": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "757": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "759": {
      "op": "SHL"
    },
    "760": {
      "op": "SUB"
    },
    "761": {
      "op": "NOT"
    },
    "762": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5071,
        5119
      ],
      "op": "DUP3",
      "path": "24"
    },
    "763": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5071,
        5119
      ],
      "op": "AND",
      "path": "24"
    },
    "764": {
      "op": "PUSH4",
      "value": "0x37351953"
    },
    "769": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "771": {
      "op": "SHL"
    },
    "772": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5071,
        5119
      ],
      "op": "EQ",
      "path": "24"
    },
    "773": {
      "branch": 20,
      "fn": "Router.getRouterImplementation",
      "offset": [
        5071,
        5119
      ],
      "op": "DUP1",
      "path": "24"
    },
    "774": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5071,
        5191
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x31F"
    },
    "777": {
      "branch": 20,
      "fn": "Router.getRouterImplementation",
      "offset": [
        5071,
        5191
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "778": {
      "op": "POP"
    },
    "779": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "781": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "783": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "785": {
      "op": "SHL"
    },
    "786": {
      "op": "SUB"
    },
    "787": {
      "op": "NOT"
    },
    "788": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5135,
        5191
      ],
      "op": "DUP3",
      "path": "24"
    },
    "789": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5135,
        5191
      ],
      "op": "AND",
      "path": "24"
    },
    "790": {
      "op": "PUSH4",
      "value": "0x276B64B"
    },
    "795": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "797": {
      "op": "SHL"
    },
    "798": {
      "branch": 21,
      "fn": "Router.getRouterImplementation",
      "offset": [
        5135,
        5191
      ],
      "op": "EQ",
      "path": "24"
    },
    "799": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5071,
        5191
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "800": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5071,
        5275
      ],
      "op": "DUP1",
      "path": "24"
    },
    "801": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5071,
        5275
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x33A"
    },
    "804": {
      "branch": 21,
      "fn": "Router.getRouterImplementation",
      "offset": [
        5071,
        5275
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "805": {
      "op": "POP"
    },
    "806": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "808": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "810": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "812": {
      "op": "SHL"
    },
    "813": {
      "op": "SUB"
    },
    "814": {
      "op": "NOT"
    },
    "815": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5207,
        5275
      ],
      "op": "DUP3",
      "path": "24"
    },
    "816": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5207,
        5275
      ],
      "op": "AND",
      "path": "24"
    },
    "817": {
      "op": "PUSH4",
      "value": "0x5950D8E9"
    },
    "822": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "824": {
      "op": "SHL"
    },
    "825": {
      "branch": 22,
      "fn": "Router.getRouterImplementation",
      "offset": [
        5207,
        5275
      ],
      "op": "EQ",
      "path": "24"
    },
    "826": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5071,
        5275
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "827": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5071,
        5330
      ],
      "op": "DUP1",
      "path": "24"
    },
    "828": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5071,
        5330
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x355"
    },
    "831": {
      "branch": 22,
      "fn": "Router.getRouterImplementation",
      "offset": [
        5071,
        5330
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "832": {
      "op": "POP"
    },
    "833": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "835": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "837": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "839": {
      "op": "SHL"
    },
    "840": {
      "op": "SUB"
    },
    "841": {
      "op": "NOT"
    },
    "842": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5291,
        5330
      ],
      "op": "DUP3",
      "path": "24"
    },
    "843": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5291,
        5330
      ],
      "op": "AND",
      "path": "24"
    },
    "844": {
      "op": "PUSH4",
      "value": "0x541F527"
    },
    "849": {
      "op": "PUSH1",
      "value": "0xE4"
    },
    "851": {
      "op": "SHL"
    },
    "852": {
      "branch": 23,
      "fn": "Router.getRouterImplementation",
      "offset": [
        5291,
        5330
      ],
      "op": "EQ",
      "path": "24"
    },
    "853": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5071,
        5330
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "854": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5054,
        12847
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "855": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5054,
        12847
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x381"
    },
    "858": {
      "branch": 23,
      "fn": "Router.getRouterImplementation",
      "offset": [
        5054,
        12847
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "859": {
      "op": "POP"
    },
    "860": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5362,
        5374
      ],
      "op": "PUSH32",
      "path": "24",
      "statement": 1,
      "value": "0x0"
    },
    "893": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5355,
        5374
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xF3D"
    },
    "896": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5355,
        5374
      ],
      "op": "JUMP",
      "path": "24"
    },
    "897": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5054,
        12847
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "898": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "900": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "902": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "904": {
      "op": "SHL"
    },
    "905": {
      "op": "SUB"
    },
    "906": {
      "op": "NOT"
    },
    "907": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5408,
        5454
      ],
      "op": "DUP3",
      "path": "24"
    },
    "908": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5408,
        5454
      ],
      "op": "AND",
      "path": "24"
    },
    "909": {
      "op": "PUSH4",
      "value": "0x8F0BA30F"
    },
    "914": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "916": {
      "op": "SHL"
    },
    "917": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5408,
        5454
      ],
      "op": "EQ",
      "path": "24"
    },
    "918": {
      "branch": 24,
      "fn": "Router.getRouterImplementation",
      "offset": [
        5408,
        5454
      ],
      "op": "DUP1",
      "path": "24"
    },
    "919": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5408,
        5523
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x3B0"
    },
    "922": {
      "branch": 24,
      "fn": "Router.getRouterImplementation",
      "offset": [
        5408,
        5523
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "923": {
      "op": "POP"
    },
    "924": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "926": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "928": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "930": {
      "op": "SHL"
    },
    "931": {
      "op": "SUB"
    },
    "932": {
      "op": "NOT"
    },
    "933": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5470,
        5523
      ],
      "op": "DUP3",
      "path": "24"
    },
    "934": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5470,
        5523
      ],
      "op": "AND",
      "path": "24"
    },
    "935": {
      "op": "PUSH4",
      "value": "0x734B7231"
    },
    "940": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "942": {
      "op": "SHL"
    },
    "943": {
      "branch": 25,
      "fn": "Router.getRouterImplementation",
      "offset": [
        5470,
        5523
      ],
      "op": "EQ",
      "path": "24"
    },
    "944": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5408,
        5523
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "945": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5408,
        5584
      ],
      "op": "DUP1",
      "path": "24"
    },
    "946": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5408,
        5584
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x3CB"
    },
    "949": {
      "branch": 25,
      "fn": "Router.getRouterImplementation",
      "offset": [
        5408,
        5584
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "950": {
      "op": "POP"
    },
    "951": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "953": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "955": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "957": {
      "op": "SHL"
    },
    "958": {
      "op": "SUB"
    },
    "959": {
      "op": "NOT"
    },
    "960": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5539,
        5584
      ],
      "op": "DUP3",
      "path": "24"
    },
    "961": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5539,
        5584
      ],
      "op": "AND",
      "path": "24"
    },
    "962": {
      "op": "PUSH4",
      "value": "0x6DAD6AFB"
    },
    "967": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "969": {
      "op": "SHL"
    },
    "970": {
      "branch": 26,
      "fn": "Router.getRouterImplementation",
      "offset": [
        5539,
        5584
      ],
      "op": "EQ",
      "path": "24"
    },
    "971": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5408,
        5584
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "972": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5408,
        5653
      ],
      "op": "DUP1",
      "path": "24"
    },
    "973": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5408,
        5653
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x3E6"
    },
    "976": {
      "branch": 26,
      "fn": "Router.getRouterImplementation",
      "offset": [
        5408,
        5653
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "977": {
      "op": "POP"
    },
    "978": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "980": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "982": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "984": {
      "op": "SHL"
    },
    "985": {
      "op": "SUB"
    },
    "986": {
      "op": "NOT"
    },
    "987": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5600,
        5653
      ],
      "op": "DUP3",
      "path": "24"
    },
    "988": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5600,
        5653
      ],
      "op": "AND",
      "path": "24"
    },
    "989": {
      "op": "PUSH4",
      "value": "0xF292C415"
    },
    "994": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "996": {
      "op": "SHL"
    },
    "997": {
      "branch": 27,
      "fn": "Router.getRouterImplementation",
      "offset": [
        5600,
        5653
      ],
      "op": "EQ",
      "path": "24"
    },
    "998": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5408,
        5653
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "999": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5408,
        5720
      ],
      "op": "DUP1",
      "path": "24"
    },
    "1000": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5408,
        5720
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x401"
    },
    "1003": {
      "branch": 27,
      "fn": "Router.getRouterImplementation",
      "offset": [
        5408,
        5720
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "1004": {
      "op": "POP"
    },
    "1005": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1007": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1009": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1011": {
      "op": "SHL"
    },
    "1012": {
      "op": "SUB"
    },
    "1013": {
      "op": "NOT"
    },
    "1014": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5669,
        5720
      ],
      "op": "DUP3",
      "path": "24"
    },
    "1015": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5669,
        5720
      ],
      "op": "AND",
      "path": "24"
    },
    "1016": {
      "op": "PUSH4",
      "value": "0xC025D1A5"
    },
    "1021": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1023": {
      "op": "SHL"
    },
    "1024": {
      "branch": 28,
      "fn": "Router.getRouterImplementation",
      "offset": [
        5669,
        5720
      ],
      "op": "EQ",
      "path": "24"
    },
    "1025": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5408,
        5720
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1026": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5408,
        5795
      ],
      "op": "DUP1",
      "path": "24"
    },
    "1027": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5408,
        5795
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x41C"
    },
    "1030": {
      "branch": 28,
      "fn": "Router.getRouterImplementation",
      "offset": [
        5408,
        5795
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "1031": {
      "op": "POP"
    },
    "1032": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1034": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1036": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1038": {
      "op": "SHL"
    },
    "1039": {
      "op": "SUB"
    },
    "1040": {
      "op": "NOT"
    },
    "1041": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5736,
        5795
      ],
      "op": "DUP3",
      "path": "24"
    },
    "1042": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5736,
        5795
      ],
      "op": "AND",
      "path": "24"
    },
    "1043": {
      "op": "PUSH4",
      "value": "0x604FFAB"
    },
    "1048": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "1050": {
      "op": "SHL"
    },
    "1051": {
      "branch": 29,
      "fn": "Router.getRouterImplementation",
      "offset": [
        5736,
        5795
      ],
      "op": "EQ",
      "path": "24"
    },
    "1052": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5408,
        5795
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1053": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5408,
        5877
      ],
      "op": "DUP1",
      "path": "24"
    },
    "1054": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5408,
        5877
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x437"
    },
    "1057": {
      "branch": 29,
      "fn": "Router.getRouterImplementation",
      "offset": [
        5408,
        5877
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "1058": {
      "op": "POP"
    },
    "1059": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1061": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1063": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1065": {
      "op": "SHL"
    },
    "1066": {
      "op": "SUB"
    },
    "1067": {
      "op": "NOT"
    },
    "1068": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5811,
        5877
      ],
      "op": "DUP3",
      "path": "24"
    },
    "1069": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5811,
        5877
      ],
      "op": "AND",
      "path": "24"
    },
    "1070": {
      "op": "PUSH4",
      "value": "0x323E60CB"
    },
    "1075": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "1077": {
      "op": "SHL"
    },
    "1078": {
      "branch": 30,
      "fn": "Router.getRouterImplementation",
      "offset": [
        5811,
        5877
      ],
      "op": "EQ",
      "path": "24"
    },
    "1079": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5408,
        5877
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1080": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5391,
        12847
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "1081": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5391,
        12847
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x463"
    },
    "1084": {
      "branch": 30,
      "fn": "Router.getRouterImplementation",
      "offset": [
        5391,
        12847
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "1085": {
      "op": "POP"
    },
    "1086": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5909,
        5929
      ],
      "op": "PUSH32",
      "path": "24",
      "statement": 2,
      "value": "0x0"
    },
    "1119": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5902,
        5929
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xF3D"
    },
    "1122": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5902,
        5929
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1123": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5391,
        12847
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1124": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1126": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1128": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1130": {
      "op": "SHL"
    },
    "1131": {
      "op": "SUB"
    },
    "1132": {
      "op": "NOT"
    },
    "1133": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5963,
        6015
      ],
      "op": "DUP3",
      "path": "24"
    },
    "1134": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5963,
        6015
      ],
      "op": "AND",
      "path": "24"
    },
    "1135": {
      "op": "PUSH4",
      "value": "0x2890FB65"
    },
    "1140": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1142": {
      "op": "SHL"
    },
    "1143": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5963,
        6015
      ],
      "op": "EQ",
      "path": "24"
    },
    "1144": {
      "branch": 31,
      "fn": "Router.getRouterImplementation",
      "offset": [
        5963,
        6015
      ],
      "op": "DUP1",
      "path": "24"
    },
    "1145": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5963,
        6078
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x492"
    },
    "1148": {
      "branch": 31,
      "fn": "Router.getRouterImplementation",
      "offset": [
        5963,
        6078
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "1149": {
      "op": "POP"
    },
    "1150": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1152": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1154": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1156": {
      "op": "SHL"
    },
    "1157": {
      "op": "SUB"
    },
    "1158": {
      "op": "NOT"
    },
    "1159": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6031,
        6078
      ],
      "op": "DUP3",
      "path": "24"
    },
    "1160": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6031,
        6078
      ],
      "op": "AND",
      "path": "24"
    },
    "1161": {
      "op": "PUSH4",
      "value": "0xB8A69455"
    },
    "1166": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1168": {
      "op": "SHL"
    },
    "1169": {
      "branch": 32,
      "fn": "Router.getRouterImplementation",
      "offset": [
        6031,
        6078
      ],
      "op": "EQ",
      "path": "24"
    },
    "1170": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5963,
        6078
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1171": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5963,
        6132
      ],
      "op": "DUP1",
      "path": "24"
    },
    "1172": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5963,
        6132
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x4AC"
    },
    "1175": {
      "branch": 32,
      "fn": "Router.getRouterImplementation",
      "offset": [
        5963,
        6132
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "1176": {
      "op": "POP"
    },
    "1177": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1179": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1181": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1183": {
      "op": "SHL"
    },
    "1184": {
      "op": "SUB"
    },
    "1185": {
      "op": "NOT"
    },
    "1186": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6094,
        6132
      ],
      "op": "DUP3",
      "path": "24"
    },
    "1187": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6094,
        6132
      ],
      "op": "AND",
      "path": "24"
    },
    "1188": {
      "op": "PUSH3",
      "value": "0x5E665D"
    },
    "1192": {
      "op": "PUSH1",
      "value": "0xE3"
    },
    "1194": {
      "op": "SHL"
    },
    "1195": {
      "branch": 33,
      "fn": "Router.getRouterImplementation",
      "offset": [
        6094,
        6132
      ],
      "op": "EQ",
      "path": "24"
    },
    "1196": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5963,
        6132
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1197": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5963,
        6191
      ],
      "op": "DUP1",
      "path": "24"
    },
    "1198": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5963,
        6191
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x4C7"
    },
    "1201": {
      "branch": 33,
      "fn": "Router.getRouterImplementation",
      "offset": [
        5963,
        6191
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "1202": {
      "op": "POP"
    },
    "1203": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1205": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1207": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1209": {
      "op": "SHL"
    },
    "1210": {
      "op": "SUB"
    },
    "1211": {
      "op": "NOT"
    },
    "1212": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6148,
        6191
      ],
      "op": "DUP3",
      "path": "24"
    },
    "1213": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6148,
        6191
      ],
      "op": "AND",
      "path": "24"
    },
    "1214": {
      "op": "PUSH4",
      "value": "0xF667F897"
    },
    "1219": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1221": {
      "op": "SHL"
    },
    "1222": {
      "branch": 34,
      "fn": "Router.getRouterImplementation",
      "offset": [
        6148,
        6191
      ],
      "op": "EQ",
      "path": "24"
    },
    "1223": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5963,
        6191
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1224": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5963,
        6249
      ],
      "op": "DUP1",
      "path": "24"
    },
    "1225": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5963,
        6249
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x4E2"
    },
    "1228": {
      "branch": 34,
      "fn": "Router.getRouterImplementation",
      "offset": [
        5963,
        6249
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "1229": {
      "op": "POP"
    },
    "1230": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1232": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1234": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1236": {
      "op": "SHL"
    },
    "1237": {
      "op": "SUB"
    },
    "1238": {
      "op": "NOT"
    },
    "1239": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6207,
        6249
      ],
      "op": "DUP3",
      "path": "24"
    },
    "1240": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6207,
        6249
      ],
      "op": "AND",
      "path": "24"
    },
    "1241": {
      "op": "PUSH4",
      "value": "0x66890643"
    },
    "1246": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1248": {
      "op": "SHL"
    },
    "1249": {
      "branch": 35,
      "fn": "Router.getRouterImplementation",
      "offset": [
        6207,
        6249
      ],
      "op": "EQ",
      "path": "24"
    },
    "1250": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5963,
        6249
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1251": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5963,
        6315
      ],
      "op": "DUP1",
      "path": "24"
    },
    "1252": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5963,
        6315
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x4FD"
    },
    "1255": {
      "branch": 35,
      "fn": "Router.getRouterImplementation",
      "offset": [
        5963,
        6315
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "1256": {
      "op": "POP"
    },
    "1257": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1259": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1261": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1263": {
      "op": "SHL"
    },
    "1264": {
      "op": "SUB"
    },
    "1265": {
      "op": "NOT"
    },
    "1266": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6265,
        6315
      ],
      "op": "DUP3",
      "path": "24"
    },
    "1267": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6265,
        6315
      ],
      "op": "AND",
      "path": "24"
    },
    "1268": {
      "op": "PUSH4",
      "value": "0x9C97945"
    },
    "1273": {
      "op": "PUSH1",
      "value": "0xE4"
    },
    "1275": {
      "op": "SHL"
    },
    "1276": {
      "branch": 36,
      "fn": "Router.getRouterImplementation",
      "offset": [
        6265,
        6315
      ],
      "op": "EQ",
      "path": "24"
    },
    "1277": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5963,
        6315
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1278": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5946,
        12847
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "1279": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5946,
        12847
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x529"
    },
    "1282": {
      "branch": 36,
      "fn": "Router.getRouterImplementation",
      "offset": [
        5946,
        12847
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "1283": {
      "op": "POP"
    },
    "1284": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6347,
        6361
      ],
      "op": "PUSH32",
      "path": "24",
      "statement": 3,
      "value": "0x0"
    },
    "1317": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6340,
        6361
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xF3D"
    },
    "1320": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6340,
        6361
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1321": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5946,
        12847
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1322": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1324": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1326": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1328": {
      "op": "SHL"
    },
    "1329": {
      "op": "SUB"
    },
    "1330": {
      "op": "NOT"
    },
    "1331": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6395,
        6446
      ],
      "op": "DUP3",
      "path": "24"
    },
    "1332": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6395,
        6446
      ],
      "op": "AND",
      "path": "24"
    },
    "1333": {
      "op": "PUSH4",
      "value": "0x1FFC9A7"
    },
    "1338": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1340": {
      "op": "SHL"
    },
    "1341": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6395,
        6446
      ],
      "op": "EQ",
      "path": "24"
    },
    "1342": {
      "branch": 37,
      "fn": "Router.getRouterImplementation",
      "offset": [
        6395,
        6446
      ],
      "op": "DUP1",
      "path": "24"
    },
    "1343": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6395,
        6505
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x557"
    },
    "1346": {
      "branch": 37,
      "fn": "Router.getRouterImplementation",
      "offset": [
        6395,
        6505
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "1347": {
      "op": "POP"
    },
    "1348": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1350": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1352": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1354": {
      "op": "SHL"
    },
    "1355": {
      "op": "SUB"
    },
    "1356": {
      "op": "NOT"
    },
    "1357": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6462,
        6505
      ],
      "op": "DUP3",
      "path": "24"
    },
    "1358": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6462,
        6505
      ],
      "op": "AND",
      "path": "24"
    },
    "1359": {
      "op": "PUSH3",
      "value": "0x7EEAC7"
    },
    "1363": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "1365": {
      "op": "SHL"
    },
    "1366": {
      "branch": 38,
      "fn": "Router.getRouterImplementation",
      "offset": [
        6462,
        6505
      ],
      "op": "EQ",
      "path": "24"
    },
    "1367": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6395,
        6505
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1368": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6395,
        6569
      ],
      "op": "DUP1",
      "path": "24"
    },
    "1369": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6395,
        6569
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x572"
    },
    "1372": {
      "branch": 38,
      "fn": "Router.getRouterImplementation",
      "offset": [
        6395,
        6569
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "1373": {
      "op": "POP"
    },
    "1374": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1376": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1378": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1380": {
      "op": "SHL"
    },
    "1381": {
      "op": "SUB"
    },
    "1382": {
      "op": "NOT"
    },
    "1383": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6521,
        6569
      ],
      "op": "DUP3",
      "path": "24"
    },
    "1384": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6521,
        6569
      ],
      "op": "AND",
      "path": "24"
    },
    "1385": {
      "op": "PUSH4",
      "value": "0x13849CFD"
    },
    "1390": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "1392": {
      "op": "SHL"
    },
    "1393": {
      "branch": 39,
      "fn": "Router.getRouterImplementation",
      "offset": [
        6521,
        6569
      ],
      "op": "EQ",
      "path": "24"
    },
    "1394": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6395,
        6569
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1395": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6395,
        6634
      ],
      "op": "DUP1",
      "path": "24"
    },
    "1396": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6395,
        6634
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x58D"
    },
    "1399": {
      "branch": 39,
      "fn": "Router.getRouterImplementation",
      "offset": [
        6395,
        6634
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "1400": {
      "op": "POP"
    },
    "1401": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1403": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1405": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1407": {
      "op": "SHL"
    },
    "1408": {
      "op": "SUB"
    },
    "1409": {
      "op": "NOT"
    },
    "1410": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6585,
        6634
      ],
      "op": "DUP3",
      "path": "24"
    },
    "1411": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6585,
        6634
      ],
      "op": "AND",
      "path": "24"
    },
    "1412": {
      "op": "PUSH4",
      "value": "0xFAC8F09"
    },
    "1417": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1419": {
      "op": "SHL"
    },
    "1420": {
      "branch": 40,
      "fn": "Router.getRouterImplementation",
      "offset": [
        6585,
        6634
      ],
      "op": "EQ",
      "path": "24"
    },
    "1421": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6395,
        6634
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1422": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6395,
        6704
      ],
      "op": "DUP1",
      "path": "24"
    },
    "1423": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6395,
        6704
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x5A8"
    },
    "1426": {
      "branch": 40,
      "fn": "Router.getRouterImplementation",
      "offset": [
        6395,
        6704
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "1427": {
      "op": "POP"
    },
    "1428": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1430": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1432": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1434": {
      "op": "SHL"
    },
    "1435": {
      "op": "SUB"
    },
    "1436": {
      "op": "NOT"
    },
    "1437": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6650,
        6704
      ],
      "op": "DUP3",
      "path": "24"
    },
    "1438": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6650,
        6704
      ],
      "op": "AND",
      "path": "24"
    },
    "1439": {
      "op": "PUSH4",
      "value": "0x81A86855"
    },
    "1444": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1446": {
      "op": "SHL"
    },
    "1447": {
      "branch": 41,
      "fn": "Router.getRouterImplementation",
      "offset": [
        6650,
        6704
      ],
      "op": "EQ",
      "path": "24"
    },
    "1448": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6395,
        6704
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1449": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6395,
        6770
      ],
      "op": "DUP1",
      "path": "24"
    },
    "1450": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6395,
        6770
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x5C3"
    },
    "1453": {
      "branch": 41,
      "fn": "Router.getRouterImplementation",
      "offset": [
        6395,
        6770
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "1454": {
      "op": "POP"
    },
    "1455": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1457": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1459": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1461": {
      "op": "SHL"
    },
    "1462": {
      "op": "SUB"
    },
    "1463": {
      "op": "NOT"
    },
    "1464": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6720,
        6770
      ],
      "op": "DUP3",
      "path": "24"
    },
    "1465": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6720,
        6770
      ],
      "op": "AND",
      "path": "24"
    },
    "1466": {
      "op": "PUSH4",
      "value": "0x79212195"
    },
    "1471": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "1473": {
      "op": "SHL"
    },
    "1474": {
      "branch": 42,
      "fn": "Router.getRouterImplementation",
      "offset": [
        6720,
        6770
      ],
      "op": "EQ",
      "path": "24"
    },
    "1475": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6395,
        6770
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1476": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6395,
        6841
      ],
      "op": "DUP1",
      "path": "24"
    },
    "1477": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6395,
        6841
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x5DE"
    },
    "1480": {
      "branch": 42,
      "fn": "Router.getRouterImplementation",
      "offset": [
        6395,
        6841
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "1481": {
      "op": "POP"
    },
    "1482": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1484": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1486": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1488": {
      "op": "SHL"
    },
    "1489": {
      "op": "SUB"
    },
    "1490": {
      "op": "NOT"
    },
    "1491": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6786,
        6841
      ],
      "op": "DUP3",
      "path": "24"
    },
    "1492": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6786,
        6841
      ],
      "op": "AND",
      "path": "24"
    },
    "1493": {
      "op": "PUSH4",
      "value": "0x1759616B"
    },
    "1498": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "1500": {
      "op": "SHL"
    },
    "1501": {
      "branch": 43,
      "fn": "Router.getRouterImplementation",
      "offset": [
        6786,
        6841
      ],
      "op": "EQ",
      "path": "24"
    },
    "1502": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6395,
        6841
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1503": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6395,
        6905
      ],
      "op": "DUP1",
      "path": "24"
    },
    "1504": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6395,
        6905
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x5F9"
    },
    "1507": {
      "branch": 43,
      "fn": "Router.getRouterImplementation",
      "offset": [
        6395,
        6905
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "1508": {
      "op": "POP"
    },
    "1509": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1511": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1513": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1515": {
      "op": "SHL"
    },
    "1516": {
      "op": "SUB"
    },
    "1517": {
      "op": "NOT"
    },
    "1518": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6857,
        6905
      ],
      "op": "DUP3",
      "path": "24"
    },
    "1519": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6857,
        6905
      ],
      "op": "AND",
      "path": "24"
    },
    "1520": {
      "op": "PUSH4",
      "value": "0x7F4D701"
    },
    "1525": {
      "op": "PUSH1",
      "value": "0xE3"
    },
    "1527": {
      "op": "SHL"
    },
    "1528": {
      "branch": 44,
      "fn": "Router.getRouterImplementation",
      "offset": [
        6857,
        6905
      ],
      "op": "EQ",
      "path": "24"
    },
    "1529": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6395,
        6905
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1530": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6395,
        6965
      ],
      "op": "DUP1",
      "path": "24"
    },
    "1531": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6395,
        6965
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x614"
    },
    "1534": {
      "branch": 44,
      "fn": "Router.getRouterImplementation",
      "offset": [
        6395,
        6965
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "1535": {
      "op": "POP"
    },
    "1536": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1538": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1540": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1542": {
      "op": "SHL"
    },
    "1543": {
      "op": "SUB"
    },
    "1544": {
      "op": "NOT"
    },
    "1545": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6921,
        6965
      ],
      "op": "DUP3",
      "path": "24"
    },
    "1546": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6921,
        6965
      ],
      "op": "AND",
      "path": "24"
    },
    "1547": {
      "op": "PUSH4",
      "value": "0xE6B43B9"
    },
    "1552": {
      "op": "PUSH1",
      "value": "0xE3"
    },
    "1554": {
      "op": "SHL"
    },
    "1555": {
      "branch": 45,
      "fn": "Router.getRouterImplementation",
      "offset": [
        6921,
        6965
      ],
      "op": "EQ",
      "path": "24"
    },
    "1556": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6395,
        6965
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1557": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6395,
        7032
      ],
      "op": "DUP1",
      "path": "24"
    },
    "1558": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6395,
        7032
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x62F"
    },
    "1561": {
      "branch": 45,
      "fn": "Router.getRouterImplementation",
      "offset": [
        6395,
        7032
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "1562": {
      "op": "POP"
    },
    "1563": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1565": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1567": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1569": {
      "op": "SHL"
    },
    "1570": {
      "op": "SUB"
    },
    "1571": {
      "op": "NOT"
    },
    "1572": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6981,
        7032
      ],
      "op": "DUP3",
      "path": "24"
    },
    "1573": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6981,
        7032
      ],
      "op": "AND",
      "path": "24"
    },
    "1574": {
      "op": "PUSH4",
      "value": "0xA22CB465"
    },
    "1579": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1581": {
      "op": "SHL"
    },
    "1582": {
      "branch": 46,
      "fn": "Router.getRouterImplementation",
      "offset": [
        6981,
        7032
      ],
      "op": "EQ",
      "path": "24"
    },
    "1583": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6395,
        7032
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1584": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6395,
        7098
      ],
      "op": "DUP1",
      "path": "24"
    },
    "1585": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6395,
        7098
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x64A"
    },
    "1588": {
      "branch": 46,
      "fn": "Router.getRouterImplementation",
      "offset": [
        6395,
        7098
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "1589": {
      "op": "POP"
    },
    "1590": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1592": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1594": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1596": {
      "op": "SHL"
    },
    "1597": {
      "op": "SUB"
    },
    "1598": {
      "op": "NOT"
    },
    "1599": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7048,
        7098
      ],
      "op": "DUP3",
      "path": "24"
    },
    "1600": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7048,
        7098
      ],
      "op": "AND",
      "path": "24"
    },
    "1601": {
      "op": "PUSH4",
      "value": "0xE985E9C5"
    },
    "1606": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1608": {
      "op": "SHL"
    },
    "1609": {
      "branch": 47,
      "fn": "Router.getRouterImplementation",
      "offset": [
        7048,
        7098
      ],
      "op": "EQ",
      "path": "24"
    },
    "1610": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6395,
        7098
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1611": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6378,
        12847
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "1612": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6378,
        12847
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x676"
    },
    "1615": {
      "branch": 47,
      "fn": "Router.getRouterImplementation",
      "offset": [
        6378,
        12847
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "1616": {
      "op": "POP"
    },
    "1617": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7130,
        7137
      ],
      "op": "PUSH32",
      "path": "24",
      "statement": 4,
      "value": "0x0"
    },
    "1650": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7123,
        7137
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xF3D"
    },
    "1653": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7123,
        7137
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1654": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6378,
        12847
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1655": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1657": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1659": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1661": {
      "op": "SHL"
    },
    "1662": {
      "op": "SUB"
    },
    "1663": {
      "op": "NOT"
    },
    "1664": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7171,
        7218
      ],
      "op": "DUP3",
      "path": "24"
    },
    "1665": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7171,
        7218
      ],
      "op": "AND",
      "path": "24"
    },
    "1666": {
      "op": "PUSH4",
      "value": "0x6A96E86F"
    },
    "1671": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1673": {
      "op": "SHL"
    },
    "1674": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7171,
        7218
      ],
      "op": "EQ",
      "path": "24"
    },
    "1675": {
      "branch": 48,
      "fn": "Router.getRouterImplementation",
      "offset": [
        7171,
        7218
      ],
      "op": "DUP1",
      "path": "24"
    },
    "1676": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7171,
        7287
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x6A5"
    },
    "1679": {
      "branch": 48,
      "fn": "Router.getRouterImplementation",
      "offset": [
        7171,
        7287
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "1680": {
      "op": "POP"
    },
    "1681": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1683": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1685": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1687": {
      "op": "SHL"
    },
    "1688": {
      "op": "SUB"
    },
    "1689": {
      "op": "NOT"
    },
    "1690": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7234,
        7287
      ],
      "op": "DUP3",
      "path": "24"
    },
    "1691": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7234,
        7287
      ],
      "op": "AND",
      "path": "24"
    },
    "1692": {
      "op": "PUSH4",
      "value": "0x7DB31AB9"
    },
    "1697": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1699": {
      "op": "SHL"
    },
    "1700": {
      "branch": 49,
      "fn": "Router.getRouterImplementation",
      "offset": [
        7234,
        7287
      ],
      "op": "EQ",
      "path": "24"
    },
    "1701": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7171,
        7287
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1702": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7171,
        7348
      ],
      "op": "DUP1",
      "path": "24"
    },
    "1703": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7171,
        7348
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x6C0"
    },
    "1706": {
      "branch": 49,
      "fn": "Router.getRouterImplementation",
      "offset": [
        7171,
        7348
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "1707": {
      "op": "POP"
    },
    "1708": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1710": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1712": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1714": {
      "op": "SHL"
    },
    "1715": {
      "op": "SUB"
    },
    "1716": {
      "op": "NOT"
    },
    "1717": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7303,
        7348
      ],
      "op": "DUP3",
      "path": "24"
    },
    "1718": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7303,
        7348
      ],
      "op": "AND",
      "path": "24"
    },
    "1719": {
      "op": "PUSH4",
      "value": "0xA78DBFFF"
    },
    "1724": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1726": {
      "op": "SHL"
    },
    "1727": {
      "branch": 50,
      "fn": "Router.getRouterImplementation",
      "offset": [
        7303,
        7348
      ],
      "op": "EQ",
      "path": "24"
    },
    "1728": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7171,
        7348
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1729": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7171,
        7415
      ],
      "op": "DUP1",
      "path": "24"
    },
    "1730": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7171,
        7415
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x6DB"
    },
    "1733": {
      "branch": 50,
      "fn": "Router.getRouterImplementation",
      "offset": [
        7171,
        7415
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "1734": {
      "op": "POP"
    },
    "1735": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1737": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1739": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1741": {
      "op": "SHL"
    },
    "1742": {
      "op": "SUB"
    },
    "1743": {
      "op": "NOT"
    },
    "1744": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7364,
        7415
      ],
      "op": "DUP3",
      "path": "24"
    },
    "1745": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7364,
        7415
      ],
      "op": "AND",
      "path": "24"
    },
    "1746": {
      "op": "PUSH4",
      "value": "0x184E0053"
    },
    "1751": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "1753": {
      "op": "SHL"
    },
    "1754": {
      "branch": 51,
      "fn": "Router.getRouterImplementation",
      "offset": [
        7364,
        7415
      ],
      "op": "EQ",
      "path": "24"
    },
    "1755": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7171,
        7415
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1756": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7171,
        7475
      ],
      "op": "DUP1",
      "path": "24"
    },
    "1757": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7171,
        7475
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x6F6"
    },
    "1760": {
      "branch": 51,
      "fn": "Router.getRouterImplementation",
      "offset": [
        7171,
        7475
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "1761": {
      "op": "POP"
    },
    "1762": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1764": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1766": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1768": {
      "op": "SHL"
    },
    "1769": {
      "op": "SUB"
    },
    "1770": {
      "op": "NOT"
    },
    "1771": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7431,
        7475
      ],
      "op": "DUP3",
      "path": "24"
    },
    "1772": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7431,
        7475
      ],
      "op": "AND",
      "path": "24"
    },
    "1773": {
      "op": "PUSH4",
      "value": "0x18AE40D7"
    },
    "1778": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1780": {
      "op": "SHL"
    },
    "1781": {
      "branch": 52,
      "fn": "Router.getRouterImplementation",
      "offset": [
        7431,
        7475
      ],
      "op": "EQ",
      "path": "24"
    },
    "1782": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7171,
        7475
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1783": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7171,
        7539
      ],
      "op": "DUP1",
      "path": "24"
    },
    "1784": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7171,
        7539
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x711"
    },
    "1787": {
      "branch": 52,
      "fn": "Router.getRouterImplementation",
      "offset": [
        7171,
        7539
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "1788": {
      "op": "POP"
    },
    "1789": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1791": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1793": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1795": {
      "op": "SHL"
    },
    "1796": {
      "op": "SUB"
    },
    "1797": {
      "op": "NOT"
    },
    "1798": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7491,
        7539
      ],
      "op": "DUP3",
      "path": "24"
    },
    "1799": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7491,
        7539
      ],
      "op": "AND",
      "path": "24"
    },
    "1800": {
      "op": "PUSH4",
      "value": "0x44253849"
    },
    "1805": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "1807": {
      "op": "SHL"
    },
    "1808": {
      "branch": 53,
      "fn": "Router.getRouterImplementation",
      "offset": [
        7491,
        7539
      ],
      "op": "EQ",
      "path": "24"
    },
    "1809": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7171,
        7539
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1810": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7171,
        7609
      ],
      "op": "DUP1",
      "path": "24"
    },
    "1811": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7171,
        7609
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x72C"
    },
    "1814": {
      "branch": 53,
      "fn": "Router.getRouterImplementation",
      "offset": [
        7171,
        7609
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "1815": {
      "op": "POP"
    },
    "1816": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1818": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1820": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1822": {
      "op": "SHL"
    },
    "1823": {
      "op": "SUB"
    },
    "1824": {
      "op": "NOT"
    },
    "1825": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7555,
        7609
      ],
      "op": "DUP3",
      "path": "24"
    },
    "1826": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7555,
        7609
      ],
      "op": "AND",
      "path": "24"
    },
    "1827": {
      "op": "PUSH4",
      "value": "0x5C1D975"
    },
    "1832": {
      "op": "PUSH1",
      "value": "0xE3"
    },
    "1834": {
      "op": "SHL"
    },
    "1835": {
      "branch": 54,
      "fn": "Router.getRouterImplementation",
      "offset": [
        7555,
        7609
      ],
      "op": "EQ",
      "path": "24"
    },
    "1836": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7171,
        7609
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1837": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7171,
        7676
      ],
      "op": "DUP1",
      "path": "24"
    },
    "1838": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7171,
        7676
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x747"
    },
    "1841": {
      "branch": 54,
      "fn": "Router.getRouterImplementation",
      "offset": [
        7171,
        7676
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "1842": {
      "op": "POP"
    },
    "1843": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1845": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1847": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1849": {
      "op": "SHL"
    },
    "1850": {
      "op": "SUB"
    },
    "1851": {
      "op": "NOT"
    },
    "1852": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7625,
        7676
      ],
      "op": "DUP3",
      "path": "24"
    },
    "1853": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7625,
        7676
      ],
      "op": "AND",
      "path": "24"
    },
    "1854": {
      "op": "PUSH4",
      "value": "0x6D6503D3"
    },
    "1859": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "1861": {
      "op": "SHL"
    },
    "1862": {
      "branch": 55,
      "fn": "Router.getRouterImplementation",
      "offset": [
        7625,
        7676
      ],
      "op": "EQ",
      "path": "24"
    },
    "1863": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7171,
        7676
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1864": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7171,
        7756
      ],
      "op": "DUP1",
      "path": "24"
    },
    "1865": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7171,
        7756
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x762"
    },
    "1868": {
      "branch": 55,
      "fn": "Router.getRouterImplementation",
      "offset": [
        7171,
        7756
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "1869": {
      "op": "POP"
    },
    "1870": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1872": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1874": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1876": {
      "op": "SHL"
    },
    "1877": {
      "op": "SUB"
    },
    "1878": {
      "op": "NOT"
    },
    "1879": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7692,
        7756
      ],
      "op": "DUP3",
      "path": "24"
    },
    "1880": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7692,
        7756
      ],
      "op": "AND",
      "path": "24"
    },
    "1881": {
      "op": "PUSH4",
      "value": "0x1A05BCE1"
    },
    "1886": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1888": {
      "op": "SHL"
    },
    "1889": {
      "branch": 56,
      "fn": "Router.getRouterImplementation",
      "offset": [
        7692,
        7756
      ],
      "op": "EQ",
      "path": "24"
    },
    "1890": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7171,
        7756
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1891": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7171,
        7841
      ],
      "op": "DUP1",
      "path": "24"
    },
    "1892": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7171,
        7841
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x77D"
    },
    "1895": {
      "branch": 56,
      "fn": "Router.getRouterImplementation",
      "offset": [
        7171,
        7841
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "1896": {
      "op": "POP"
    },
    "1897": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1899": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1901": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1903": {
      "op": "SHL"
    },
    "1904": {
      "op": "SUB"
    },
    "1905": {
      "op": "NOT"
    },
    "1906": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7772,
        7841
      ],
      "op": "DUP3",
      "path": "24"
    },
    "1907": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7772,
        7841
      ],
      "op": "AND",
      "path": "24"
    },
    "1908": {
      "op": "PUSH4",
      "value": "0x3B2987B3"
    },
    "1913": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1915": {
      "op": "SHL"
    },
    "1916": {
      "branch": 57,
      "fn": "Router.getRouterImplementation",
      "offset": [
        7772,
        7841
      ],
      "op": "EQ",
      "path": "24"
    },
    "1917": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7171,
        7841
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1918": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7171,
        7923
      ],
      "op": "DUP1",
      "path": "24"
    },
    "1919": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7171,
        7923
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x798"
    },
    "1922": {
      "branch": 57,
      "fn": "Router.getRouterImplementation",
      "offset": [
        7171,
        7923
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "1923": {
      "op": "POP"
    },
    "1924": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1926": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1928": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1930": {
      "op": "SHL"
    },
    "1931": {
      "op": "SUB"
    },
    "1932": {
      "op": "NOT"
    },
    "1933": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7857,
        7923
      ],
      "op": "DUP3",
      "path": "24"
    },
    "1934": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7857,
        7923
      ],
      "op": "AND",
      "path": "24"
    },
    "1935": {
      "op": "PUSH4",
      "value": "0x4CB6B359"
    },
    "1940": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1942": {
      "op": "SHL"
    },
    "1943": {
      "branch": 58,
      "fn": "Router.getRouterImplementation",
      "offset": [
        7857,
        7923
      ],
      "op": "EQ",
      "path": "24"
    },
    "1944": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7171,
        7923
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1945": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7171,
        7989
      ],
      "op": "DUP1",
      "path": "24"
    },
    "1946": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7171,
        7989
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x7B3"
    },
    "1949": {
      "branch": 58,
      "fn": "Router.getRouterImplementation",
      "offset": [
        7171,
        7989
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "1950": {
      "op": "POP"
    },
    "1951": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1953": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1955": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1957": {
      "op": "SHL"
    },
    "1958": {
      "op": "SUB"
    },
    "1959": {
      "op": "NOT"
    },
    "1960": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7939,
        7989
      ],
      "op": "DUP3",
      "path": "24"
    },
    "1961": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7939,
        7989
      ],
      "op": "AND",
      "path": "24"
    },
    "1962": {
      "op": "PUSH4",
      "value": "0x31E14C19"
    },
    "1967": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "1969": {
      "op": "SHL"
    },
    "1970": {
      "branch": 59,
      "fn": "Router.getRouterImplementation",
      "offset": [
        7939,
        7989
      ],
      "op": "EQ",
      "path": "24"
    },
    "1971": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7171,
        7989
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1972": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7171,
        8053
      ],
      "op": "DUP1",
      "path": "24"
    },
    "1973": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7171,
        8053
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x7CE"
    },
    "1976": {
      "branch": 59,
      "fn": "Router.getRouterImplementation",
      "offset": [
        7171,
        8053
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "1977": {
      "op": "POP"
    },
    "1978": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1980": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1982": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1984": {
      "op": "SHL"
    },
    "1985": {
      "op": "SUB"
    },
    "1986": {
      "op": "NOT"
    },
    "1987": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8005,
        8053
      ],
      "op": "DUP3",
      "path": "24"
    },
    "1988": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8005,
        8053
      ],
      "op": "AND",
      "path": "24"
    },
    "1989": {
      "op": "PUSH4",
      "value": "0x450083DF"
    },
    "1994": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "1996": {
      "op": "SHL"
    },
    "1997": {
      "branch": 60,
      "fn": "Router.getRouterImplementation",
      "offset": [
        8005,
        8053
      ],
      "op": "EQ",
      "path": "24"
    },
    "1998": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7171,
        8053
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1999": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7154,
        12847
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "2000": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7154,
        12847
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x7FA"
    },
    "2003": {
      "branch": 60,
      "fn": "Router.getRouterImplementation",
      "offset": [
        7154,
        12847
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "2004": {
      "op": "POP"
    },
    "2005": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8085,
        8099
      ],
      "op": "PUSH32",
      "path": "24",
      "statement": 5,
      "value": "0x0"
    },
    "2038": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8078,
        8099
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xF3D"
    },
    "2041": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8078,
        8099
      ],
      "op": "JUMP",
      "path": "24"
    },
    "2042": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7154,
        12847
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "2043": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2045": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2047": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2049": {
      "op": "SHL"
    },
    "2050": {
      "op": "SUB"
    },
    "2051": {
      "op": "NOT"
    },
    "2052": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8133,
        8185
      ],
      "op": "DUP3",
      "path": "24"
    },
    "2053": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8133,
        8185
      ],
      "op": "AND",
      "path": "24"
    },
    "2054": {
      "op": "PUSH4",
      "value": "0x2D10E6EB"
    },
    "2059": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2061": {
      "op": "SHL"
    },
    "2062": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8133,
        8185
      ],
      "op": "EQ",
      "path": "24"
    },
    "2063": {
      "branch": 61,
      "fn": "Router.getRouterImplementation",
      "offset": [
        8133,
        8185
      ],
      "op": "DUP1",
      "path": "24"
    },
    "2064": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8133,
        8258
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x829"
    },
    "2067": {
      "branch": 61,
      "fn": "Router.getRouterImplementation",
      "offset": [
        8133,
        8258
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "2068": {
      "op": "POP"
    },
    "2069": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2071": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2073": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2075": {
      "op": "SHL"
    },
    "2076": {
      "op": "SUB"
    },
    "2077": {
      "op": "NOT"
    },
    "2078": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8201,
        8258
      ],
      "op": "DUP3",
      "path": "24"
    },
    "2079": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8201,
        8258
      ],
      "op": "AND",
      "path": "24"
    },
    "2080": {
      "op": "PUSH4",
      "value": "0x6633AF39"
    },
    "2085": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2087": {
      "op": "SHL"
    },
    "2088": {
      "branch": 62,
      "fn": "Router.getRouterImplementation",
      "offset": [
        8201,
        8258
      ],
      "op": "EQ",
      "path": "24"
    },
    "2089": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8133,
        8258
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "2090": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8133,
        8337
      ],
      "op": "DUP1",
      "path": "24"
    },
    "2091": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8133,
        8337
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x844"
    },
    "2094": {
      "branch": 62,
      "fn": "Router.getRouterImplementation",
      "offset": [
        8133,
        8337
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "2095": {
      "op": "POP"
    },
    "2096": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2098": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2100": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2102": {
      "op": "SHL"
    },
    "2103": {
      "op": "SUB"
    },
    "2104": {
      "op": "NOT"
    },
    "2105": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8274,
        8337
      ],
      "op": "DUP3",
      "path": "24"
    },
    "2106": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8274,
        8337
      ],
      "op": "AND",
      "path": "24"
    },
    "2107": {
      "op": "PUSH4",
      "value": "0xE3E7CB4F"
    },
    "2112": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2114": {
      "op": "SHL"
    },
    "2115": {
      "branch": 63,
      "fn": "Router.getRouterImplementation",
      "offset": [
        8274,
        8337
      ],
      "op": "EQ",
      "path": "24"
    },
    "2116": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8133,
        8337
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "2117": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8133,
        8421
      ],
      "op": "DUP1",
      "path": "24"
    },
    "2118": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8133,
        8421
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x85F"
    },
    "2121": {
      "branch": 63,
      "fn": "Router.getRouterImplementation",
      "offset": [
        8133,
        8421
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "2122": {
      "op": "POP"
    },
    "2123": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2125": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2127": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2129": {
      "op": "SHL"
    },
    "2130": {
      "op": "SUB"
    },
    "2131": {
      "op": "NOT"
    },
    "2132": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8353,
        8421
      ],
      "op": "DUP3",
      "path": "24"
    },
    "2133": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8353,
        8421
      ],
      "op": "AND",
      "path": "24"
    },
    "2134": {
      "op": "PUSH4",
      "value": "0x9A600EEB"
    },
    "2139": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2141": {
      "op": "SHL"
    },
    "2142": {
      "branch": 64,
      "fn": "Router.getRouterImplementation",
      "offset": [
        8353,
        8421
      ],
      "op": "EQ",
      "path": "24"
    },
    "2143": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8133,
        8421
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "2144": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8116,
        12847
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "2145": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8116,
        12847
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x88B"
    },
    "2148": {
      "branch": 64,
      "fn": "Router.getRouterImplementation",
      "offset": [
        8116,
        12847
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "2149": {
      "op": "POP"
    },
    "2150": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8453,
        8471
      ],
      "op": "PUSH32",
      "path": "24",
      "statement": 6,
      "value": "0x0"
    },
    "2183": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8446,
        8471
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xF3D"
    },
    "2186": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8446,
        8471
      ],
      "op": "JUMP",
      "path": "24"
    },
    "2187": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8116,
        12847
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "2188": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2190": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2192": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2194": {
      "op": "SHL"
    },
    "2195": {
      "op": "SUB"
    },
    "2196": {
      "op": "NOT"
    },
    "2197": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8505,
        8554
      ],
      "op": "DUP3",
      "path": "24"
    },
    "2198": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8505,
        8554
      ],
      "op": "AND",
      "path": "24"
    },
    "2199": {
      "op": "PUSH4",
      "value": "0x1FF7AEFD"
    },
    "2204": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "2206": {
      "op": "SHL"
    },
    "2207": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8505,
        8554
      ],
      "op": "EQ",
      "path": "24"
    },
    "2208": {
      "branch": 65,
      "fn": "Router.getRouterImplementation",
      "offset": [
        8505,
        8554
      ],
      "op": "DUP1",
      "path": "24"
    },
    "2209": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8505,
        8627
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x8BA"
    },
    "2212": {
      "branch": 65,
      "fn": "Router.getRouterImplementation",
      "offset": [
        8505,
        8627
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "2213": {
      "op": "POP"
    },
    "2214": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2216": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2218": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2220": {
      "op": "SHL"
    },
    "2221": {
      "op": "SUB"
    },
    "2222": {
      "op": "NOT"
    },
    "2223": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8570,
        8627
      ],
      "op": "DUP3",
      "path": "24"
    },
    "2224": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8570,
        8627
      ],
      "op": "AND",
      "path": "24"
    },
    "2225": {
      "op": "PUSH4",
      "value": "0xE816469D"
    },
    "2230": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2232": {
      "op": "SHL"
    },
    "2233": {
      "branch": 66,
      "fn": "Router.getRouterImplementation",
      "offset": [
        8570,
        8627
      ],
      "op": "EQ",
      "path": "24"
    },
    "2234": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8505,
        8627
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "2235": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8505,
        8703
      ],
      "op": "DUP1",
      "path": "24"
    },
    "2236": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8505,
        8703
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x8D5"
    },
    "2239": {
      "branch": 66,
      "fn": "Router.getRouterImplementation",
      "offset": [
        8505,
        8703
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "2240": {
      "op": "POP"
    },
    "2241": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2243": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2245": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2247": {
      "op": "SHL"
    },
    "2248": {
      "op": "SUB"
    },
    "2249": {
      "op": "NOT"
    },
    "2250": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8643,
        8703
      ],
      "op": "DUP3",
      "path": "24"
    },
    "2251": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8643,
        8703
      ],
      "op": "AND",
      "path": "24"
    },
    "2252": {
      "op": "PUSH4",
      "value": "0xFB281D9"
    },
    "2257": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2259": {
      "op": "SHL"
    },
    "2260": {
      "branch": 67,
      "fn": "Router.getRouterImplementation",
      "offset": [
        8643,
        8703
      ],
      "op": "EQ",
      "path": "24"
    },
    "2261": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8505,
        8703
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "2262": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8505,
        8787
      ],
      "op": "DUP1",
      "path": "24"
    },
    "2263": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8505,
        8787
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x8F0"
    },
    "2266": {
      "branch": 67,
      "fn": "Router.getRouterImplementation",
      "offset": [
        8505,
        8787
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "2267": {
      "op": "POP"
    },
    "2268": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2270": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2272": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2274": {
      "op": "SHL"
    },
    "2275": {
      "op": "SUB"
    },
    "2276": {
      "op": "NOT"
    },
    "2277": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8719,
        8787
      ],
      "op": "DUP3",
      "path": "24"
    },
    "2278": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8719,
        8787
      ],
      "op": "AND",
      "path": "24"
    },
    "2279": {
      "op": "PUSH4",
      "value": "0xFA37E395"
    },
    "2284": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2286": {
      "op": "SHL"
    },
    "2287": {
      "branch": 68,
      "fn": "Router.getRouterImplementation",
      "offset": [
        8719,
        8787
      ],
      "op": "EQ",
      "path": "24"
    },
    "2288": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8505,
        8787
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "2289": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8488,
        12847
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "2290": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8488,
        12847
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x91C"
    },
    "2293": {
      "branch": 68,
      "fn": "Router.getRouterImplementation",
      "offset": [
        8488,
        12847
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "2294": {
      "op": "POP"
    },
    "2295": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8819,
        8834
      ],
      "op": "PUSH32",
      "path": "24",
      "statement": 7,
      "value": "0x0"
    },
    "2328": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8812,
        8834
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xF3D"
    },
    "2331": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8812,
        8834
      ],
      "op": "JUMP",
      "path": "24"
    },
    "2332": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8488,
        12847
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "2333": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2335": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2337": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2339": {
      "op": "SHL"
    },
    "2340": {
      "op": "SUB"
    },
    "2341": {
      "op": "NOT"
    },
    "2342": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8868,
        8908
      ],
      "op": "DUP3",
      "path": "24"
    },
    "2343": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8868,
        8908
      ],
      "op": "AND",
      "path": "24"
    },
    "2344": {
      "op": "PUSH4",
      "value": "0x51479E39"
    },
    "2349": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2351": {
      "op": "SHL"
    },
    "2352": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8868,
        8908
      ],
      "op": "EQ",
      "path": "24"
    },
    "2353": {
      "branch": 69,
      "fn": "Router.getRouterImplementation",
      "offset": [
        8868,
        8908
      ],
      "op": "DUP1",
      "path": "24"
    },
    "2354": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8868,
        8972
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x94B"
    },
    "2357": {
      "branch": 69,
      "fn": "Router.getRouterImplementation",
      "offset": [
        8868,
        8972
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "2358": {
      "op": "POP"
    },
    "2359": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2361": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2363": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2365": {
      "op": "SHL"
    },
    "2366": {
      "op": "SUB"
    },
    "2367": {
      "op": "NOT"
    },
    "2368": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8924,
        8972
      ],
      "op": "DUP3",
      "path": "24"
    },
    "2369": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8924,
        8972
      ],
      "op": "AND",
      "path": "24"
    },
    "2370": {
      "op": "PUSH4",
      "value": "0x15BD0A31"
    },
    "2375": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "2377": {
      "op": "SHL"
    },
    "2378": {
      "branch": 70,
      "fn": "Router.getRouterImplementation",
      "offset": [
        8924,
        8972
      ],
      "op": "EQ",
      "path": "24"
    },
    "2379": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8868,
        8972
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "2380": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8868,
        9040
      ],
      "op": "DUP1",
      "path": "24"
    },
    "2381": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8868,
        9040
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x966"
    },
    "2384": {
      "branch": 70,
      "fn": "Router.getRouterImplementation",
      "offset": [
        8868,
        9040
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "2385": {
      "op": "POP"
    },
    "2386": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2388": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2390": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2392": {
      "op": "SHL"
    },
    "2393": {
      "op": "SUB"
    },
    "2394": {
      "op": "NOT"
    },
    "2395": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8988,
        9040
      ],
      "op": "DUP3",
      "path": "24"
    },
    "2396": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8988,
        9040
      ],
      "op": "AND",
      "path": "24"
    },
    "2397": {
      "op": "PUSH4",
      "value": "0x6B6EF5CD"
    },
    "2402": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "2404": {
      "op": "SHL"
    },
    "2405": {
      "branch": 71,
      "fn": "Router.getRouterImplementation",
      "offset": [
        8988,
        9040
      ],
      "op": "EQ",
      "path": "24"
    },
    "2406": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8868,
        9040
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "2407": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8868,
        9114
      ],
      "op": "DUP1",
      "path": "24"
    },
    "2408": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8868,
        9114
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x981"
    },
    "2411": {
      "branch": 71,
      "fn": "Router.getRouterImplementation",
      "offset": [
        8868,
        9114
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "2412": {
      "op": "POP"
    },
    "2413": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2415": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2417": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2419": {
      "op": "SHL"
    },
    "2420": {
      "op": "SUB"
    },
    "2421": {
      "op": "NOT"
    },
    "2422": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        9056,
        9114
      ],
      "op": "DUP3",
      "path": "24"
    },
    "2423": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        9056,
        9114
      ],
      "op": "AND",
      "path": "24"
    },
    "2424": {
      "op": "PUSH4",
      "value": "0x291AFDF3"
    },
    "2429": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2431": {
      "op": "SHL"
    },
    "2432": {
      "branch": 72,
      "fn": "Router.getRouterImplementation",
      "offset": [
        9056,
        9114
      ],
      "op": "EQ",
      "path": "24"
    },
    "2433": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8868,
        9114
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "2434": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8868,
        9191
      ],
      "op": "DUP1",
      "path": "24"
    },
    "2435": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8868,
        9191
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x99C"
    },
    "2438": {
      "branch": 72,
      "fn": "Router.getRouterImplementation",
      "offset": [
        8868,
        9191
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "2439": {
      "op": "POP"
    },
    "2440": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2442": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2444": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2446": {
      "op": "SHL"
    },
    "2447": {
      "op": "SUB"
    },
    "2448": {
      "op": "NOT"
    },
    "2449": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        9130,
        9191
      ],
      "op": "DUP3",
      "path": "24"
    },
    "2450": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        9130,
        9191
      ],
      "op": "AND",
      "path": "24"
    },
    "2451": {
      "op": "PUSH4",
      "value": "0x341305AB"
    },
    "2456": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "2458": {
      "op": "SHL"
    },
    "2459": {
      "branch": 73,
      "fn": "Router.getRouterImplementation",
      "offset": [
        9130,
        9191
      ],
      "op": "EQ",
      "path": "24"
    },
    "2460": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8868,
        9191
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "2461": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8868,
        9262
      ],
      "op": "DUP1",
      "path": "24"
    },
    "2462": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8868,
        9262
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x9B7"
    },
    "2465": {
      "branch": 73,
      "fn": "Router.getRouterImplementation",
      "offset": [
        8868,
        9262
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "2466": {
      "op": "POP"
    },
    "2467": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2469": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2471": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2473": {
      "op": "SHL"
    },
    "2474": {
      "op": "SUB"
    },
    "2475": {
      "op": "NOT"
    },
    "2476": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        9207,
        9262
      ],
      "op": "DUP3",
      "path": "24"
    },
    "2477": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        9207,
        9262
      ],
      "op": "AND",
      "path": "24"
    },
    "2478": {
      "op": "PUSH4",
      "value": "0xEE01436B"
    },
    "2483": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2485": {
      "op": "SHL"
    },
    "2486": {
      "branch": 74,
      "fn": "Router.getRouterImplementation",
      "offset": [
        9207,
        9262
      ],
      "op": "EQ",
      "path": "24"
    },
    "2487": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8868,
        9262
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "2488": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8868,
        9337
      ],
      "op": "DUP1",
      "path": "24"
    },
    "2489": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8868,
        9337
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x9D2"
    },
    "2492": {
      "branch": 74,
      "fn": "Router.getRouterImplementation",
      "offset": [
        8868,
        9337
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "2493": {
      "op": "POP"
    },
    "2494": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2496": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2498": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2500": {
      "op": "SHL"
    },
    "2501": {
      "op": "SUB"
    },
    "2502": {
      "op": "NOT"
    },
    "2503": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        9278,
        9337
      ],
      "op": "DUP3",
      "path": "24"
    },
    "2504": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        9278,
        9337
      ],
      "op": "AND",
      "path": "24"
    },
    "2505": {
      "op": "PUSH4",
      "value": "0x83E50FB7"
    },
    "2510": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2512": {
      "op": "SHL"
    },
    "2513": {
      "branch": 75,
      "fn": "Router.getRouterImplementation",
      "offset": [
        9278,
        9337
      ],
      "op": "EQ",
      "path": "24"
    },
    "2514": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8868,
        9337
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "2515": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8868,
        9413
      ],
      "op": "DUP1",
      "path": "24"
    },
    "2516": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8868,
        9413
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x9ED"
    },
    "2519": {
      "branch": 75,
      "fn": "Router.getRouterImplementation",
      "offset": [
        8868,
        9413
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "2520": {
      "op": "POP"
    },
    "2521": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2523": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2525": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2527": {
      "op": "SHL"
    },
    "2528": {
      "op": "SUB"
    },
    "2529": {
      "op": "NOT"
    },
    "2530": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        9353,
        9413
      ],
      "op": "DUP3",
      "path": "24"
    },
    "2531": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        9353,
        9413
      ],
      "op": "AND",
      "path": "24"
    },
    "2532": {
      "op": "PUSH4",
      "value": "0x6674BC3B"
    },
    "2537": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "2539": {
      "op": "SHL"
    },
    "2540": {
      "branch": 76,
      "fn": "Router.getRouterImplementation",
      "offset": [
        9353,
        9413
      ],
      "op": "EQ",
      "path": "24"
    },
    "2541": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8868,
        9413
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "2542": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8868,
        9469
      ],
      "op": "DUP1",
      "path": "24"
    },
    "2543": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8868,
        9469
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xA08"
    },
    "2546": {
      "branch": 76,
      "fn": "Router.getRouterImplementation",
      "offset": [
        8868,
        9469
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "2547": {
      "op": "POP"
    },
    "2548": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2550": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2552": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2554": {
      "op": "SHL"
    },
    "2555": {
      "op": "SUB"
    },
    "2556": {
      "op": "NOT"
    },
    "2557": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        9429,
        9469
      ],
      "op": "DUP3",
      "path": "24"
    },
    "2558": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        9429,
        9469
      ],
      "op": "AND",
      "path": "24"
    },
    "2559": {
      "op": "PUSH4",
      "value": "0x295E6B7F"
    },
    "2564": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2566": {
      "op": "SHL"
    },
    "2567": {
      "branch": 77,
      "fn": "Router.getRouterImplementation",
      "offset": [
        9429,
        9469
      ],
      "op": "EQ",
      "path": "24"
    },
    "2568": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8868,
        9469
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "2569": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8868,
        9528
      ],
      "op": "DUP1",
      "path": "24"
    },
    "2570": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8868,
        9528
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xA23"
    },
    "2573": {
      "branch": 77,
      "fn": "Router.getRouterImplementation",
      "offset": [
        8868,
        9528
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "2574": {
      "op": "POP"
    },
    "2575": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2577": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2579": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2581": {
      "op": "SHL"
    },
    "2582": {
      "op": "SUB"
    },
    "2583": {
      "op": "NOT"
    },
    "2584": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        9485,
        9528
      ],
      "op": "DUP3",
      "path": "24"
    },
    "2585": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        9485,
        9528
      ],
      "op": "AND",
      "path": "24"
    },
    "2586": {
      "op": "PUSH4",
      "value": "0xDE1EB9A3"
    },
    "2591": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2593": {
      "op": "SHL"
    },
    "2594": {
      "branch": 78,
      "fn": "Router.getRouterImplementation",
      "offset": [
        9485,
        9528
      ],
      "op": "EQ",
      "path": "24"
    },
    "2595": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8868,
        9528
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "2596": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8868,
        9590
      ],
      "op": "DUP1",
      "path": "24"
    },
    "2597": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8868,
        9590
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xA3E"
    },
    "2600": {
      "branch": 78,
      "fn": "Router.getRouterImplementation",
      "offset": [
        8868,
        9590
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "2601": {
      "op": "POP"
    },
    "2602": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2604": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2606": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2608": {
      "op": "SHL"
    },
    "2609": {
      "op": "SUB"
    },
    "2610": {
      "op": "NOT"
    },
    "2611": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        9544,
        9590
      ],
      "op": "DUP3",
      "path": "24"
    },
    "2612": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        9544,
        9590
      ],
      "op": "AND",
      "path": "24"
    },
    "2613": {
      "op": "PUSH4",
      "value": "0x33A8ABBB"
    },
    "2618": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "2620": {
      "op": "SHL"
    },
    "2621": {
      "branch": 79,
      "fn": "Router.getRouterImplementation",
      "offset": [
        9544,
        9590
      ],
      "op": "EQ",
      "path": "24"
    },
    "2622": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8868,
        9590
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "2623": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8868,
        9653
      ],
      "op": "DUP1",
      "path": "24"
    },
    "2624": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8868,
        9653
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xA59"
    },
    "2627": {
      "branch": 79,
      "fn": "Router.getRouterImplementation",
      "offset": [
        8868,
        9653
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "2628": {
      "op": "POP"
    },
    "2629": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2631": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2633": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2635": {
      "op": "SHL"
    },
    "2636": {
      "op": "SUB"
    },
    "2637": {
      "op": "NOT"
    },
    "2638": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        9606,
        9653
      ],
      "op": "DUP3",
      "path": "24"
    },
    "2639": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        9606,
        9653
      ],
      "op": "AND",
      "path": "24"
    },
    "2640": {
      "op": "PUSH4",
      "value": "0x28536D5F"
    },
    "2645": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "2647": {
      "op": "SHL"
    },
    "2648": {
      "branch": 80,
      "fn": "Router.getRouterImplementation",
      "offset": [
        9606,
        9653
      ],
      "op": "EQ",
      "path": "24"
    },
    "2649": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8868,
        9653
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "2650": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8868,
        9711
      ],
      "op": "DUP1",
      "path": "24"
    },
    "2651": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8868,
        9711
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xA74"
    },
    "2654": {
      "branch": 80,
      "fn": "Router.getRouterImplementation",
      "offset": [
        8868,
        9711
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "2655": {
      "op": "POP"
    },
    "2656": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2658": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2660": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2662": {
      "op": "SHL"
    },
    "2663": {
      "op": "SUB"
    },
    "2664": {
      "op": "NOT"
    },
    "2665": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        9669,
        9711
      ],
      "op": "DUP3",
      "path": "24"
    },
    "2666": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        9669,
        9711
      ],
      "op": "AND",
      "path": "24"
    },
    "2667": {
      "op": "PUSH4",
      "value": "0x31572281"
    },
    "2672": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2674": {
      "op": "SHL"
    },
    "2675": {
      "branch": 81,
      "fn": "Router.getRouterImplementation",
      "offset": [
        9669,
        9711
      ],
      "op": "EQ",
      "path": "24"
    },
    "2676": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8868,
        9711
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "2677": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8868,
        9779
      ],
      "op": "DUP1",
      "path": "24"
    },
    "2678": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8868,
        9779
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xA8F"
    },
    "2681": {
      "branch": 81,
      "fn": "Router.getRouterImplementation",
      "offset": [
        8868,
        9779
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "2682": {
      "op": "POP"
    },
    "2683": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2685": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2687": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2689": {
      "op": "SHL"
    },
    "2690": {
      "op": "SUB"
    },
    "2691": {
      "op": "NOT"
    },
    "2692": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        9727,
        9779
      ],
      "op": "DUP3",
      "path": "24"
    },
    "2693": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        9727,
        9779
      ],
      "op": "AND",
      "path": "24"
    },
    "2694": {
      "op": "PUSH4",
      "value": "0x6C346C09"
    },
    "2699": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2701": {
      "op": "SHL"
    },
    "2702": {
      "branch": 82,
      "fn": "Router.getRouterImplementation",
      "offset": [
        9727,
        9779
      ],
      "op": "EQ",
      "path": "24"
    },
    "2703": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8868,
        9779
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "2704": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8851,
        12847
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "2705": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8851,
        12847
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xABB"
    },
    "2708": {
      "branch": 82,
      "fn": "Router.getRouterImplementation",
      "offset": [
        8851,
        12847
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "2709": {
      "op": "POP"
    },
    "2710": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        9811,
        9823
      ],
      "op": "PUSH32",
      "path": "24",
      "statement": 8,
      "value": "0x0"
    },
    "2743": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        9804,
        9823
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xF3D"
    },
    "2746": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        9804,
        9823
      ],
      "op": "JUMP",
      "path": "24"
    },
    "2747": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8851,
        12847
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "2748": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2750": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2752": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2754": {
      "op": "SHL"
    },
    "2755": {
      "op": "SUB"
    },
    "2756": {
      "op": "NOT"
    },
    "2757": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        9857,
        9904
      ],
      "op": "DUP3",
      "path": "24"
    },
    "2758": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        9857,
        9904
      ],
      "op": "AND",
      "path": "24"
    },
    "2759": {
      "op": "PUSH4",
      "value": "0x3438193"
    },
    "2764": {
      "op": "PUSH1",
      "value": "0xE6"
    },
    "2766": {
      "op": "SHL"
    },
    "2767": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        9857,
        9904
      ],
      "op": "EQ",
      "path": "24"
    },
    "2768": {
      "branch": 83,
      "fn": "Router.getRouterImplementation",
      "offset": [
        9857,
        9904
      ],
      "op": "DUP1",
      "path": "24"
    },
    "2769": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        9857,
        9970
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xAEA"
    },
    "2772": {
      "branch": 83,
      "fn": "Router.getRouterImplementation",
      "offset": [
        9857,
        9970
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "2773": {
      "op": "POP"
    },
    "2774": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2776": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2778": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2780": {
      "op": "SHL"
    },
    "2781": {
      "op": "SUB"
    },
    "2782": {
      "op": "NOT"
    },
    "2783": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        9920,
        9970
      ],
      "op": "DUP3",
      "path": "24"
    },
    "2784": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        9920,
        9970
      ],
      "op": "AND",
      "path": "24"
    },
    "2785": {
      "op": "PUSH4",
      "value": "0x5DB6EAC7"
    },
    "2790": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "2792": {
      "op": "SHL"
    },
    "2793": {
      "branch": 84,
      "fn": "Router.getRouterImplementation",
      "offset": [
        9920,
        9970
      ],
      "op": "EQ",
      "path": "24"
    },
    "2794": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        9857,
        9970
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "2795": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        9840,
        12847
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "2796": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        9840,
        12847
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xB16"
    },
    "2799": {
      "branch": 84,
      "fn": "Router.getRouterImplementation",
      "offset": [
        9840,
        12847
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "2800": {
      "op": "POP"
    },
    "2801": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10002,
        10019
      ],
      "op": "PUSH32",
      "path": "24",
      "statement": 9,
      "value": "0x0"
    },
    "2834": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        9995,
        10019
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xF3D"
    },
    "2837": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        9995,
        10019
      ],
      "op": "JUMP",
      "path": "24"
    },
    "2838": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        9840,
        12847
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "2839": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2841": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2843": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2845": {
      "op": "SHL"
    },
    "2846": {
      "op": "SUB"
    },
    "2847": {
      "op": "NOT"
    },
    "2848": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10053,
        10100
      ],
      "op": "DUP3",
      "path": "24"
    },
    "2849": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10053,
        10100
      ],
      "op": "AND",
      "path": "24"
    },
    "2850": {
      "op": "PUSH4",
      "value": "0x7ABAF271"
    },
    "2855": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "2857": {
      "op": "SHL"
    },
    "2858": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10053,
        10100
      ],
      "op": "EQ",
      "path": "24"
    },
    "2859": {
      "branch": 85,
      "fn": "Router.getRouterImplementation",
      "offset": [
        10053,
        10100
      ],
      "op": "DUP1",
      "path": "24"
    },
    "2860": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10053,
        10166
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xB45"
    },
    "2863": {
      "branch": 85,
      "fn": "Router.getRouterImplementation",
      "offset": [
        10053,
        10166
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "2864": {
      "op": "POP"
    },
    "2865": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2867": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2869": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2871": {
      "op": "SHL"
    },
    "2872": {
      "op": "SUB"
    },
    "2873": {
      "op": "NOT"
    },
    "2874": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10116,
        10166
      ],
      "op": "DUP3",
      "path": "24"
    },
    "2875": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10116,
        10166
      ],
      "op": "AND",
      "path": "24"
    },
    "2876": {
      "op": "PUSH4",
      "value": "0xE31051A1"
    },
    "2881": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2883": {
      "op": "SHL"
    },
    "2884": {
      "branch": 86,
      "fn": "Router.getRouterImplementation",
      "offset": [
        10116,
        10166
      ],
      "op": "EQ",
      "path": "24"
    },
    "2885": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10053,
        10166
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "2886": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10053,
        10232
      ],
      "op": "DUP1",
      "path": "24"
    },
    "2887": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10053,
        10232
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xB60"
    },
    "2890": {
      "branch": 86,
      "fn": "Router.getRouterImplementation",
      "offset": [
        10053,
        10232
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "2891": {
      "op": "POP"
    },
    "2892": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2894": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2896": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2898": {
      "op": "SHL"
    },
    "2899": {
      "op": "SUB"
    },
    "2900": {
      "op": "NOT"
    },
    "2901": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10182,
        10232
      ],
      "op": "DUP3",
      "path": "24"
    },
    "2902": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10182,
        10232
      ],
      "op": "AND",
      "path": "24"
    },
    "2903": {
      "op": "PUSH4",
      "value": "0xA11A4293"
    },
    "2908": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2910": {
      "op": "SHL"
    },
    "2911": {
      "branch": 87,
      "fn": "Router.getRouterImplementation",
      "offset": [
        10182,
        10232
      ],
      "op": "EQ",
      "path": "24"
    },
    "2912": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10053,
        10232
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "2913": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10053,
        10298
      ],
      "op": "DUP1",
      "path": "24"
    },
    "2914": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10053,
        10298
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xB7B"
    },
    "2917": {
      "branch": 87,
      "fn": "Router.getRouterImplementation",
      "offset": [
        10053,
        10298
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "2918": {
      "op": "POP"
    },
    "2919": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2921": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2923": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2925": {
      "op": "SHL"
    },
    "2926": {
      "op": "SUB"
    },
    "2927": {
      "op": "NOT"
    },
    "2928": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10248,
        10298
      ],
      "op": "DUP3",
      "path": "24"
    },
    "2929": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10248,
        10298
      ],
      "op": "AND",
      "path": "24"
    },
    "2930": {
      "op": "PUSH4",
      "value": "0x5284765"
    },
    "2935": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2937": {
      "op": "SHL"
    },
    "2938": {
      "branch": 88,
      "fn": "Router.getRouterImplementation",
      "offset": [
        10248,
        10298
      ],
      "op": "EQ",
      "path": "24"
    },
    "2939": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10053,
        10298
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "2940": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10053,
        10362
      ],
      "op": "DUP1",
      "path": "24"
    },
    "2941": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10053,
        10362
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xB96"
    },
    "2944": {
      "branch": 88,
      "fn": "Router.getRouterImplementation",
      "offset": [
        10053,
        10362
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "2945": {
      "op": "POP"
    },
    "2946": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2948": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2950": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2952": {
      "op": "SHL"
    },
    "2953": {
      "op": "SUB"
    },
    "2954": {
      "op": "NOT"
    },
    "2955": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10314,
        10362
      ],
      "op": "DUP3",
      "path": "24"
    },
    "2956": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10314,
        10362
      ],
      "op": "AND",
      "path": "24"
    },
    "2957": {
      "op": "PUSH4",
      "value": "0x315CB2B9"
    },
    "2962": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "2964": {
      "op": "SHL"
    },
    "2965": {
      "branch": 89,
      "fn": "Router.getRouterImplementation",
      "offset": [
        10314,
        10362
      ],
      "op": "EQ",
      "path": "24"
    },
    "2966": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10053,
        10362
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "2967": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10053,
        10430
      ],
      "op": "DUP1",
      "path": "24"
    },
    "2968": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10053,
        10430
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xBB1"
    },
    "2971": {
      "branch": 89,
      "fn": "Router.getRouterImplementation",
      "offset": [
        10053,
        10430
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "2972": {
      "op": "POP"
    },
    "2973": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2975": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2977": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2979": {
      "op": "SHL"
    },
    "2980": {
      "op": "SUB"
    },
    "2981": {
      "op": "NOT"
    },
    "2982": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10378,
        10430
      ],
      "op": "DUP3",
      "path": "24"
    },
    "2983": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10378,
        10430
      ],
      "op": "AND",
      "path": "24"
    },
    "2984": {
      "op": "PUSH4",
      "value": "0x2C90B94D"
    },
    "2989": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "2991": {
      "op": "SHL"
    },
    "2992": {
      "branch": 90,
      "fn": "Router.getRouterImplementation",
      "offset": [
        10378,
        10430
      ],
      "op": "EQ",
      "path": "24"
    },
    "2993": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10053,
        10430
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "2994": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10053,
        10495
      ],
      "op": "DUP1",
      "path": "24"
    },
    "2995": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10053,
        10495
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xBCC"
    },
    "2998": {
      "branch": 90,
      "fn": "Router.getRouterImplementation",
      "offset": [
        10053,
        10495
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "2999": {
      "op": "POP"
    },
    "3000": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3002": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3004": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3006": {
      "op": "SHL"
    },
    "3007": {
      "op": "SUB"
    },
    "3008": {
      "op": "NOT"
    },
    "3009": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10446,
        10495
      ],
      "op": "DUP3",
      "path": "24"
    },
    "3010": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10446,
        10495
      ],
      "op": "AND",
      "path": "24"
    },
    "3011": {
      "op": "PUSH4",
      "value": "0x9CE3C19"
    },
    "3016": {
      "op": "PUSH1",
      "value": "0xE3"
    },
    "3018": {
      "op": "SHL"
    },
    "3019": {
      "branch": 91,
      "fn": "Router.getRouterImplementation",
      "offset": [
        10446,
        10495
      ],
      "op": "EQ",
      "path": "24"
    },
    "3020": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10053,
        10495
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "3021": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10053,
        10573
      ],
      "op": "DUP1",
      "path": "24"
    },
    "3022": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10053,
        10573
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xBE7"
    },
    "3025": {
      "branch": 91,
      "fn": "Router.getRouterImplementation",
      "offset": [
        10053,
        10573
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "3026": {
      "op": "POP"
    },
    "3027": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3029": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3031": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3033": {
      "op": "SHL"
    },
    "3034": {
      "op": "SUB"
    },
    "3035": {
      "op": "NOT"
    },
    "3036": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10511,
        10573
      ],
      "op": "DUP3",
      "path": "24"
    },
    "3037": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10511,
        10573
      ],
      "op": "AND",
      "path": "24"
    },
    "3038": {
      "op": "PUSH4",
      "value": "0x54EBDE29"
    },
    "3043": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "3045": {
      "op": "SHL"
    },
    "3046": {
      "branch": 92,
      "fn": "Router.getRouterImplementation",
      "offset": [
        10511,
        10573
      ],
      "op": "EQ",
      "path": "24"
    },
    "3047": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10053,
        10573
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "3048": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10053,
        10650
      ],
      "op": "DUP1",
      "path": "24"
    },
    "3049": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10053,
        10650
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xC02"
    },
    "3052": {
      "branch": 92,
      "fn": "Router.getRouterImplementation",
      "offset": [
        10053,
        10650
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "3053": {
      "op": "POP"
    },
    "3054": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3056": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3058": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3060": {
      "op": "SHL"
    },
    "3061": {
      "op": "SUB"
    },
    "3062": {
      "op": "NOT"
    },
    "3063": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10589,
        10650
      ],
      "op": "DUP3",
      "path": "24"
    },
    "3064": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10589,
        10650
      ],
      "op": "AND",
      "path": "24"
    },
    "3065": {
      "op": "PUSH4",
      "value": "0x98DCBC23"
    },
    "3070": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3072": {
      "op": "SHL"
    },
    "3073": {
      "branch": 93,
      "fn": "Router.getRouterImplementation",
      "offset": [
        10589,
        10650
      ],
      "op": "EQ",
      "path": "24"
    },
    "3074": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10053,
        10650
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "3075": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10053,
        10724
      ],
      "op": "DUP1",
      "path": "24"
    },
    "3076": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10053,
        10724
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xC1D"
    },
    "3079": {
      "branch": 93,
      "fn": "Router.getRouterImplementation",
      "offset": [
        10053,
        10724
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "3080": {
      "op": "POP"
    },
    "3081": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3083": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3085": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3087": {
      "op": "SHL"
    },
    "3088": {
      "op": "SUB"
    },
    "3089": {
      "op": "NOT"
    },
    "3090": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10666,
        10724
      ],
      "op": "DUP3",
      "path": "24"
    },
    "3091": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10666,
        10724
      ],
      "op": "AND",
      "path": "24"
    },
    "3092": {
      "op": "PUSH4",
      "value": "0x33EABD1D"
    },
    "3097": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "3099": {
      "op": "SHL"
    },
    "3100": {
      "branch": 94,
      "fn": "Router.getRouterImplementation",
      "offset": [
        10666,
        10724
      ],
      "op": "EQ",
      "path": "24"
    },
    "3101": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10053,
        10724
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "3102": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10053,
        10805
      ],
      "op": "DUP1",
      "path": "24"
    },
    "3103": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10053,
        10805
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xC38"
    },
    "3106": {
      "branch": 94,
      "fn": "Router.getRouterImplementation",
      "offset": [
        10053,
        10805
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "3107": {
      "op": "POP"
    },
    "3108": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3110": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3112": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3114": {
      "op": "SHL"
    },
    "3115": {
      "op": "SUB"
    },
    "3116": {
      "op": "NOT"
    },
    "3117": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10740,
        10805
      ],
      "op": "DUP3",
      "path": "24"
    },
    "3118": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10740,
        10805
      ],
      "op": "AND",
      "path": "24"
    },
    "3119": {
      "op": "PUSH4",
      "value": "0x413F2C5F"
    },
    "3124": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3126": {
      "op": "SHL"
    },
    "3127": {
      "branch": 95,
      "fn": "Router.getRouterImplementation",
      "offset": [
        10740,
        10805
      ],
      "op": "EQ",
      "path": "24"
    },
    "3128": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10053,
        10805
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "3129": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10053,
        10887
      ],
      "op": "DUP1",
      "path": "24"
    },
    "3130": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10053,
        10887
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xC53"
    },
    "3133": {
      "branch": 95,
      "fn": "Router.getRouterImplementation",
      "offset": [
        10053,
        10887
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "3134": {
      "op": "POP"
    },
    "3135": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3137": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3139": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3141": {
      "op": "SHL"
    },
    "3142": {
      "op": "SUB"
    },
    "3143": {
      "op": "NOT"
    },
    "3144": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10821,
        10887
      ],
      "op": "DUP3",
      "path": "24"
    },
    "3145": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10821,
        10887
      ],
      "op": "AND",
      "path": "24"
    },
    "3146": {
      "op": "PUSH4",
      "value": "0xD0DA867"
    },
    "3151": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "3153": {
      "op": "SHL"
    },
    "3154": {
      "branch": 96,
      "fn": "Router.getRouterImplementation",
      "offset": [
        10821,
        10887
      ],
      "op": "EQ",
      "path": "24"
    },
    "3155": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10053,
        10887
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "3156": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10053,
        10966
      ],
      "op": "DUP1",
      "path": "24"
    },
    "3157": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10053,
        10966
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xC6E"
    },
    "3160": {
      "branch": 96,
      "fn": "Router.getRouterImplementation",
      "offset": [
        10053,
        10966
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "3161": {
      "op": "POP"
    },
    "3162": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3164": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3166": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3168": {
      "op": "SHL"
    },
    "3169": {
      "op": "SUB"
    },
    "3170": {
      "op": "NOT"
    },
    "3171": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10903,
        10966
      ],
      "op": "DUP3",
      "path": "24"
    },
    "3172": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10903,
        10966
      ],
      "op": "AND",
      "path": "24"
    },
    "3173": {
      "op": "PUSH4",
      "value": "0x353ABC5D"
    },
    "3178": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3180": {
      "op": "SHL"
    },
    "3181": {
      "branch": 97,
      "fn": "Router.getRouterImplementation",
      "offset": [
        10903,
        10966
      ],
      "op": "EQ",
      "path": "24"
    },
    "3182": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10053,
        10966
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "3183": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10053,
        11049
      ],
      "op": "DUP1",
      "path": "24"
    },
    "3184": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10053,
        11049
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xC89"
    },
    "3187": {
      "branch": 97,
      "fn": "Router.getRouterImplementation",
      "offset": [
        10053,
        11049
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "3188": {
      "op": "POP"
    },
    "3189": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3191": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3193": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3195": {
      "op": "SHL"
    },
    "3196": {
      "op": "SUB"
    },
    "3197": {
      "op": "NOT"
    },
    "3198": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10982,
        11049
      ],
      "op": "DUP3",
      "path": "24"
    },
    "3199": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10982,
        11049
      ],
      "op": "AND",
      "path": "24"
    },
    "3200": {
      "op": "PUSH4",
      "value": "0xFA17B5F1"
    },
    "3205": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3207": {
      "op": "SHL"
    },
    "3208": {
      "branch": 98,
      "fn": "Router.getRouterImplementation",
      "offset": [
        10982,
        11049
      ],
      "op": "EQ",
      "path": "24"
    },
    "3209": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10053,
        11049
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "3210": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10053,
        11114
      ],
      "op": "DUP1",
      "path": "24"
    },
    "3211": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10053,
        11114
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xCA4"
    },
    "3214": {
      "branch": 98,
      "fn": "Router.getRouterImplementation",
      "offset": [
        10053,
        11114
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "3215": {
      "op": "POP"
    },
    "3216": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3218": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3220": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3222": {
      "op": "SHL"
    },
    "3223": {
      "op": "SUB"
    },
    "3224": {
      "op": "NOT"
    },
    "3225": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11065,
        11114
      ],
      "op": "DUP3",
      "path": "24"
    },
    "3226": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11065,
        11114
      ],
      "op": "AND",
      "path": "24"
    },
    "3227": {
      "op": "PUSH4",
      "value": "0x113AA8B1"
    },
    "3232": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3234": {
      "op": "SHL"
    },
    "3235": {
      "branch": 99,
      "fn": "Router.getRouterImplementation",
      "offset": [
        11065,
        11114
      ],
      "op": "EQ",
      "path": "24"
    },
    "3236": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10053,
        11114
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "3237": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10053,
        11184
      ],
      "op": "DUP1",
      "path": "24"
    },
    "3238": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10053,
        11184
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xCBE"
    },
    "3241": {
      "branch": 99,
      "fn": "Router.getRouterImplementation",
      "offset": [
        10053,
        11184
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "3242": {
      "op": "POP"
    },
    "3243": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3245": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3247": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3249": {
      "op": "SHL"
    },
    "3250": {
      "op": "SUB"
    },
    "3251": {
      "op": "NOT"
    },
    "3252": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11130,
        11184
      ],
      "op": "DUP3",
      "path": "24"
    },
    "3253": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11130,
        11184
      ],
      "op": "AND",
      "path": "24"
    },
    "3254": {
      "op": "PUSH3",
      "value": "0x474663"
    },
    "3258": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3260": {
      "op": "SHL"
    },
    "3261": {
      "branch": 100,
      "fn": "Router.getRouterImplementation",
      "offset": [
        11130,
        11184
      ],
      "op": "EQ",
      "path": "24"
    },
    "3262": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10053,
        11184
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "3263": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10053,
        11239
      ],
      "op": "DUP1",
      "path": "24"
    },
    "3264": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10053,
        11239
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xCD9"
    },
    "3267": {
      "branch": 100,
      "fn": "Router.getRouterImplementation",
      "offset": [
        10053,
        11239
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "3268": {
      "op": "POP"
    },
    "3269": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3271": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3273": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3275": {
      "op": "SHL"
    },
    "3276": {
      "op": "SUB"
    },
    "3277": {
      "op": "NOT"
    },
    "3278": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11200,
        11239
      ],
      "op": "DUP3",
      "path": "24"
    },
    "3279": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11200,
        11239
      ],
      "op": "AND",
      "path": "24"
    },
    "3280": {
      "op": "PUSH4",
      "value": "0x1B2CE7F3"
    },
    "3285": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "3287": {
      "op": "SHL"
    },
    "3288": {
      "branch": 101,
      "fn": "Router.getRouterImplementation",
      "offset": [
        11200,
        11239
      ],
      "op": "EQ",
      "path": "24"
    },
    "3289": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10053,
        11239
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "3290": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10053,
        11301
      ],
      "op": "DUP1",
      "path": "24"
    },
    "3291": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10053,
        11301
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xCF4"
    },
    "3294": {
      "branch": 101,
      "fn": "Router.getRouterImplementation",
      "offset": [
        10053,
        11301
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "3295": {
      "op": "POP"
    },
    "3296": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3298": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3300": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3302": {
      "op": "SHL"
    },
    "3303": {
      "op": "SUB"
    },
    "3304": {
      "op": "NOT"
    },
    "3305": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11255,
        11301
      ],
      "op": "DUP3",
      "path": "24"
    },
    "3306": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11255,
        11301
      ],
      "op": "AND",
      "path": "24"
    },
    "3307": {
      "op": "PUSH4",
      "value": "0x278F7943"
    },
    "3312": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "3314": {
      "op": "SHL"
    },
    "3315": {
      "branch": 102,
      "fn": "Router.getRouterImplementation",
      "offset": [
        11255,
        11301
      ],
      "op": "EQ",
      "path": "24"
    },
    "3316": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10053,
        11301
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "3317": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10036,
        12847
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "3318": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10036,
        12847
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xD20"
    },
    "3321": {
      "branch": 102,
      "fn": "Router.getRouterImplementation",
      "offset": [
        10036,
        12847
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "3322": {
      "op": "POP"
    },
    "3323": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11333,
        11343
      ],
      "op": "PUSH32",
      "path": "24",
      "statement": 10,
      "value": "0x0"
    },
    "3356": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11326,
        11343
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xF3D"
    },
    "3359": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11326,
        11343
      ],
      "op": "JUMP",
      "path": "24"
    },
    "3360": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10036,
        12847
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "3361": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3363": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3365": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3367": {
      "op": "SHL"
    },
    "3368": {
      "op": "SUB"
    },
    "3369": {
      "op": "NOT"
    },
    "3370": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11377,
        11430
      ],
      "op": "DUP3",
      "path": "24"
    },
    "3371": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11377,
        11430
      ],
      "op": "AND",
      "path": "24"
    },
    "3372": {
      "op": "PUSH4",
      "value": "0x7D6DBFF7"
    },
    "3377": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "3379": {
      "op": "SHL"
    },
    "3380": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11377,
        11430
      ],
      "op": "EQ",
      "path": "24"
    },
    "3381": {
      "branch": 103,
      "fn": "Router.getRouterImplementation",
      "offset": [
        11377,
        11430
      ],
      "op": "DUP1",
      "path": "24"
    },
    "3382": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11377,
        11504
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xD4F"
    },
    "3385": {
      "branch": 103,
      "fn": "Router.getRouterImplementation",
      "offset": [
        11377,
        11504
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "3386": {
      "op": "POP"
    },
    "3387": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3389": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3391": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3393": {
      "op": "SHL"
    },
    "3394": {
      "op": "SUB"
    },
    "3395": {
      "op": "NOT"
    },
    "3396": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11446,
        11504
      ],
      "op": "DUP3",
      "path": "24"
    },
    "3397": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11446,
        11504
      ],
      "op": "AND",
      "path": "24"
    },
    "3398": {
      "op": "PUSH4",
      "value": "0x6D7A00EB"
    },
    "3403": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3405": {
      "op": "SHL"
    },
    "3406": {
      "branch": 104,
      "fn": "Router.getRouterImplementation",
      "offset": [
        11446,
        11504
      ],
      "op": "EQ",
      "path": "24"
    },
    "3407": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11377,
        11504
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "3408": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11377,
        11571
      ],
      "op": "DUP1",
      "path": "24"
    },
    "3409": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11377,
        11571
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xD6A"
    },
    "3412": {
      "branch": 104,
      "fn": "Router.getRouterImplementation",
      "offset": [
        11377,
        11571
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "3413": {
      "op": "POP"
    },
    "3414": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3416": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3418": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3420": {
      "op": "SHL"
    },
    "3421": {
      "op": "SUB"
    },
    "3422": {
      "op": "NOT"
    },
    "3423": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11520,
        11571
      ],
      "op": "DUP3",
      "path": "24"
    },
    "3424": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11520,
        11571
      ],
      "op": "AND",
      "path": "24"
    },
    "3425": {
      "op": "PUSH4",
      "value": "0x7F23D4F9"
    },
    "3430": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "3432": {
      "op": "SHL"
    },
    "3433": {
      "branch": 105,
      "fn": "Router.getRouterImplementation",
      "offset": [
        11520,
        11571
      ],
      "op": "EQ",
      "path": "24"
    },
    "3434": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11377,
        11571
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "3435": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11377,
        11636
      ],
      "op": "DUP1",
      "path": "24"
    },
    "3436": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11377,
        11636
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xD85"
    },
    "3439": {
      "branch": 105,
      "fn": "Router.getRouterImplementation",
      "offset": [
        11377,
        11636
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "3440": {
      "op": "POP"
    },
    "3441": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3443": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3445": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3447": {
      "op": "SHL"
    },
    "3448": {
      "op": "SUB"
    },
    "3449": {
      "op": "NOT"
    },
    "3450": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11587,
        11636
      ],
      "op": "DUP3",
      "path": "24"
    },
    "3451": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11587,
        11636
      ],
      "op": "AND",
      "path": "24"
    },
    "3452": {
      "op": "PUSH4",
      "value": "0x239CEC8F"
    },
    "3457": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "3459": {
      "op": "SHL"
    },
    "3460": {
      "branch": 106,
      "fn": "Router.getRouterImplementation",
      "offset": [
        11587,
        11636
      ],
      "op": "EQ",
      "path": "24"
    },
    "3461": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11377,
        11636
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "3462": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11377,
        11706
      ],
      "op": "DUP1",
      "path": "24"
    },
    "3463": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11377,
        11706
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xDA0"
    },
    "3466": {
      "branch": 106,
      "fn": "Router.getRouterImplementation",
      "offset": [
        11377,
        11706
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "3467": {
      "op": "POP"
    },
    "3468": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3470": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3472": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3474": {
      "op": "SHL"
    },
    "3475": {
      "op": "SUB"
    },
    "3476": {
      "op": "NOT"
    },
    "3477": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11652,
        11706
      ],
      "op": "DUP3",
      "path": "24"
    },
    "3478": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11652,
        11706
      ],
      "op": "AND",
      "path": "24"
    },
    "3479": {
      "op": "PUSH4",
      "value": "0x12ADC47B"
    },
    "3484": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3486": {
      "op": "SHL"
    },
    "3487": {
      "branch": 107,
      "fn": "Router.getRouterImplementation",
      "offset": [
        11652,
        11706
      ],
      "op": "EQ",
      "path": "24"
    },
    "3488": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11377,
        11706
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "3489": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11360,
        12847
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "3490": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11360,
        12847
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xDCC"
    },
    "3493": {
      "branch": 107,
      "fn": "Router.getRouterImplementation",
      "offset": [
        11360,
        12847
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "3494": {
      "op": "POP"
    },
    "3495": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11738,
        11746
      ],
      "op": "PUSH32",
      "path": "24",
      "statement": 11,
      "value": "0x0"
    },
    "3528": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11731,
        11746
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xF3D"
    },
    "3531": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11731,
        11746
      ],
      "op": "JUMP",
      "path": "24"
    },
    "3532": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11360,
        12847
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "3533": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3535": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3537": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3539": {
      "op": "SHL"
    },
    "3540": {
      "op": "SUB"
    },
    "3541": {
      "op": "NOT"
    },
    "3542": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11780,
        11839
      ],
      "op": "DUP3",
      "path": "24"
    },
    "3543": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11780,
        11839
      ],
      "op": "AND",
      "path": "24"
    },
    "3544": {
      "op": "PUSH4",
      "value": "0x6A09A2A3"
    },
    "3549": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3551": {
      "op": "SHL"
    },
    "3552": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11780,
        11839
      ],
      "op": "EQ",
      "path": "24"
    },
    "3553": {
      "branch": 108,
      "fn": "Router.getRouterImplementation",
      "offset": [
        11780,
        11839
      ],
      "op": "DUP1",
      "path": "24"
    },
    "3554": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11780,
        11921
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xDFB"
    },
    "3557": {
      "branch": 108,
      "fn": "Router.getRouterImplementation",
      "offset": [
        11780,
        11921
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "3558": {
      "op": "POP"
    },
    "3559": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3561": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3563": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3565": {
      "op": "SHL"
    },
    "3566": {
      "op": "SUB"
    },
    "3567": {
      "op": "NOT"
    },
    "3568": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11855,
        11921
      ],
      "op": "DUP3",
      "path": "24"
    },
    "3569": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11855,
        11921
      ],
      "op": "AND",
      "path": "24"
    },
    "3570": {
      "op": "PUSH4",
      "value": "0x8355E895"
    },
    "3575": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3577": {
      "op": "SHL"
    },
    "3578": {
      "branch": 109,
      "fn": "Router.getRouterImplementation",
      "offset": [
        11855,
        11921
      ],
      "op": "EQ",
      "path": "24"
    },
    "3579": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11780,
        11921
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "3580": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11780,
        12003
      ],
      "op": "DUP1",
      "path": "24"
    },
    "3581": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11780,
        12003
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xE16"
    },
    "3584": {
      "branch": 109,
      "fn": "Router.getRouterImplementation",
      "offset": [
        11780,
        12003
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "3585": {
      "op": "POP"
    },
    "3586": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3588": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3590": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3592": {
      "op": "SHL"
    },
    "3593": {
      "op": "SUB"
    },
    "3594": {
      "op": "NOT"
    },
    "3595": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11937,
        12003
      ],
      "op": "DUP3",
      "path": "24"
    },
    "3596": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11937,
        12003
      ],
      "op": "AND",
      "path": "24"
    },
    "3597": {
      "op": "PUSH4",
      "value": "0x94614DF"
    },
    "3602": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3604": {
      "op": "SHL"
    },
    "3605": {
      "branch": 110,
      "fn": "Router.getRouterImplementation",
      "offset": [
        11937,
        12003
      ],
      "op": "EQ",
      "path": "24"
    },
    "3606": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11780,
        12003
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "3607": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11780,
        12084
      ],
      "op": "DUP1",
      "path": "24"
    },
    "3608": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11780,
        12084
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xE31"
    },
    "3611": {
      "branch": 110,
      "fn": "Router.getRouterImplementation",
      "offset": [
        11780,
        12084
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "3612": {
      "op": "POP"
    },
    "3613": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3615": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3617": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3619": {
      "op": "SHL"
    },
    "3620": {
      "op": "SUB"
    },
    "3621": {
      "op": "NOT"
    },
    "3622": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        12019,
        12084
      ],
      "op": "DUP3",
      "path": "24"
    },
    "3623": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        12019,
        12084
      ],
      "op": "AND",
      "path": "24"
    },
    "3624": {
      "op": "PUSH4",
      "value": "0x4BEB6D97"
    },
    "3629": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "3631": {
      "op": "SHL"
    },
    "3632": {
      "branch": 111,
      "fn": "Router.getRouterImplementation",
      "offset": [
        12019,
        12084
      ],
      "op": "EQ",
      "path": "24"
    },
    "3633": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11780,
        12084
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "3634": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11780,
        12157
      ],
      "op": "DUP1",
      "path": "24"
    },
    "3635": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11780,
        12157
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xE4C"
    },
    "3638": {
      "branch": 111,
      "fn": "Router.getRouterImplementation",
      "offset": [
        11780,
        12157
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "3639": {
      "op": "POP"
    },
    "3640": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3642": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3644": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3646": {
      "op": "SHL"
    },
    "3647": {
      "op": "SUB"
    },
    "3648": {
      "op": "NOT"
    },
    "3649": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        12100,
        12157
      ],
      "op": "DUP3",
      "path": "24"
    },
    "3650": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        12100,
        12157
      ],
      "op": "AND",
      "path": "24"
    },
    "3651": {
      "op": "PUSH4",
      "value": "0xC52C43E1"
    },
    "3656": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3658": {
      "op": "SHL"
    },
    "3659": {
      "branch": 112,
      "fn": "Router.getRouterImplementation",
      "offset": [
        12100,
        12157
      ],
      "op": "EQ",
      "path": "24"
    },
    "3660": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11780,
        12157
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "3661": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11780,
        12224
      ],
      "op": "DUP1",
      "path": "24"
    },
    "3662": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11780,
        12224
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xE67"
    },
    "3665": {
      "branch": 112,
      "fn": "Router.getRouterImplementation",
      "offset": [
        11780,
        12224
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "3666": {
      "op": "POP"
    },
    "3667": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3669": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3671": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3673": {
      "op": "SHL"
    },
    "3674": {
      "op": "SUB"
    },
    "3675": {
      "op": "NOT"
    },
    "3676": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        12173,
        12224
      ],
      "op": "DUP3",
      "path": "24"
    },
    "3677": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        12173,
        12224
      ],
      "op": "AND",
      "path": "24"
    },
    "3678": {
      "op": "PUSH4",
      "value": "0x5953C77B"
    },
    "3683": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3685": {
      "op": "SHL"
    },
    "3686": {
      "branch": 113,
      "fn": "Router.getRouterImplementation",
      "offset": [
        12173,
        12224
      ],
      "op": "EQ",
      "path": "24"
    },
    "3687": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11780,
        12224
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "3688": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11780,
        12300
      ],
      "op": "DUP1",
      "path": "24"
    },
    "3689": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11780,
        12300
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xE82"
    },
    "3692": {
      "branch": 113,
      "fn": "Router.getRouterImplementation",
      "offset": [
        11780,
        12300
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "3693": {
      "op": "POP"
    },
    "3694": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3696": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3698": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3700": {
      "op": "SHL"
    },
    "3701": {
      "op": "SUB"
    },
    "3702": {
      "op": "NOT"
    },
    "3703": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        12240,
        12300
      ],
      "op": "DUP3",
      "path": "24"
    },
    "3704": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        12240,
        12300
      ],
      "op": "AND",
      "path": "24"
    },
    "3705": {
      "op": "PUSH4",
      "value": "0x1F0750C1"
    },
    "3710": {
      "op": "PUSH1",
      "value": "0xE3"
    },
    "3712": {
      "op": "SHL"
    },
    "3713": {
      "branch": 114,
      "fn": "Router.getRouterImplementation",
      "offset": [
        12240,
        12300
      ],
      "op": "EQ",
      "path": "24"
    },
    "3714": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11780,
        12300
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "3715": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11780,
        12380
      ],
      "op": "DUP1",
      "path": "24"
    },
    "3716": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11780,
        12380
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xE9D"
    },
    "3719": {
      "branch": 114,
      "fn": "Router.getRouterImplementation",
      "offset": [
        11780,
        12380
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "3720": {
      "op": "POP"
    },
    "3721": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3723": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3725": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3727": {
      "op": "SHL"
    },
    "3728": {
      "op": "SUB"
    },
    "3729": {
      "op": "NOT"
    },
    "3730": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        12316,
        12380
      ],
      "op": "DUP3",
      "path": "24"
    },
    "3731": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        12316,
        12380
      ],
      "op": "AND",
      "path": "24"
    },
    "3732": {
      "op": "PUSH4",
      "value": "0xBAC9E8B1"
    },
    "3737": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3739": {
      "op": "SHL"
    },
    "3740": {
      "branch": 115,
      "fn": "Router.getRouterImplementation",
      "offset": [
        12316,
        12380
      ],
      "op": "EQ",
      "path": "24"
    },
    "3741": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11780,
        12380
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "3742": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11780,
        12456
      ],
      "op": "DUP1",
      "path": "24"
    },
    "3743": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11780,
        12456
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xEB8"
    },
    "3746": {
      "branch": 115,
      "fn": "Router.getRouterImplementation",
      "offset": [
        11780,
        12456
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "3747": {
      "op": "POP"
    },
    "3748": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3750": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3752": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3754": {
      "op": "SHL"
    },
    "3755": {
      "op": "SUB"
    },
    "3756": {
      "op": "NOT"
    },
    "3757": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        12396,
        12456
      ],
      "op": "DUP3",
      "path": "24"
    },
    "3758": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        12396,
        12456
      ],
      "op": "AND",
      "path": "24"
    },
    "3759": {
      "op": "PUSH4",
      "value": "0xAAAE47B5"
    },
    "3764": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3766": {
      "op": "SHL"
    },
    "3767": {
      "branch": 116,
      "fn": "Router.getRouterImplementation",
      "offset": [
        12396,
        12456
      ],
      "op": "EQ",
      "path": "24"
    },
    "3768": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11780,
        12456
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "3769": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11780,
        12536
      ],
      "op": "DUP1",
      "path": "24"
    },
    "3770": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11780,
        12536
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xED3"
    },
    "3773": {
      "branch": 116,
      "fn": "Router.getRouterImplementation",
      "offset": [
        11780,
        12536
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "3774": {
      "op": "POP"
    },
    "3775": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3777": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3779": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3781": {
      "op": "SHL"
    },
    "3782": {
      "op": "SUB"
    },
    "3783": {
      "op": "NOT"
    },
    "3784": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        12472,
        12536
      ],
      "op": "DUP3",
      "path": "24"
    },
    "3785": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        12472,
        12536
      ],
      "op": "AND",
      "path": "24"
    },
    "3786": {
      "op": "PUSH4",
      "value": "0x416A1587"
    },
    "3791": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3793": {
      "op": "SHL"
    },
    "3794": {
      "branch": 117,
      "fn": "Router.getRouterImplementation",
      "offset": [
        12472,
        12536
      ],
      "op": "EQ",
      "path": "24"
    },
    "3795": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11780,
        12536
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "3796": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11780,
        12617
      ],
      "op": "DUP1",
      "path": "24"
    },
    "3797": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11780,
        12617
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xEEE"
    },
    "3800": {
      "branch": 117,
      "fn": "Router.getRouterImplementation",
      "offset": [
        11780,
        12617
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "3801": {
      "op": "POP"
    },
    "3802": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3804": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3806": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3808": {
      "op": "SHL"
    },
    "3809": {
      "op": "SUB"
    },
    "3810": {
      "op": "NOT"
    },
    "3811": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        12552,
        12617
      ],
      "op": "DUP3",
      "path": "24"
    },
    "3812": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        12552,
        12617
      ],
      "op": "AND",
      "path": "24"
    },
    "3813": {
      "op": "PUSH4",
      "value": "0x1BAEFC5D"
    },
    "3818": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "3820": {
      "op": "SHL"
    },
    "3821": {
      "branch": 118,
      "fn": "Router.getRouterImplementation",
      "offset": [
        12552,
        12617
      ],
      "op": "EQ",
      "path": "24"
    },
    "3822": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11780,
        12617
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "3823": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11763,
        12847
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "3824": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11763,
        12847
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xF1A"
    },
    "3827": {
      "branch": 118,
      "fn": "Router.getRouterImplementation",
      "offset": [
        11763,
        12847
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "3828": {
      "op": "POP"
    },
    "3829": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        12649,
        12666
      ],
      "op": "PUSH32",
      "path": "24",
      "statement": 12,
      "value": "0x0"
    },
    "3862": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        12642,
        12666
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xF3D"
    },
    "3865": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        12642,
        12666
      ],
      "op": "JUMP",
      "path": "24"
    },
    "3866": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11763,
        12847
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "3867": {
      "op": "POP"
    },
    "3868": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        12831,
        12836
      ],
      "op": "PUSH32",
      "path": "24",
      "statement": 13,
      "value": "0x0"
    },
    "3901": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11763,
        12847
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "3902": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        4969,
        12853
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "3903": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        4969,
        12853
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3904": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        4969,
        12853
      ],
      "op": "POP",
      "path": "24"
    },
    "3905": {
      "fn": "Router.getRouterImplementation",
      "jump": "o",
      "offset": [
        4969,
        12853
      ],
      "op": "JUMP",
      "path": "24"
    },
    "3906": {
      "fn": "Router._delegate",
      "offset": [
        13033,
        14003
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "3907": {
      "fn": "Router._delegate",
      "offset": [
        13418,
        13432
      ],
      "op": "CALLDATASIZE",
      "path": "24"
    },
    "3908": {
      "fn": "Router._delegate",
      "offset": [
        13415,
        13416
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "3910": {
      "fn": "Router._delegate",
      "offset": [
        13412,
        13413
      ],
      "op": "DUP1",
      "path": "24"
    },
    "3911": {
      "fn": "Router._delegate",
      "offset": [
        13399,
        13433
      ],
      "op": "CALLDATACOPY",
      "path": "24"
    },
    "3912": {
      "fn": "Router._delegate",
      "offset": [
        13632,
        13633
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "3914": {
      "fn": "Router._delegate",
      "offset": [
        13629,
        13630
      ],
      "op": "DUP1",
      "path": "24"
    },
    "3915": {
      "fn": "Router._delegate",
      "offset": [
        13613,
        13627
      ],
      "op": "CALLDATASIZE",
      "path": "24"
    },
    "3916": {
      "fn": "Router._delegate",
      "offset": [
        13610,
        13611
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "3918": {
      "fn": "Router._delegate",
      "offset": [
        13594,
        13608
      ],
      "op": "DUP5",
      "path": "24"
    },
    "3919": {
      "fn": "Router._delegate",
      "offset": [
        13587,
        13592
      ],
      "op": "GAS",
      "path": "24"
    },
    "3920": {
      "fn": "Router._delegate",
      "offset": [
        13574,
        13634
      ],
      "op": "DELEGATECALL",
      "path": "24"
    },
    "3921": {
      "fn": "Router._delegate",
      "offset": [
        13708,
        13724
      ],
      "op": "RETURNDATASIZE",
      "path": "24"
    },
    "3922": {
      "fn": "Router._delegate",
      "offset": [
        13705,
        13706
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "3924": {
      "fn": "Router._delegate",
      "offset": [
        13702,
        13703
      ],
      "op": "DUP1",
      "path": "24"
    },
    "3925": {
      "fn": "Router._delegate",
      "offset": [
        13687,
        13725
      ],
      "op": "RETURNDATACOPY",
      "path": "24"
    },
    "3926": {
      "fn": "Router._delegate",
      "offset": [
        13746,
        13752
      ],
      "op": "DUP1",
      "path": "24"
    },
    "3927": {
      "fn": "Router._delegate",
      "offset": [
        13821,
        13895
      ],
      "op": "DUP1",
      "path": "24"
    },
    "3928": {
      "fn": "Router._delegate",
      "offset": [
        13821,
        13895
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "3929": {
      "fn": "Router._delegate",
      "offset": [
        13821,
        13895
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xF61"
    },
    "3932": {
      "fn": "Router._delegate",
      "offset": [
        13821,
        13895
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "3933": {
      "fn": "Router._delegate",
      "offset": [
        13952,
        13968
      ],
      "op": "RETURNDATASIZE",
      "path": "24"
    },
    "3934": {
      "fn": "Router._delegate",
      "offset": [
        13949,
        13950
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "3936": {
      "fn": "Router._delegate",
      "offset": [
        13942,
        13969
      ],
      "op": "RETURN",
      "path": "24"
    },
    "3937": {
      "fn": "Router._delegate",
      "offset": [
        13821,
        13895
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "3938": {
      "fn": "Router._delegate",
      "offset": [
        13860,
        13876
      ],
      "op": "RETURNDATASIZE",
      "path": "24"
    },
    "3939": {
      "fn": "Router._delegate",
      "offset": [
        13857,
        13858
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "3941": {
      "fn": "Router._delegate",
      "offset": [
        13850,
        13877
      ],
      "op": "REVERT",
      "path": "24"
    },
    "3942": {
      "offset": [
        1431,
        1461
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "3943": {
      "fn": "Router._delegate",
      "offset": [
        1431,
        1461
      ],
      "op": "PUSH32",
      "path": "24",
      "value": "0x0"
    },
    "3976": {
      "fn": "Router._delegate",
      "offset": [
        1431,
        1461
      ],
      "op": "DUP2",
      "path": "24"
    },
    "3977": {
      "fn": "Router._delegate",
      "jump": "o",
      "offset": [
        1431,
        1461
      ],
      "op": "JUMP",
      "path": "24"
    },
    "3978": {
      "offset": [
        1390,
        1425
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "3979": {
      "fn": "Router._delegate",
      "offset": [
        1390,
        1425
      ],
      "op": "PUSH32",
      "path": "24",
      "value": "0x0"
    },
    "4012": {
      "fn": "Router._delegate",
      "offset": [
        1390,
        1425
      ],
      "op": "DUP2",
      "path": "24"
    },
    "4013": {
      "fn": "Router._delegate",
      "jump": "o",
      "offset": [
        1390,
        1425
      ],
      "op": "JUMP",
      "path": "24"
    },
    "4014": {
      "offset": [
        1515,
        1554
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "4015": {
      "fn": "Router._delegate",
      "offset": [
        1515,
        1554
      ],
      "op": "PUSH32",
      "path": "24",
      "value": "0x0"
    },
    "4048": {
      "fn": "Router._delegate",
      "offset": [
        1515,
        1554
      ],
      "op": "DUP2",
      "path": "24"
    },
    "4049": {
      "fn": "Router._delegate",
      "jump": "o",
      "offset": [
        1515,
        1554
      ],
      "op": "JUMP",
      "path": "24"
    },
    "4050": {
      "offset": [
        1735,
        1775
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "4051": {
      "fn": "Router._delegate",
      "offset": [
        1735,
        1775
      ],
      "op": "PUSH32",
      "path": "24",
      "value": "0x0"
    },
    "4084": {
      "fn": "Router._delegate",
      "offset": [
        1735,
        1775
      ],
      "op": "DUP2",
      "path": "24"
    },
    "4085": {
      "fn": "Router._delegate",
      "jump": "o",
      "offset": [
        1735,
        1775
      ],
      "op": "JUMP",
      "path": "24"
    },
    "4086": {
      "offset": [
        1035,
        1063
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "4087": {
      "fn": "Router._delegate",
      "offset": [
        1035,
        1063
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x2"
    },
    "4089": {
      "fn": "Router._delegate",
      "offset": [
        1035,
        1063
      ],
      "op": "SLOAD",
      "path": "66"
    },
    "4090": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4092": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4094": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4096": {
      "op": "SHL"
    },
    "4097": {
      "op": "SUB"
    },
    "4098": {
      "offset": [
        1035,
        1063
      ],
      "op": "AND",
      "path": "66"
    },
    "4099": {
      "fn": "Router._delegate",
      "offset": [
        1035,
        1063
      ],
      "op": "DUP2",
      "path": "66"
    },
    "4100": {
      "fn": "Router._delegate",
      "jump": "o",
      "offset": [
        1035,
        1063
      ],
      "op": "JUMP",
      "path": "66"
    },
    "4101": {
      "offset": [
        1686,
        1729
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "4102": {
      "fn": "Router._delegate",
      "offset": [
        1686,
        1729
      ],
      "op": "PUSH32",
      "path": "24",
      "value": "0x0"
    },
    "4135": {
      "fn": "Router._delegate",
      "offset": [
        1686,
        1729
      ],
      "op": "DUP2",
      "path": "24"
    },
    "4136": {
      "fn": "Router._delegate",
      "jump": "o",
      "offset": [
        1686,
        1729
      ],
      "op": "JUMP",
      "path": "24"
    },
    "4137": {
      "offset": [
        1648,
        1680
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "4138": {
      "fn": "Router._delegate",
      "offset": [
        1648,
        1680
      ],
      "op": "PUSH32",
      "path": "24",
      "value": "0x0"
    },
    "4171": {
      "fn": "Router._delegate",
      "offset": [
        1648,
        1680
      ],
      "op": "DUP2",
      "path": "24"
    },
    "4172": {
      "fn": "Router._delegate",
      "jump": "o",
      "offset": [
        1648,
        1680
      ],
      "op": "JUMP",
      "path": "24"
    },
    "4173": {
      "offset": [
        1816,
        1849
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "4174": {
      "fn": "Router._delegate",
      "offset": [
        1816,
        1849
      ],
      "op": "PUSH32",
      "path": "24",
      "value": "0x0"
    },
    "4207": {
      "fn": "Router._delegate",
      "offset": [
        1816,
        1849
      ],
      "op": "DUP2",
      "path": "24"
    },
    "4208": {
      "fn": "Router._delegate",
      "jump": "o",
      "offset": [
        1816,
        1849
      ],
      "op": "JUMP",
      "path": "24"
    },
    "4209": {
      "offset": [
        1603,
        1642
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "4210": {
      "fn": "Router._delegate",
      "offset": [
        1603,
        1642
      ],
      "op": "PUSH32",
      "path": "24",
      "value": "0x0"
    },
    "4243": {
      "fn": "Router._delegate",
      "offset": [
        1603,
        1642
      ],
      "op": "DUP2",
      "path": "24"
    },
    "4244": {
      "fn": "Router._delegate",
      "jump": "o",
      "offset": [
        1603,
        1642
      ],
      "op": "JUMP",
      "path": "24"
    },
    "4245": {
      "offset": [
        1560,
        1597
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "4246": {
      "fn": "Router._delegate",
      "offset": [
        1560,
        1597
      ],
      "op": "PUSH32",
      "path": "24",
      "value": "0x0"
    },
    "4279": {
      "fn": "Router._delegate",
      "offset": [
        1560,
        1597
      ],
      "op": "DUP2",
      "path": "24"
    },
    "4280": {
      "fn": "Router._delegate",
      "jump": "o",
      "offset": [
        1560,
        1597
      ],
      "op": "JUMP",
      "path": "24"
    },
    "4281": {
      "offset": [
        1855,
        1897
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "4282": {
      "fn": "Router._delegate",
      "offset": [
        1855,
        1897
      ],
      "op": "PUSH32",
      "path": "24",
      "value": "0x0"
    },
    "4315": {
      "fn": "Router._delegate",
      "offset": [
        1855,
        1897
      ],
      "op": "DUP2",
      "path": "24"
    },
    "4316": {
      "fn": "Router._delegate",
      "jump": "o",
      "offset": [
        1855,
        1897
      ],
      "op": "JUMP",
      "path": "24"
    },
    "4317": {
      "offset": [
        920,
        946
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "4318": {
      "fn": "Router._delegate",
      "offset": [
        920,
        946
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x1"
    },
    "4320": {
      "fn": "Router._delegate",
      "offset": [
        920,
        946
      ],
      "op": "SLOAD",
      "path": "66"
    },
    "4321": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4323": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4325": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4327": {
      "op": "SHL"
    },
    "4328": {
      "op": "SUB"
    },
    "4329": {
      "offset": [
        920,
        946
      ],
      "op": "AND",
      "path": "66"
    },
    "4330": {
      "fn": "Router._delegate",
      "offset": [
        920,
        946
      ],
      "op": "DUP2",
      "path": "66"
    },
    "4331": {
      "fn": "Router._delegate",
      "jump": "o",
      "offset": [
        920,
        946
      ],
      "op": "JUMP",
      "path": "66"
    },
    "4332": {
      "offset": [
        811,
        831
      ],
      "op": "JUMPDEST",
      "path": "66"
    },
    "4333": {
      "fn": "Router._delegate",
      "offset": [
        811,
        831
      ],
      "op": "PUSH1",
      "path": "66",
      "value": "0x0"
    },
    "4335": {
      "fn": "Router._delegate",
      "offset": [
        811,
        831
      ],
      "op": "SLOAD",
      "path": "66"
    },
    "4336": {
      "fn": "Router._delegate",
      "offset": [
        811,
        831
      ],
      "op": "PUSH5",
      "path": "66",
      "value": "0x100000000"
    },
    "4342": {
      "fn": "Router._delegate",
      "offset": [
        811,
        831
      ],
      "op": "SWAP1",
      "path": "66"
    },
    "4343": {
      "fn": "Router._delegate",
      "offset": [
        811,
        831
      ],
      "op": "DIV",
      "path": "66"
    },
    "4344": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4346": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4348": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4350": {
      "op": "SHL"
    },
    "4351": {
      "op": "SUB"
    },
    "4352": {
      "offset": [
        811,
        831
      ],
      "op": "AND",
      "path": "66"
    },
    "4353": {
      "fn": "Router._delegate",
      "offset": [
        811,
        831
      ],
      "op": "DUP2",
      "path": "66"
    },
    "4354": {
      "fn": "Router._delegate",
      "jump": "o",
      "offset": [
        811,
        831
      ],
      "op": "JUMP",
      "path": "66"
    },
    "4355": {
      "offset": [
        1781,
        1810
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "4356": {
      "fn": "Router._delegate",
      "offset": [
        1781,
        1810
      ],
      "op": "PUSH32",
      "path": "24",
      "value": "0x0"
    },
    "4389": {
      "fn": "Router._delegate",
      "offset": [
        1781,
        1810
      ],
      "op": "DUP2",
      "path": "24"
    },
    "4390": {
      "fn": "Router._delegate",
      "jump": "o",
      "offset": [
        1781,
        1810
      ],
      "op": "JUMP",
      "path": "24"
    },
    "4391": {
      "offset": [
        1903,
        1948
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "4392": {
      "fn": "Router._delegate",
      "offset": [
        1903,
        1948
      ],
      "op": "PUSH32",
      "path": "24",
      "value": "0x0"
    },
    "4425": {
      "fn": "Router._delegate",
      "offset": [
        1903,
        1948
      ],
      "op": "DUP2",
      "path": "24"
    },
    "4426": {
      "fn": "Router._delegate",
      "jump": "o",
      "offset": [
        1903,
        1948
      ],
      "op": "JUMP",
      "path": "24"
    },
    "4427": {
      "fn": "Router.initialize",
      "offset": [
        3377,
        4803
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "4428": {
      "fn": "Router.initialize",
      "offset": [
        3539,
        3549
      ],
      "op": "CALLER",
      "path": "24",
      "statement": 14
    },
    "4429": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4431": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4433": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4435": {
      "op": "SHL"
    },
    "4436": {
      "op": "SUB"
    },
    "4437": {
      "fn": "Router.initialize",
      "offset": [
        3553,
        3561
      ],
      "op": "PUSH32",
      "path": "24",
      "value": "0x0"
    },
    "4470": {
      "fn": "Router.initialize",
      "offset": [
        3539,
        3561
      ],
      "op": "AND",
      "path": "24"
    },
    "4471": {
      "branch": 119,
      "fn": "Router.initialize",
      "offset": [
        3539,
        3561
      ],
      "op": "EQ",
      "path": "24"
    },
    "4472": {
      "fn": "Router.initialize",
      "offset": [
        3539,
        3580
      ],
      "op": "DUP1",
      "path": "24"
    },
    "4473": {
      "fn": "Router.initialize",
      "offset": [
        3539,
        3580
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "4474": {
      "fn": "Router.initialize",
      "offset": [
        3539,
        3580
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x118D"
    },
    "4477": {
      "branch": 119,
      "fn": "Router.initialize",
      "offset": [
        3539,
        3580
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "4478": {
      "op": "POP"
    },
    "4479": {
      "fn": "Router.initialize",
      "offset": [
        3566,
        3580
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "4481": {
      "fn": "Router.initialize",
      "offset": [
        3566,
        3580
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "4482": {
      "fn": "Router.initialize",
      "offset": [
        3566,
        3580
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x1000000"
    },
    "4487": {
      "fn": "Router.initialize",
      "offset": [
        3566,
        3580
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "4488": {
      "fn": "Router.initialize",
      "offset": [
        3566,
        3580
      ],
      "op": "DIV",
      "path": "24"
    },
    "4489": {
      "fn": "Router.initialize",
      "offset": [
        3566,
        3580
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0xFF"
    },
    "4491": {
      "branch": 120,
      "fn": "Router.initialize",
      "offset": [
        3566,
        3580
      ],
      "op": "AND",
      "path": "24"
    },
    "4492": {
      "fn": "Router.initialize",
      "offset": [
        3565,
        3580
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "4493": {
      "fn": "Router.initialize",
      "offset": [
        3539,
        3580
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "4494": {
      "fn": "Router.initialize",
      "offset": [
        3531,
        3581
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1196"
    },
    "4497": {
      "branch": 120,
      "fn": "Router.initialize",
      "offset": [
        3531,
        3581
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "4498": {
      "fn": "Router.initialize",
      "offset": [
        3531,
        3581
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "4500": {
      "fn": "Router.initialize",
      "offset": [
        3531,
        3581
      ],
      "op": "DUP1",
      "path": "24"
    },
    "4501": {
      "fn": "Router.initialize",
      "offset": [
        3531,
        3581
      ],
      "op": "REVERT",
      "path": "24"
    },
    "4502": {
      "fn": "Router.initialize",
      "offset": [
        3531,
        3581
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "4503": {
      "fn": "Router.initialize",
      "offset": [
        3715,
        3720
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 15,
      "value": "0x0"
    },
    "4505": {
      "fn": "Router.initialize",
      "offset": [
        3715,
        3733
      ],
      "op": "DUP1",
      "path": "24"
    },
    "4506": {
      "fn": "Router.initialize",
      "offset": [
        3715,
        3733
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "4507": {
      "op": "PUSH5",
      "value": "0x100000000"
    },
    "4513": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4515": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "4517": {
      "op": "SHL"
    },
    "4518": {
      "op": "SUB"
    },
    "4519": {
      "op": "NOT"
    },
    "4520": {
      "fn": "Router.initialize",
      "offset": [
        3715,
        3733
      ],
      "op": "AND",
      "path": "24"
    },
    "4521": {
      "fn": "Router.initialize",
      "offset": [
        3723,
        3733
      ],
      "op": "CALLER",
      "path": "24"
    },
    "4522": {
      "fn": "Router.initialize",
      "offset": [
        3715,
        3733
      ],
      "op": "PUSH5",
      "path": "24",
      "value": "0x100000000"
    },
    "4528": {
      "fn": "Router.initialize",
      "offset": [
        3715,
        3733
      ],
      "op": "MUL",
      "path": "24"
    },
    "4529": {
      "fn": "Router.initialize",
      "offset": [
        3715,
        3733
      ],
      "op": "OR",
      "path": "24"
    },
    "4530": {
      "fn": "Router.initialize",
      "offset": [
        3715,
        3733
      ],
      "op": "DUP2",
      "path": "24"
    },
    "4531": {
      "fn": "Router.initialize",
      "offset": [
        3715,
        3733
      ],
      "op": "SSTORE",
      "path": "24"
    },
    "4532": {
      "fn": "Router.initialize",
      "offset": [
        4091,
        4166
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "4534": {
      "fn": "Router.initialize",
      "offset": [
        4091,
        4166
      ],
      "op": "DUP1",
      "path": "24"
    },
    "4535": {
      "fn": "Router.initialize",
      "offset": [
        4091,
        4166
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "4536": {
      "fn": "Router.initialize",
      "offset": [
        4091,
        4166
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0xA0"
    },
    "4538": {
      "fn": "Router.initialize",
      "offset": [
        4091,
        4166
      ],
      "op": "DUP2",
      "path": "24"
    },
    "4539": {
      "fn": "Router.initialize",
      "offset": [
        4091,
        4166
      ],
      "op": "ADD",
      "path": "24"
    },
    "4540": {
      "fn": "Router.initialize",
      "offset": [
        4091,
        4166
      ],
      "op": "DUP3",
      "path": "24"
    },
    "4541": {
      "fn": "Router.initialize",
      "offset": [
        4091,
        4166
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "4542": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4544": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4546": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4548": {
      "op": "SHL"
    },
    "4549": {
      "op": "SUB"
    },
    "4550": {
      "fn": "Router.initialize",
      "offset": [
        4104,
        4108
      ],
      "op": "PUSH32",
      "path": "24",
      "value": "0x0"
    },
    "4583": {
      "fn": "Router.initialize",
      "offset": [
        4091,
        4166
      ],
      "op": "DUP2",
      "path": "24"
    },
    "4584": {
      "fn": "Router.initialize",
      "offset": [
        4091,
        4166
      ],
      "op": "AND",
      "path": "24"
    },
    "4585": {
      "fn": "Router.initialize",
      "offset": [
        4091,
        4166
      ],
      "op": "DUP3",
      "path": "24"
    },
    "4586": {
      "fn": "Router.initialize",
      "offset": [
        4091,
        4166
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "4587": {
      "fn": "Router.initialize",
      "offset": [
        4091,
        4166
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "4589": {
      "fn": "Router.initialize",
      "offset": [
        4091,
        4166
      ],
      "op": "DUP3",
      "path": "24"
    },
    "4590": {
      "fn": "Router.initialize",
      "offset": [
        4091,
        4166
      ],
      "op": "ADD",
      "path": "24"
    },
    "4591": {
      "fn": "Router.initialize",
      "offset": [
        4091,
        4166
      ],
      "op": "DUP5",
      "path": "24"
    },
    "4592": {
      "fn": "Router.initialize",
      "offset": [
        4091,
        4166
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "4593": {
      "fn": "Router.initialize",
      "offset": [
        4091,
        4166
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "4594": {
      "fn": "Router.initialize",
      "offset": [
        3943,
        3953
      ],
      "op": "PUSH32",
      "path": "24",
      "value": "0x0"
    },
    "4627": {
      "fn": "Router.initialize",
      "offset": [
        3935,
        3967
      ],
      "op": "AND",
      "path": "24"
    },
    "4628": {
      "fn": "Router.initialize",
      "offset": [
        3935,
        3967
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "4629": {
      "op": "PUSH4",
      "value": "0x7ABAF271"
    },
    "4634": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "4636": {
      "op": "SHL"
    },
    "4637": {
      "fn": "Router.initialize",
      "offset": [
        4029,
        4069
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "4638": {
      "fn": "Router.initialize",
      "offset": [
        4091,
        4166
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "4639": {
      "fn": "Router.initialize",
      "offset": [
        4091,
        4166
      ],
      "op": "DUP2",
      "path": "24"
    },
    "4640": {
      "fn": "Router.initialize",
      "offset": [
        4091,
        4166
      ],
      "op": "ADD",
      "path": "24"
    },
    "4641": {
      "fn": "Router.initialize",
      "offset": [
        4117,
        4131
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x2"
    },
    "4643": {
      "fn": "Router.initialize",
      "offset": [
        4091,
        4166
      ],
      "op": "DUP2",
      "path": "24"
    },
    "4644": {
      "fn": "Router.initialize",
      "offset": [
        4091,
        4166
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "4645": {
      "offset": [
        223,
        224
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x8"
    },
    "4647": {
      "fn": "Router.initialize",
      "offset": [
        4091,
        4166
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "4649": {
      "fn": "Router.initialize",
      "offset": [
        4091,
        4166
      ],
      "op": "DUP1",
      "path": "24"
    },
    "4650": {
      "fn": "Router.initialize",
      "offset": [
        4091,
        4166
      ],
      "op": "DUP4",
      "path": "24"
    },
    "4651": {
      "fn": "Router.initialize",
      "offset": [
        4091,
        4166
      ],
      "op": "ADD",
      "path": "24"
    },
    "4652": {
      "fn": "Router.initialize",
      "offset": [
        4091,
        4166
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "4653": {
      "fn": "Router.initialize",
      "offset": [
        4091,
        4166
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "4654": {
      "fn": "Router.initialize",
      "offset": [
        4091,
        4166
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "4655": {
      "fn": "Router.initialize",
      "offset": [
        4091,
        4166
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "4656": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4658": {
      "fn": "Router.initialize",
      "offset": [
        4091,
        4166
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "4660": {
      "fn": "Router.initialize",
      "offset": [
        4091,
        4166
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "4661": {
      "fn": "Router.initialize",
      "offset": [
        4091,
        4166
      ],
      "op": "DUP4",
      "path": "24"
    },
    "4662": {
      "fn": "Router.initialize",
      "offset": [
        4091,
        4166
      ],
      "op": "ADD",
      "path": "24"
    },
    "4663": {
      "fn": "Router.initialize",
      "offset": [
        4091,
        4166
      ],
      "op": "DUP2",
      "path": "24"
    },
    "4664": {
      "fn": "Router.initialize",
      "offset": [
        4091,
        4166
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "4665": {
      "fn": "Router.initialize",
      "offset": [
        4091,
        4166
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "4666": {
      "fn": "Router.initialize",
      "offset": [
        4238,
        4319
      ],
      "op": "DUP3",
      "path": "24"
    },
    "4667": {
      "fn": "Router.initialize",
      "offset": [
        4238,
        4319
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "4668": {
      "fn": "Router.initialize",
      "offset": [
        4238,
        4319
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0xA0"
    },
    "4670": {
      "fn": "Router.initialize",
      "offset": [
        4238,
        4319
      ],
      "op": "DUP2",
      "path": "24"
    },
    "4671": {
      "fn": "Router.initialize",
      "offset": [
        4238,
        4319
      ],
      "op": "ADD",
      "path": "24"
    },
    "4672": {
      "fn": "Router.initialize",
      "offset": [
        4238,
        4319
      ],
      "op": "DUP5",
      "path": "24"
    },
    "4673": {
      "fn": "Router.initialize",
      "offset": [
        4238,
        4319
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "4674": {
      "fn": "Router.initialize",
      "offset": [
        4238,
        4319
      ],
      "op": "DUP2",
      "path": "24"
    },
    "4675": {
      "fn": "Router.initialize",
      "offset": [
        4238,
        4319
      ],
      "op": "DUP2",
      "path": "24"
    },
    "4676": {
      "fn": "Router.initialize",
      "offset": [
        4238,
        4319
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "4677": {
      "fn": "Router.initialize",
      "offset": [
        4238,
        4319
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "4678": {
      "fn": "Router.initialize",
      "offset": [
        4238,
        4319
      ],
      "op": "DUP3",
      "path": "24"
    },
    "4679": {
      "fn": "Router.initialize",
      "offset": [
        4238,
        4319
      ],
      "op": "ADD",
      "path": "24"
    },
    "4680": {
      "fn": "Router.initialize",
      "offset": [
        4238,
        4319
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "4681": {
      "fn": "Router.initialize",
      "offset": [
        4238,
        4319
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "4682": {
      "fn": "Router.initialize",
      "offset": [
        4238,
        4319
      ],
      "op": "DUP2",
      "path": "24"
    },
    "4683": {
      "fn": "Router.initialize",
      "offset": [
        4238,
        4319
      ],
      "op": "ADD",
      "path": "24"
    },
    "4684": {
      "fn": "Router.initialize",
      "offset": [
        4270,
        4285
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x3"
    },
    "4686": {
      "fn": "Router.initialize",
      "offset": [
        4238,
        4319
      ],
      "op": "DUP2",
      "path": "24"
    },
    "4687": {
      "fn": "Router.initialize",
      "offset": [
        4238,
        4319
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "4688": {
      "offset": [
        674,
        676
      ],
      "op": "PUSH1",
      "path": "63",
      "value": "0x12"
    },
    "4690": {
      "fn": "Router.initialize",
      "offset": [
        4238,
        4319
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "4692": {
      "fn": "Router.initialize",
      "offset": [
        4238,
        4319
      ],
      "op": "DUP3",
      "path": "24"
    },
    "4693": {
      "fn": "Router.initialize",
      "offset": [
        4238,
        4319
      ],
      "op": "ADD",
      "path": "24"
    },
    "4694": {
      "fn": "Router.initialize",
      "offset": [
        4238,
        4319
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "4695": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4697": {
      "fn": "Router.initialize",
      "offset": [
        4238,
        4319
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "4699": {
      "fn": "Router.initialize",
      "offset": [
        4238,
        4319
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "4700": {
      "fn": "Router.initialize",
      "offset": [
        4238,
        4319
      ],
      "op": "DUP3",
      "path": "24"
    },
    "4701": {
      "fn": "Router.initialize",
      "offset": [
        4238,
        4319
      ],
      "op": "ADD",
      "path": "24"
    },
    "4702": {
      "fn": "Router.initialize",
      "offset": [
        4238,
        4319
      ],
      "op": "DUP2",
      "path": "24"
    },
    "4703": {
      "fn": "Router.initialize",
      "offset": [
        4238,
        4319
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "4704": {
      "fn": "Router.initialize",
      "offset": [
        4238,
        4319
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "4705": {
      "fn": "Router.initialize",
      "offset": [
        3985,
        4549
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "4706": {
      "fn": "Router.initialize",
      "offset": [
        3985,
        4549
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "4707": {
      "fn": "Router.initialize",
      "offset": [
        3985,
        4549
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x127C"
    },
    "4710": {
      "fn": "Router.initialize",
      "offset": [
        3985,
        4549
      ],
      "op": "SWAP4",
      "path": "24"
    },
    "4711": {
      "fn": "Router.initialize",
      "offset": [
        3985,
        4549
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "4712": {
      "fn": "Router.initialize",
      "offset": [
        3985,
        4549
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "4713": {
      "op": "SWAP1"
    },
    "4714": {
      "op": "DUP2"
    },
    "4715": {
      "op": "SWAP1"
    },
    "4716": {
      "fn": "Router.initialize",
      "offset": [
        4400,
        4403
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x85"
    },
    "4718": {
      "fn": "Router.initialize",
      "offset": [
        4400,
        4403
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "4719": {
      "fn": "Router.initialize",
      "offset": [
        4460,
        4462
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4B"
    },
    "4721": {
      "fn": "Router.initialize",
      "offset": [
        4460,
        4462
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "4722": {
      "fn": "Router.initialize",
      "offset": [
        4500,
        4503
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x6C"
    },
    "4724": {
      "fn": "Router.initialize",
      "offset": [
        4500,
        4503
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "4725": {
      "fn": "Router.initialize",
      "offset": [
        3985,
        4549
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x24"
    },
    "4727": {
      "fn": "Router.initialize",
      "offset": [
        3985,
        4549
      ],
      "op": "ADD",
      "path": "24"
    },
    "4728": {
      "fn": "Router.initialize",
      "offset": [
        3985,
        4549
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x14C4"
    },
    "4731": {
      "fn": "Router.initialize",
      "jump": "i",
      "offset": [
        3985,
        4549
      ],
      "op": "JUMP",
      "path": "24"
    },
    "4732": {
      "fn": "Router.initialize",
      "offset": [
        3985,
        4549
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "4733": {
      "fn": "Router.initialize",
      "offset": [
        3985,
        4549
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "4735": {
      "fn": "Router.initialize",
      "offset": [
        3985,
        4549
      ],
      "op": "DUP1",
      "path": "24"
    },
    "4736": {
      "fn": "Router.initialize",
      "offset": [
        3985,
        4549
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "4737": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4739": {
      "op": "NOT"
    },
    "4740": {
      "fn": "Router.initialize",
      "offset": [
        3985,
        4549
      ],
      "op": "DUP2",
      "path": "24"
    },
    "4741": {
      "fn": "Router.initialize",
      "offset": [
        3985,
        4549
      ],
      "op": "DUP5",
      "path": "24"
    },
    "4742": {
      "fn": "Router.initialize",
      "offset": [
        3985,
        4549
      ],
      "op": "SUB",
      "path": "24"
    },
    "4743": {
      "fn": "Router.initialize",
      "offset": [
        3985,
        4549
      ],
      "op": "ADD",
      "path": "24"
    },
    "4744": {
      "fn": "Router.initialize",
      "offset": [
        3985,
        4549
      ],
      "op": "DUP2",
      "path": "24"
    },
    "4745": {
      "fn": "Router.initialize",
      "offset": [
        3985,
        4549
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "4746": {
      "fn": "Router.initialize",
      "offset": [
        3985,
        4549
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "4747": {
      "fn": "Router.initialize",
      "offset": [
        3985,
        4549
      ],
      "op": "DUP2",
      "path": "24"
    },
    "4748": {
      "fn": "Router.initialize",
      "offset": [
        3985,
        4549
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "4749": {
      "fn": "Router.initialize",
      "offset": [
        3985,
        4549
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "4751": {
      "fn": "Router.initialize",
      "offset": [
        3985,
        4549
      ],
      "op": "DUP3",
      "path": "24"
    },
    "4752": {
      "fn": "Router.initialize",
      "offset": [
        3985,
        4549
      ],
      "op": "ADD",
      "path": "24"
    },
    "4753": {
      "fn": "Router.initialize",
      "offset": [
        3985,
        4549
      ],
      "op": "DUP1",
      "path": "24"
    },
    "4754": {
      "fn": "Router.initialize",
      "offset": [
        3985,
        4549
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "4755": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4757": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4759": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4761": {
      "op": "SHL"
    },
    "4762": {
      "op": "SUB"
    },
    "4763": {
      "fn": "Router.initialize",
      "offset": [
        3985,
        4549
      ],
      "op": "AND",
      "path": "24"
    },
    "4764": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4766": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4768": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4770": {
      "op": "SHL"
    },
    "4771": {
      "op": "SUB"
    },
    "4772": {
      "op": "NOT"
    },
    "4773": {
      "fn": "Router.initialize",
      "offset": [
        3985,
        4549
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "4774": {
      "fn": "Router.initialize",
      "offset": [
        3985,
        4549
      ],
      "op": "SWAP5",
      "path": "24"
    },
    "4775": {
      "fn": "Router.initialize",
      "offset": [
        3985,
        4549
      ],
      "op": "AND",
      "path": "24"
    },
    "4776": {
      "fn": "Router.initialize",
      "offset": [
        3985,
        4549
      ],
      "op": "SWAP4",
      "path": "24"
    },
    "4777": {
      "fn": "Router.initialize",
      "offset": [
        3985,
        4549
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "4778": {
      "fn": "Router.initialize",
      "offset": [
        3985,
        4549
      ],
      "op": "SWAP4",
      "path": "24"
    },
    "4779": {
      "fn": "Router.initialize",
      "offset": [
        3985,
        4549
      ],
      "op": "OR",
      "path": "24"
    },
    "4780": {
      "fn": "Router.initialize",
      "offset": [
        3985,
        4549
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "4781": {
      "fn": "Router.initialize",
      "offset": [
        3985,
        4549
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "4782": {
      "fn": "Router.initialize",
      "offset": [
        3985,
        4549
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "4783": {
      "fn": "Router.initialize",
      "offset": [
        3935,
        4563
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "4784": {
      "fn": "Router.initialize",
      "offset": [
        3935,
        4563
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "4785": {
      "fn": "Router.initialize",
      "offset": [
        3935,
        4563
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x12BA"
    },
    "4788": {
      "fn": "Router.initialize",
      "offset": [
        3935,
        4563
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "4789": {
      "fn": "Router.initialize",
      "offset": [
        3985,
        4549
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "4790": {
      "fn": "Router.initialize",
      "offset": [
        3935,
        4563
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1477"
    },
    "4793": {
      "fn": "Router.initialize",
      "jump": "i",
      "offset": [
        3935,
        4563
      ],
      "op": "JUMP",
      "path": "24"
    },
    "4794": {
      "fn": "Router.initialize",
      "offset": [
        3935,
        4563
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "4795": {
      "fn": "Router.initialize",
      "offset": [
        3935,
        4563
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "4797": {
      "fn": "Router.initialize",
      "offset": [
        3935,
        4563
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "4799": {
      "fn": "Router.initialize",
      "offset": [
        3935,
        4563
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "4800": {
      "fn": "Router.initialize",
      "offset": [
        3935,
        4563
      ],
      "op": "DUP1",
      "path": "24"
    },
    "4801": {
      "fn": "Router.initialize",
      "offset": [
        3935,
        4563
      ],
      "op": "DUP4",
      "path": "24"
    },
    "4802": {
      "fn": "Router.initialize",
      "offset": [
        3935,
        4563
      ],
      "op": "SUB",
      "path": "24"
    },
    "4803": {
      "fn": "Router.initialize",
      "offset": [
        3935,
        4563
      ],
      "op": "DUP2",
      "path": "24"
    },
    "4804": {
      "fn": "Router.initialize",
      "offset": [
        3935,
        4563
      ],
      "op": "DUP6",
      "path": "24"
    },
    "4805": {
      "fn": "Router.initialize",
      "offset": [
        3935,
        4563
      ],
      "op": "GAS",
      "path": "24"
    },
    "4806": {
      "fn": "Router.initialize",
      "offset": [
        3935,
        4563
      ],
      "op": "DELEGATECALL",
      "path": "24"
    },
    "4807": {
      "fn": "Router.initialize",
      "offset": [
        3935,
        4563
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "4808": {
      "fn": "Router.initialize",
      "offset": [
        3935,
        4563
      ],
      "op": "POP",
      "path": "24"
    },
    "4809": {
      "fn": "Router.initialize",
      "offset": [
        3935,
        4563
      ],
      "op": "POP",
      "path": "24"
    },
    "4810": {
      "fn": "Router.initialize",
      "offset": [
        3935,
        4563
      ],
      "op": "RETURNDATASIZE",
      "path": "24"
    },
    "4811": {
      "fn": "Router.initialize",
      "offset": [
        3935,
        4563
      ],
      "op": "DUP1",
      "path": "24"
    },
    "4812": {
      "fn": "Router.initialize",
      "offset": [
        3935,
        4563
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "4814": {
      "fn": "Router.initialize",
      "offset": [
        3935,
        4563
      ],
      "op": "DUP2",
      "path": "24"
    },
    "4815": {
      "fn": "Router.initialize",
      "offset": [
        3935,
        4563
      ],
      "op": "EQ",
      "path": "24"
    },
    "4816": {
      "fn": "Router.initialize",
      "offset": [
        3935,
        4563
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x12F5"
    },
    "4819": {
      "fn": "Router.initialize",
      "offset": [
        3935,
        4563
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "4820": {
      "fn": "Router.initialize",
      "offset": [
        3935,
        4563
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "4822": {
      "fn": "Router.initialize",
      "offset": [
        3935,
        4563
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "4823": {
      "fn": "Router.initialize",
      "offset": [
        3935,
        4563
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "4824": {
      "fn": "Router.initialize",
      "offset": [
        3935,
        4563
      ],
      "op": "POP",
      "path": "24"
    },
    "4825": {
      "fn": "Router.initialize",
      "offset": [
        3935,
        4563
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x1F"
    },
    "4827": {
      "fn": "Router.initialize",
      "offset": [
        3935,
        4563
      ],
      "op": "NOT",
      "path": "24"
    },
    "4828": {
      "fn": "Router.initialize",
      "offset": [
        3935,
        4563
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x3F"
    },
    "4830": {
      "fn": "Router.initialize",
      "offset": [
        3935,
        4563
      ],
      "op": "RETURNDATASIZE",
      "path": "24"
    },
    "4831": {
      "fn": "Router.initialize",
      "offset": [
        3935,
        4563
      ],
      "op": "ADD",
      "path": "24"
    },
    "4832": {
      "fn": "Router.initialize",
      "offset": [
        3935,
        4563
      ],
      "op": "AND",
      "path": "24"
    },
    "4833": {
      "fn": "Router.initialize",
      "offset": [
        3935,
        4563
      ],
      "op": "DUP3",
      "path": "24"
    },
    "4834": {
      "fn": "Router.initialize",
      "offset": [
        3935,
        4563
      ],
      "op": "ADD",
      "path": "24"
    },
    "4835": {
      "fn": "Router.initialize",
      "offset": [
        3935,
        4563
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "4837": {
      "fn": "Router.initialize",
      "offset": [
        3935,
        4563
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "4838": {
      "fn": "Router.initialize",
      "offset": [
        3935,
        4563
      ],
      "op": "RETURNDATASIZE",
      "path": "24"
    },
    "4839": {
      "fn": "Router.initialize",
      "offset": [
        3935,
        4563
      ],
      "op": "DUP3",
      "path": "24"
    },
    "4840": {
      "fn": "Router.initialize",
      "offset": [
        3935,
        4563
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "4841": {
      "fn": "Router.initialize",
      "offset": [
        3935,
        4563
      ],
      "op": "RETURNDATASIZE",
      "path": "24"
    },
    "4842": {
      "fn": "Router.initialize",
      "offset": [
        3935,
        4563
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "4844": {
      "fn": "Router.initialize",
      "offset": [
        3935,
        4563
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "4846": {
      "fn": "Router.initialize",
      "offset": [
        3935,
        4563
      ],
      "op": "DUP5",
      "path": "24"
    },
    "4847": {
      "fn": "Router.initialize",
      "offset": [
        3935,
        4563
      ],
      "op": "ADD",
      "path": "24"
    },
    "4848": {
      "fn": "Router.initialize",
      "offset": [
        3935,
        4563
      ],
      "op": "RETURNDATACOPY",
      "path": "24"
    },
    "4849": {
      "fn": "Router.initialize",
      "offset": [
        3935,
        4563
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x12FA"
    },
    "4852": {
      "fn": "Router.initialize",
      "offset": [
        3935,
        4563
      ],
      "op": "JUMP",
      "path": "24"
    },
    "4853": {
      "fn": "Router.initialize",
      "offset": [
        3935,
        4563
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "4854": {
      "fn": "Router.initialize",
      "offset": [
        3935,
        4563
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x60"
    },
    "4856": {
      "fn": "Router.initialize",
      "offset": [
        3935,
        4563
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "4857": {
      "fn": "Router.initialize",
      "offset": [
        3935,
        4563
      ],
      "op": "POP",
      "path": "24"
    },
    "4858": {
      "fn": "Router.initialize",
      "offset": [
        3935,
        4563
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "4859": {
      "fn": "Router.initialize",
      "offset": [
        3935,
        4563
      ],
      "op": "POP",
      "path": "24"
    },
    "4860": {
      "fn": "Router.initialize",
      "offset": [
        3905,
        4563
      ],
      "op": "POP",
      "path": "24"
    },
    "4861": {
      "fn": "Router.initialize",
      "offset": [
        3905,
        4563
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "4862": {
      "fn": "Router.initialize",
      "offset": [
        3905,
        4563
      ],
      "op": "POP",
      "path": "24"
    },
    "4863": {
      "branch": 121,
      "fn": "Router.initialize",
      "offset": [
        4581,
        4587
      ],
      "op": "DUP1",
      "path": "24",
      "statement": 16
    },
    "4864": {
      "fn": "Router.initialize",
      "offset": [
        4573,
        4588
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1308"
    },
    "4867": {
      "branch": 121,
      "fn": "Router.initialize",
      "offset": [
        4573,
        4588
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "4868": {
      "fn": "Router.initialize",
      "offset": [
        4573,
        4588
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "4870": {
      "fn": "Router.initialize",
      "offset": [
        4573,
        4588
      ],
      "op": "DUP1",
      "path": "24"
    },
    "4871": {
      "fn": "Router.initialize",
      "offset": [
        4573,
        4588
      ],
      "op": "REVERT",
      "path": "24"
    },
    "4872": {
      "fn": "Router.initialize",
      "offset": [
        4573,
        4588
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "4873": {
      "op": "POP"
    },
    "4874": {
      "fn": "Router.initialize",
      "offset": [
        4599,
        4604
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 17,
      "value": "0x0"
    },
    "4876": {
      "fn": "Router.initialize",
      "offset": [
        4599,
        4613
      ],
      "op": "DUP1",
      "path": "24"
    },
    "4877": {
      "fn": "Router.initialize",
      "offset": [
        4599,
        4613
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "4878": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4880": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4882": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4884": {
      "op": "SHL"
    },
    "4885": {
      "op": "SUB"
    },
    "4886": {
      "fn": "Router.initialize",
      "offset": [
        4599,
        4613
      ],
      "op": "SWAP5",
      "path": "24"
    },
    "4887": {
      "fn": "Router.initialize",
      "offset": [
        4599,
        4613
      ],
      "op": "DUP6",
      "path": "24"
    },
    "4888": {
      "fn": "Router.initialize",
      "offset": [
        4599,
        4613
      ],
      "op": "AND",
      "path": "24"
    },
    "4889": {
      "fn": "Router.initialize",
      "offset": [
        4599,
        4613
      ],
      "op": "PUSH5",
      "path": "24",
      "value": "0x100000000"
    },
    "4895": {
      "fn": "Router.initialize",
      "offset": [
        4599,
        4613
      ],
      "op": "MUL",
      "path": "24"
    },
    "4896": {
      "op": "PUSH5",
      "value": "0x100000000"
    },
    "4902": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4904": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "4906": {
      "op": "SHL"
    },
    "4907": {
      "op": "SUB"
    },
    "4908": {
      "op": "NOT"
    },
    "4909": {
      "fn": "Router.initialize",
      "offset": [
        4599,
        4613
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "4910": {
      "fn": "Router.initialize",
      "offset": [
        4599,
        4613
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "4911": {
      "fn": "Router.initialize",
      "offset": [
        4599,
        4613
      ],
      "op": "AND",
      "path": "24"
    },
    "4912": {
      "fn": "Router.initialize",
      "offset": [
        4599,
        4613
      ],
      "op": "OR",
      "path": "24"
    },
    "4913": {
      "fn": "Router.initialize",
      "offset": [
        4599,
        4613
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "4914": {
      "fn": "Router.initialize",
      "offset": [
        4599,
        4613
      ],
      "op": "SSTORE",
      "path": "24"
    },
    "4915": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4917": {
      "fn": "Router.initialize",
      "offset": [
        4697,
        4723
      ],
      "op": "DUP1",
      "path": "24",
      "statement": 18
    },
    "4918": {
      "fn": "Router.initialize",
      "offset": [
        4697,
        4723
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "4919": {
      "fn": "Router.initialize",
      "offset": [
        4697,
        4723
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "4920": {
      "fn": "Router.initialize",
      "offset": [
        4697,
        4723
      ],
      "op": "DUP5",
      "path": "24"
    },
    "4921": {
      "fn": "Router.initialize",
      "offset": [
        4697,
        4723
      ],
      "op": "AND",
      "path": "24"
    },
    "4922": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4924": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4926": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4928": {
      "op": "SHL"
    },
    "4929": {
      "op": "SUB"
    },
    "4930": {
      "op": "NOT"
    },
    "4931": {
      "fn": "Router.initialize",
      "offset": [
        4697,
        4723
      ],
      "op": "SWAP4",
      "path": "24"
    },
    "4932": {
      "fn": "Router.initialize",
      "offset": [
        4697,
        4723
      ],
      "op": "DUP5",
      "path": "24"
    },
    "4933": {
      "fn": "Router.initialize",
      "offset": [
        4697,
        4723
      ],
      "op": "AND",
      "path": "24"
    },
    "4934": {
      "fn": "Router.initialize",
      "offset": [
        4697,
        4723
      ],
      "op": "OR",
      "path": "24"
    },
    "4935": {
      "fn": "Router.initialize",
      "offset": [
        4697,
        4723
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "4936": {
      "fn": "Router.initialize",
      "offset": [
        4697,
        4723
      ],
      "op": "SSTORE",
      "path": "24"
    },
    "4937": {
      "fn": "Router.initialize",
      "offset": [
        4733,
        4746
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 19,
      "value": "0x2"
    },
    "4939": {
      "fn": "Router.initialize",
      "offset": [
        4733,
        4763
      ],
      "op": "DUP1",
      "path": "24"
    },
    "4940": {
      "fn": "Router.initialize",
      "offset": [
        4733,
        4763
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "4941": {
      "fn": "Router.initialize",
      "offset": [
        4733,
        4763
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "4942": {
      "fn": "Router.initialize",
      "offset": [
        4733,
        4763
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "4943": {
      "fn": "Router.initialize",
      "offset": [
        4733,
        4763
      ],
      "op": "SWAP4",
      "path": "24"
    },
    "4944": {
      "fn": "Router.initialize",
      "offset": [
        4733,
        4763
      ],
      "op": "AND",
      "path": "24"
    },
    "4945": {
      "fn": "Router.initialize",
      "offset": [
        4733,
        4763
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "4946": {
      "fn": "Router.initialize",
      "offset": [
        4733,
        4763
      ],
      "op": "AND",
      "path": "24"
    },
    "4947": {
      "fn": "Router.initialize",
      "offset": [
        4733,
        4763
      ],
      "op": "OR",
      "path": "24"
    },
    "4948": {
      "fn": "Router.initialize",
      "offset": [
        4733,
        4763
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "4949": {
      "fn": "Router.initialize",
      "offset": [
        4733,
        4763
      ],
      "op": "SSTORE",
      "path": "24"
    },
    "4950": {
      "fn": "Router.initialize",
      "jump": "o",
      "offset": [
        3377,
        4803
      ],
      "op": "JUMP",
      "path": "24"
    },
    "4951": {
      "offset": [
        1954,
        1991
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "4952": {
      "fn": "Router.initialize",
      "offset": [
        1954,
        1991
      ],
      "op": "PUSH32",
      "path": "24",
      "value": "0x0"
    },
    "4985": {
      "fn": "Router.initialize",
      "offset": [
        1954,
        1991
      ],
      "op": "DUP2",
      "path": "24"
    },
    "4986": {
      "fn": "Router.initialize",
      "jump": "o",
      "offset": [
        1954,
        1991
      ],
      "op": "JUMP",
      "path": "24"
    },
    "4987": {
      "offset": [
        1467,
        1509
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "4988": {
      "fn": "Router.initialize",
      "offset": [
        1467,
        1509
      ],
      "op": "PUSH32",
      "path": "24",
      "value": "0x0"
    },
    "5021": {
      "fn": "Router.initialize",
      "offset": [
        1467,
        1509
      ],
      "op": "DUP2",
      "path": "24"
    },
    "5022": {
      "fn": "Router.initialize",
      "jump": "o",
      "offset": [
        1467,
        1509
      ],
      "op": "JUMP",
      "path": "24"
    },
    "5023": {
      "op": "JUMPDEST"
    },
    "5024": {
      "op": "DUP1"
    },
    "5025": {
      "op": "CALLDATALOAD"
    },
    "5026": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5028": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5030": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5032": {
      "op": "SHL"
    },
    "5033": {
      "op": "SUB"
    },
    "5034": {
      "op": "DUP2"
    },
    "5035": {
      "op": "AND"
    },
    "5036": {
      "op": "DUP2"
    },
    "5037": {
      "op": "EQ"
    },
    "5038": {
      "op": "PUSH2",
      "value": "0xF3D"
    },
    "5041": {
      "op": "JUMPI"
    },
    "5042": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5044": {
      "op": "DUP1"
    },
    "5045": {
      "op": "REVERT"
    },
    "5046": {
      "op": "JUMPDEST"
    },
    "5047": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5049": {
      "op": "DUP1"
    },
    "5050": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5052": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5054": {
      "op": "DUP5"
    },
    "5055": {
      "op": "DUP7"
    },
    "5056": {
      "op": "SUB"
    },
    "5057": {
      "op": "SLT"
    },
    "5058": {
      "op": "ISZERO"
    },
    "5059": {
      "op": "PUSH2",
      "value": "0x13CA"
    },
    "5062": {
      "op": "JUMPI"
    },
    "5063": {
      "op": "DUP3"
    },
    "5064": {
      "op": "DUP4"
    },
    "5065": {
      "op": "REVERT"
    },
    "5066": {
      "op": "JUMPDEST"
    },
    "5067": {
      "op": "PUSH2",
      "value": "0x13D3"
    },
    "5070": {
      "op": "DUP5"
    },
    "5071": {
      "op": "PUSH2",
      "value": "0x139F"
    },
    "5074": {
      "jump": "i",
      "op": "JUMP"
    },
    "5075": {
      "op": "JUMPDEST"
    },
    "5076": {
      "op": "SWAP3"
    },
    "5077": {
      "op": "POP"
    },
    "5078": {
      "op": "PUSH2",
      "value": "0x13E1"
    },
    "5081": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5083": {
      "op": "DUP6"
    },
    "5084": {
      "op": "ADD"
    },
    "5085": {
      "op": "PUSH2",
      "value": "0x139F"
    },
    "5088": {
      "jump": "i",
      "op": "JUMP"
    },
    "5089": {
      "op": "JUMPDEST"
    },
    "5090": {
      "op": "SWAP2"
    },
    "5091": {
      "op": "POP"
    },
    "5092": {
      "op": "PUSH2",
      "value": "0x13EF"
    },
    "5095": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5097": {
      "op": "DUP6"
    },
    "5098": {
      "op": "ADD"
    },
    "5099": {
      "op": "PUSH2",
      "value": "0x139F"
    },
    "5102": {
      "jump": "i",
      "op": "JUMP"
    },
    "5103": {
      "op": "JUMPDEST"
    },
    "5104": {
      "op": "SWAP1"
    },
    "5105": {
      "op": "POP"
    },
    "5106": {
      "op": "SWAP3"
    },
    "5107": {
      "op": "POP"
    },
    "5108": {
      "op": "SWAP3"
    },
    "5109": {
      "op": "POP"
    },
    "5110": {
      "op": "SWAP3"
    },
    "5111": {
      "jump": "o",
      "op": "JUMP"
    },
    "5112": {
      "op": "JUMPDEST"
    },
    "5113": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5115": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5117": {
      "op": "DUP3"
    },
    "5118": {
      "op": "DUP5"
    },
    "5119": {
      "op": "SUB"
    },
    "5120": {
      "op": "SLT"
    },
    "5121": {
      "op": "ISZERO"
    },
    "5122": {
      "op": "PUSH2",
      "value": "0x1409"
    },
    "5125": {
      "op": "JUMPI"
    },
    "5126": {
      "op": "DUP1"
    },
    "5127": {
      "op": "DUP2"
    },
    "5128": {
      "op": "REVERT"
    },
    "5129": {
      "op": "JUMPDEST"
    },
    "5130": {
      "op": "DUP2"
    },
    "5131": {
      "op": "CALLDATALOAD"
    },
    "5132": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5134": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5136": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5138": {
      "op": "SHL"
    },
    "5139": {
      "op": "SUB"
    },
    "5140": {
      "op": "NOT"
    },
    "5141": {
      "op": "DUP2"
    },
    "5142": {
      "op": "AND"
    },
    "5143": {
      "op": "DUP2"
    },
    "5144": {
      "op": "EQ"
    },
    "5145": {
      "op": "PUSH2",
      "value": "0x1420"
    },
    "5148": {
      "op": "JUMPI"
    },
    "5149": {
      "op": "DUP2"
    },
    "5150": {
      "op": "DUP3"
    },
    "5151": {
      "op": "REVERT"
    },
    "5152": {
      "op": "JUMPDEST"
    },
    "5153": {
      "op": "SWAP4"
    },
    "5154": {
      "op": "SWAP3"
    },
    "5155": {
      "op": "POP"
    },
    "5156": {
      "op": "POP"
    },
    "5157": {
      "op": "POP"
    },
    "5158": {
      "jump": "o",
      "op": "JUMP"
    },
    "5159": {
      "op": "JUMPDEST"
    },
    "5160": {
      "op": "DUP1"
    },
    "5161": {
      "op": "MLOAD"
    },
    "5162": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5164": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5166": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5168": {
      "op": "SHL"
    },
    "5169": {
      "op": "SUB"
    },
    "5170": {
      "op": "AND"
    },
    "5171": {
      "op": "DUP3"
    },
    "5172": {
      "op": "MSTORE"
    },
    "5173": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5175": {
      "op": "DUP1"
    },
    "5176": {
      "op": "DUP3"
    },
    "5177": {
      "op": "ADD"
    },
    "5178": {
      "op": "MLOAD"
    },
    "5179": {
      "op": "ISZERO"
    },
    "5180": {
      "op": "ISZERO"
    },
    "5181": {
      "op": "SWAP1"
    },
    "5182": {
      "op": "DUP4"
    },
    "5183": {
      "op": "ADD"
    },
    "5184": {
      "op": "MSTORE"
    },
    "5185": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5187": {
      "op": "DUP2"
    },
    "5188": {
      "op": "ADD"
    },
    "5189": {
      "op": "MLOAD"
    },
    "5190": {
      "op": "PUSH1",
      "value": "0x6"
    },
    "5192": {
      "op": "DUP2"
    },
    "5193": {
      "op": "LT"
    },
    "5194": {
      "op": "PUSH2",
      "value": "0x144F"
    },
    "5197": {
      "op": "JUMPI"
    },
    "5198": {
      "op": "INVALID"
    },
    "5199": {
      "op": "JUMPDEST"
    },
    "5200": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5202": {
      "op": "DUP4"
    },
    "5203": {
      "op": "ADD"
    },
    "5204": {
      "op": "MSTORE"
    },
    "5205": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5207": {
      "op": "DUP2"
    },
    "5208": {
      "op": "DUP2"
    },
    "5209": {
      "op": "ADD"
    },
    "5210": {
      "op": "MLOAD"
    },
    "5211": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "5213": {
      "op": "AND"
    },
    "5214": {
      "op": "SWAP1"
    },
    "5215": {
      "op": "DUP4"
    },
    "5216": {
      "op": "ADD"
    },
    "5217": {
      "op": "MSTORE"
    },
    "5218": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5220": {
      "op": "SWAP1"
    },
    "5221": {
      "op": "DUP2"
    },
    "5222": {
      "op": "ADD"
    },
    "5223": {
      "op": "MLOAD"
    },
    "5224": {
      "op": "PUSH9",
      "value": "0xFFFFFFFFFFFFFFFFFF"
    },
    "5234": {
      "op": "AND"
    },
    "5235": {
      "op": "SWAP2"
    },
    "5236": {
      "op": "ADD"
    },
    "5237": {
      "op": "MSTORE"
    },
    "5238": {
      "jump": "o",
      "op": "JUMP"
    },
    "5239": {
      "op": "JUMPDEST"
    },
    "5240": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5242": {
      "op": "DUP3"
    },
    "5243": {
      "op": "MLOAD"
    },
    "5244": {
      "op": "DUP2"
    },
    "5245": {
      "op": "JUMPDEST"
    },
    "5246": {
      "op": "DUP2"
    },
    "5247": {
      "op": "DUP2"
    },
    "5248": {
      "op": "LT"
    },
    "5249": {
      "op": "ISZERO"
    },
    "5250": {
      "op": "PUSH2",
      "value": "0x1497"
    },
    "5253": {
      "op": "JUMPI"
    },
    "5254": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5256": {
      "op": "DUP2"
    },
    "5257": {
      "op": "DUP7"
    },
    "5258": {
      "op": "ADD"
    },
    "5259": {
      "op": "DUP2"
    },
    "5260": {
      "op": "ADD"
    },
    "5261": {
      "op": "MLOAD"
    },
    "5262": {
      "op": "DUP6"
    },
    "5263": {
      "op": "DUP4"
    },
    "5264": {
      "op": "ADD"
    },
    "5265": {
      "op": "MSTORE"
    },
    "5266": {
      "op": "ADD"
    },
    "5267": {
      "op": "PUSH2",
      "value": "0x147D"
    },
    "5270": {
      "op": "JUMP"
    },
    "5271": {
      "op": "JUMPDEST"
    },
    "5272": {
      "op": "DUP2"
    },
    "5273": {
      "op": "DUP2"
    },
    "5274": {
      "op": "GT"
    },
    "5275": {
      "op": "ISZERO"
    },
    "5276": {
      "op": "PUSH2",
      "value": "0x14A5"
    },
    "5279": {
      "op": "JUMPI"
    },
    "5280": {
      "op": "DUP3"
    },
    "5281": {
      "op": "DUP3"
    },
    "5282": {
      "op": "DUP6"
    },
    "5283": {
      "op": "ADD"
    },
    "5284": {
      "op": "MSTORE"
    },
    "5285": {
      "op": "JUMPDEST"
    },
    "5286": {
      "op": "POP"
    },
    "5287": {
      "op": "SWAP2"
    },
    "5288": {
      "op": "SWAP1"
    },
    "5289": {
      "op": "SWAP2"
    },
    "5290": {
      "op": "ADD"
    },
    "5291": {
      "op": "SWAP3"
    },
    "5292": {
      "op": "SWAP2"
    },
    "5293": {
      "op": "POP"
    },
    "5294": {
      "op": "POP"
    },
    "5295": {
      "jump": "o",
      "op": "JUMP"
    },
    "5296": {
      "op": "JUMPDEST"
    },
    "5297": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5299": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5301": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5303": {
      "op": "SHL"
    },
    "5304": {
      "op": "SUB"
    },
    "5305": {
      "op": "SWAP2"
    },
    "5306": {
      "op": "SWAP1"
    },
    "5307": {
      "op": "SWAP2"
    },
    "5308": {
      "op": "AND"
    },
    "5309": {
      "op": "DUP2"
    },
    "5310": {
      "op": "MSTORE"
    },
    "5311": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5313": {
      "op": "ADD"
    },
    "5314": {
      "op": "SWAP1"
    },
    "5315": {
      "jump": "o",
      "op": "JUMP"
    },
    "5316": {
      "op": "JUMPDEST"
    },
    "5317": {
      "op": "PUSH2",
      "value": "0x1E0"
    },
    "5320": {
      "op": "DUP2"
    },
    "5321": {
      "op": "ADD"
    },
    "5322": {
      "op": "PUSH2",
      "value": "0x14D3"
    },
    "5325": {
      "op": "DUP3"
    },
    "5326": {
      "op": "DUP11"
    },
    "5327": {
      "op": "PUSH2",
      "value": "0x1427"
    },
    "5330": {
      "jump": "i",
      "op": "JUMP"
    },
    "5331": {
      "op": "JUMPDEST"
    },
    "5332": {
      "op": "PUSH2",
      "value": "0x14E0"
    },
    "5335": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5337": {
      "op": "DUP4"
    },
    "5338": {
      "op": "ADD"
    },
    "5339": {
      "op": "DUP10"
    },
    "5340": {
      "op": "PUSH2",
      "value": "0x1427"
    },
    "5343": {
      "jump": "i",
      "op": "JUMP"
    },
    "5344": {
      "op": "JUMPDEST"
    },
    "5345": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5347": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5349": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5351": {
      "op": "SHL"
    },
    "5352": {
      "op": "SUB"
    },
    "5353": {
      "op": "SWAP7"
    },
    "5354": {
      "op": "SWAP1"
    },
    "5355": {
      "op": "SWAP7"
    },
    "5356": {
      "op": "AND"
    },
    "5357": {
      "op": "PUSH2",
      "value": "0x140"
    },
    "5360": {
      "op": "DUP3"
    },
    "5361": {
      "op": "ADD"
    },
    "5362": {
      "op": "MSTORE"
    },
    "5363": {
      "op": "SWAP4"
    },
    "5364": {
      "op": "ISZERO"
    },
    "5365": {
      "op": "ISZERO"
    },
    "5366": {
      "op": "PUSH2",
      "value": "0x160"
    },
    "5369": {
      "op": "DUP6"
    },
    "5370": {
      "op": "ADD"
    },
    "5371": {
      "op": "MSTORE"
    },
    "5372": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "5374": {
      "op": "SWAP3"
    },
    "5375": {
      "op": "DUP4"
    },
    "5376": {
      "op": "AND"
    },
    "5377": {
      "op": "PUSH2",
      "value": "0x180"
    },
    "5380": {
      "op": "DUP6"
    },
    "5381": {
      "op": "ADD"
    },
    "5382": {
      "op": "MSTORE"
    },
    "5383": {
      "op": "SWAP1"
    },
    "5384": {
      "op": "DUP3"
    },
    "5385": {
      "op": "AND"
    },
    "5386": {
      "op": "PUSH2",
      "value": "0x1A0"
    },
    "5389": {
      "op": "DUP5"
    },
    "5390": {
      "op": "ADD"
    },
    "5391": {
      "op": "MSTORE"
    },
    "5392": {
      "op": "AND"
    },
    "5393": {
      "op": "PUSH2",
      "value": "0x1C0"
    },
    "5396": {
      "op": "SWAP1"
    },
    "5397": {
      "op": "SWAP2"
    },
    "5398": {
      "op": "ADD"
    },
    "5399": {
      "op": "MSTORE"
    },
    "5400": {
      "op": "SWAP3"
    },
    "5401": {
      "op": "SWAP2"
    },
    "5402": {
      "op": "POP"
    },
    "5403": {
      "op": "POP"
    },
    "5404": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "f1e3ec971a8ce723c44c386a89298f79f8103393",
  "source": "// SPDX-License-Identifier: GPL-3.0-only\npragma solidity =0.7.6;\npragma abicoder v2;\n\nimport \"./actions/nTokenMintAction.sol\";\nimport \"../global/StorageLayoutV1.sol\";\nimport \"../global/Types.sol\";\nimport {INTokenAction} from \"../../interfaces/notional/INTokenAction.sol\";\nimport \"../../interfaces/notional/NotionalProxy.sol\";\nimport {IVaultAction, IVaultAccountAction} from \"../../interfaces/notional/IVaultController.sol\";\nimport {nERC1155Interface} from \"../../interfaces/notional/nERC1155Interface.sol\";\nimport {NotionalGovernance} from \"../../interfaces/notional/NotionalGovernance.sol\";\nimport {NotionalCalculations} from \"../../interfaces/notional/NotionalCalculations.sol\";\n\n/**\n * @notice Sits behind an upgradeable proxy and routes methods to an appropriate implementation contract. All storage\n * will sit inside the upgradeable proxy and this router will authorize the call and re-route the calls to implementing\n * contracts.\n *\n * This pattern adds an additional hop between the proxy and the ultimate implementation contract, however, it also\n * allows for atomic upgrades of the entire system. Individual implementation contracts will be deployed and then a\n * new Router with the new hardcoded addresses will then be deployed and upgraded into place.\n */\ncontract Router is StorageLayoutV1 {\n    // These contract addresses cannot be changed once set by the constructor\n    address public immutable GOVERNANCE;\n    address public immutable VIEWS;\n    address public immutable INITIALIZE_MARKET;\n    address public immutable NTOKEN_ACTIONS;\n    address public immutable BATCH_ACTION;\n    address public immutable ACCOUNT_ACTION;\n    address public immutable ERC1155;\n    address public immutable LIQUIDATE_CURRENCY;\n    address public immutable LIQUIDATE_FCASH;\n    address public immutable cETH;\n    address public immutable TREASURY;\n    address public immutable CALCULATION_VIEWS;\n    address public immutable VAULT_ACCOUNT_ACTION;\n    address public immutable VAULT_ACTION;\n    address private immutable DEPLOYER;\n\n    struct DeployedContracts {\n        address governance;\n        address views;\n        address initializeMarket;\n        address nTokenActions;\n        address batchAction;\n        address accountAction;\n        address erc1155;\n        address liquidateCurrency;\n        address liquidatefCash;\n        address cETH;\n        address treasury;\n        address calculationViews;\n        address vaultAccountAction;\n        address vaultAction;\n    }\n\n    constructor(\n        DeployedContracts memory contracts\n    ) {\n        GOVERNANCE = contracts.governance;\n        VIEWS = contracts.views;\n        INITIALIZE_MARKET = contracts.initializeMarket;\n        NTOKEN_ACTIONS = contracts.nTokenActions;\n        BATCH_ACTION = contracts.batchAction;\n        ACCOUNT_ACTION = contracts.accountAction;\n        ERC1155 = contracts.erc1155;\n        LIQUIDATE_CURRENCY = contracts.liquidateCurrency;\n        LIQUIDATE_FCASH = contracts.liquidatefCash;\n        cETH = contracts.cETH;\n        TREASURY = contracts.treasury;\n        CALCULATION_VIEWS = contracts.calculationViews;\n        VAULT_ACCOUNT_ACTION = contracts.vaultAccountAction;\n        VAULT_ACTION = contracts.vaultAction;\n\n        DEPLOYER = msg.sender;\n        // This will lock everyone from calling initialize on the implementation contract\n        hasInitialized = true;\n    }\n\n    function initialize(address owner_, address pauseRouter_, address pauseGuardian_) public {\n        // Check that only the deployer can initialize\n        require(msg.sender == DEPLOYER && !hasInitialized);\n\n        // Allow list currency to be called by this contract for the purposes of\n        // initializing ETH as a currency\n        owner = msg.sender;\n        // List ETH as currency id == 1, NOTE: return value is ignored here\n\n        // FIXME: on non-mainnet deployments we should be using WETH instead here...\n        (bool status, ) =\n            address(GOVERNANCE).delegatecall(\n                abi.encodeWithSelector(\n                    NotionalGovernance.listCurrency.selector,\n                    TokenStorage(cETH, false, TokenType.cETH, Constants.CETH_DECIMAL_PLACES, 0),\n                    // No underlying set for cETH\n                    TokenStorage(address(0), false, TokenType.Ether, Constants.ETH_DECIMAL_PLACES, 0),\n                    address(0),\n                    false,\n                    133, // Initial settings of 133% buffer\n                    75,  // 75% haircut\n                    108  // 8% liquidation discount\n                )\n            );\n        require(status);\n\n        owner = owner_;\n        // The pause guardian may downgrade the router to the pauseRouter\n        pauseRouter = pauseRouter_;\n        pauseGuardian = pauseGuardian_;\n\n        hasInitialized == true;\n    }\n\n    /// @notice Returns the implementation contract for the method signature\n    /// @param sig method signature to call\n    /// @return implementation address\n    function getRouterImplementation(bytes4 sig) public view returns (address) {\n        if (\n            sig == NotionalProxy.batchBalanceAction.selector ||\n            sig == NotionalProxy.batchBalanceAndTradeAction.selector ||\n            sig == NotionalProxy.batchBalanceAndTradeActionWithCallback.selector ||\n            sig == NotionalProxy.batchLend.selector\n        ) {\n            return BATCH_ACTION;\n        } else if (\n            sig == IVaultAccountAction.enterVault.selector ||\n            sig == IVaultAccountAction.rollVaultPosition.selector ||\n            sig == IVaultAccountAction.exitVault.selector ||\n            sig == IVaultAccountAction.deleverageAccount.selector ||\n            sig == IVaultAccountAction.getVaultAccount.selector ||\n            sig == IVaultAccountAction.getVaultAccountMaturity.selector ||\n            sig == IVaultAccountAction.getVaultAccountCollateralRatio.selector\n        ) {\n            return VAULT_ACCOUNT_ACTION;\n        } else if (\n            sig == NotionalProxy.depositUnderlyingToken.selector ||\n            sig == NotionalProxy.depositAssetToken.selector ||\n            sig == NotionalProxy.withdraw.selector ||\n            sig == NotionalProxy.settleAccount.selector ||\n            sig == NotionalProxy.nTokenRedeem.selector ||\n            sig == NotionalProxy.enableBitmapCurrency.selector\n        ) {\n            return ACCOUNT_ACTION;\n        } else if (\n            sig == nERC1155Interface.supportsInterface.selector ||\n            sig == nERC1155Interface.balanceOf.selector ||\n            sig == nERC1155Interface.balanceOfBatch.selector ||\n            sig == nERC1155Interface.signedBalanceOf.selector ||\n            sig == nERC1155Interface.signedBalanceOfBatch.selector ||\n            sig == nERC1155Interface.safeTransferFrom.selector ||\n            sig == nERC1155Interface.safeBatchTransferFrom.selector ||\n            sig == nERC1155Interface.decodeToAssets.selector ||\n            sig == nERC1155Interface.encodeToId.selector ||\n            sig == nERC1155Interface.setApprovalForAll.selector ||\n            sig == nERC1155Interface.isApprovedForAll.selector\n        ) {\n            return ERC1155;\n        } else if (\n            sig == INTokenAction.nTokenTotalSupply.selector ||\n            sig == INTokenAction.nTokenTransferAllowance.selector ||\n            sig == INTokenAction.nTokenBalanceOf.selector ||\n            sig == INTokenAction.nTokenTransferApprove.selector ||\n            sig == INTokenAction.nTokenTransfer.selector ||\n            sig == INTokenAction.nTokenTransferFrom.selector ||\n            sig == INTokenAction.nTokenTransferApproveAll.selector ||\n            sig == INTokenAction.nTokenClaimIncentives.selector ||\n            sig == INTokenAction.nTokenPresentValueAssetDenominated.selector ||\n            sig == INTokenAction.nTokenPresentValueUnderlyingDenominated.selector ||\n            sig == INTokenAction.nTokenPresentValueUnderlyingExternal.selector ||\n            sig == INTokenAction.nTokenRedeemViaProxy.selector ||\n            sig == INTokenAction.nTokenMintViaProxy.selector\n        ) {\n            return NTOKEN_ACTIONS;\n        } else if (\n            sig == NotionalProxy.liquidateLocalCurrency.selector ||\n            sig == NotionalProxy.liquidateCollateralCurrency.selector ||\n            sig == NotionalProxy.calculateLocalCurrencyLiquidation.selector ||\n            sig == NotionalProxy.calculateCollateralCurrencyLiquidation.selector\n        ) {\n            return LIQUIDATE_CURRENCY;\n        } else if (\n            sig == NotionalProxy.liquidatefCashLocal.selector ||\n            sig == NotionalProxy.liquidatefCashCrossCurrency.selector ||\n            sig == NotionalProxy.calculatefCashLocalLiquidation.selector ||\n            sig == NotionalProxy.calculatefCashCrossCurrencyLiquidation.selector\n        ) {\n            return LIQUIDATE_FCASH;\n        } else if (\n            sig == IVaultAction.updateVault.selector ||\n            sig == IVaultAction.setVaultPauseStatus.selector ||\n            sig == IVaultAction.reduceMaxBorrowCapacity.selector ||\n            sig == IVaultAction.updateSecondaryBorrowCapacity.selector ||\n            sig == IVaultAction.depositVaultCashToStrategyTokens.selector ||\n            sig == IVaultAction.redeemStrategyTokensToCash.selector ||\n            sig == IVaultAction.borrowSecondaryCurrencyToVault.selector ||\n            sig == IVaultAction.repaySecondaryCurrencyFromVault.selector ||\n            sig == IVaultAction.settleVault.selector ||\n            sig == IVaultAction.getVaultConfig.selector ||\n            sig == IVaultAction.getBorrowCapacity.selector ||\n            sig == IVaultAction.getSecondaryBorrow.selector ||\n            sig == IVaultAction.getVaultState.selector ||\n            sig == IVaultAction.getCashRequiredToSettle.selector\n        ) {\n            return VAULT_ACTION;\n        } else if (\n            sig == NotionalProxy.initializeMarkets.selector ||\n            sig == NotionalProxy.sweepCashIntoMarkets.selector\n        ) {\n            return INITIALIZE_MARKET;\n        } else if (\n            sig == NotionalGovernance.listCurrency.selector ||\n            sig == NotionalGovernance.enableCashGroup.selector ||\n            sig == NotionalGovernance.updateCashGroup.selector ||\n            sig == NotionalGovernance.updateAssetRate.selector ||\n            sig == NotionalGovernance.updateETHRate.selector ||\n            sig == NotionalGovernance.transferOwnership.selector ||\n            sig == NotionalGovernance.claimOwnership.selector ||\n            sig == NotionalGovernance.updateIncentiveEmissionRate.selector ||\n            sig == NotionalGovernance.updateMaxCollateralBalance.selector ||\n            sig == NotionalGovernance.updateDepositParameters.selector ||\n            sig == NotionalGovernance.updateInitializationParameters.selector ||\n            sig == NotionalGovernance.updateTokenCollateralParameters.selector ||\n            sig == NotionalGovernance.updateGlobalTransferOperator.selector ||\n            sig == NotionalGovernance.updateAuthorizedCallbackContract.selector ||\n            sig == NotionalGovernance.setLendingPool.selector ||\n            sig == NotionalGovernance.upgradeNTokenBeacon.selector ||\n            sig == NotionalProxy.upgradeTo.selector ||\n            sig == NotionalProxy.upgradeToAndCall.selector\n        ) {\n            return GOVERNANCE;\n        } else if (\n            sig == NotionalTreasury.claimCOMPAndTransfer.selector ||\n            sig == NotionalTreasury.transferReserveToTreasury.selector ||\n            sig == NotionalTreasury.setTreasuryManager.selector ||\n            sig == NotionalTreasury.setReserveBuffer.selector ||\n            sig == NotionalTreasury.setReserveCashBalance.selector\n        ) {\n            return TREASURY;\n        } else if (\n            sig == NotionalCalculations.calculateNTokensToMint.selector ||\n            sig == NotionalCalculations.getfCashAmountGivenCashAmount.selector ||\n            sig == NotionalCalculations.getCashAmountGivenfCashAmount.selector ||\n            sig == NotionalCalculations.nTokenGetClaimableIncentives.selector ||\n            sig == NotionalCalculations.getPresentfCashValue.selector ||\n            sig == NotionalCalculations.getMarketIndex.selector ||\n            sig == NotionalCalculations.getfCashLendFromDeposit.selector ||\n            sig == NotionalCalculations.getfCashBorrowFromPrincipal.selector ||\n            sig == NotionalCalculations.getDepositFromfCashLend.selector ||\n            sig == NotionalCalculations.getPrincipalFromfCashBorrow.selector ||\n            sig == NotionalCalculations.convertCashBalanceToExternal.selector\n        ) {\n            return CALCULATION_VIEWS;\n        } else {\n            // If not found then delegate to views. This will revert if there is no method on\n            // the view contract\n            return VIEWS;\n        }\n    }\n\n    /// @dev Delegates the current call to `implementation`.\n    /// This function does not return to its internal call site, it will return directly to the external caller.\n    function _delegate(address implementation) private {\n        // solhint-disable-next-line no-inline-assembly\n        assembly {\n            // Copy msg.data. We take full control of memory in this inline assembly\n            // block because it will not return to Solidity code. We overwrite the\n            // Solidity scratch pad at memory position 0.\n            calldatacopy(0, 0, calldatasize())\n\n            // Call the implementation.\n            // out and outsize are 0 because we don't know the size yet.\n            let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0)\n\n            // Copy the returned data.\n            returndatacopy(0, 0, returndatasize())\n\n            switch result\n                // delegatecall returns 0 on error.\n                case 0 {\n                    revert(0, returndatasize())\n                }\n                default {\n                    return(0, returndatasize())\n                }\n        }\n    }\n\n    fallback() external payable {\n        _delegate(getRouterImplementation(msg.sig));\n    }\n\n    // NOTE: receive() is overridden in \"nProxy\" to allow for eth transfers to succeed\n}\n",
  "sourceMap": "1271:12916:24:-:0;;;2491:880;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2576:20;;-1:-1:-1;;;;;;2563:33:24;;;;;;;;;;2614:15;;;;2606:23;;;;;;;;2659:26;;;;2639:46;;;;;;;;2712:23;;;;2695:40;;;;;;;;2760:21;;;;2745:36;;;;;;;;2808:23;;;;2791:40;;;;;;;;2851:17;;;;2841:27;;;;;;;;2899;;;;2878:48;;;;;;;;2954:24;;;;2936:42;;;;;;;;2995:14;;;;2988:21;;;;;;;;3030:18;;;;3019:29;;;;;;3078:26;;;;3058:46;;;;;;3137:28;;;3114:51;;;;;;3190:21;;;;3175:36;;;;;;;3233:10;3222:21;;;;2576:20;3343:21;;-1:-1:-1;;3343:21:24;;;;;1271:12916;;14:179:184;95:13;;-1:-1:-1;;;;;137:31:184;;127:42;;117:2;;183:1;180;173:12;117:2;76:117;;;:::o;198:1578::-;;334:3;378:2;366:9;357:7;353:23;349:32;346:2;;;399:6;391;384:22;346:2;430:18;445:2;430:18;:::i;:::-;417:31;;471:42;503:9;471:42;:::i;:::-;464:5;457:57;546:51;593:2;582:9;578:18;546:51;:::i;:::-;541:2;534:5;530:14;523:75;630:51;677:2;666:9;662:18;630:51;:::i;:::-;625:2;618:5;614:14;607:75;714:51;761:2;750:9;746:18;714:51;:::i;:::-;709:2;702:5;698:14;691:75;799:52;846:3;835:9;831:19;799:52;:::i;:::-;793:3;786:5;782:15;775:77;885:52;932:3;921:9;917:19;885:52;:::i;:::-;879:3;872:5;868:15;861:77;971:52;1018:3;1007:9;1003:19;971:52;:::i;:::-;965:3;958:5;954:15;947:77;1057:52;1104:3;1093:9;1089:19;1057:52;:::i;:::-;1051:3;1044:5;1040:15;1033:77;1129:3;1164:51;1211:2;1200:9;1196:18;1164:51;:::i;:::-;1148:14;;;1141:75;1235:3;1270:51;1302:18;;;1270:51;:::i;:::-;1254:14;;;1247:75;1341:3;1376:51;1408:18;;;1376:51;:::i;:::-;1360:14;;;1353:75;1447:3;1482:51;1514:18;;;1482:51;:::i;:::-;1466:14;;;1459:75;1553:3;1588:51;1620:18;;;1588:51;:::i;:::-;1572:14;;;1565:75;1659:3;1694:51;1726:18;;;1694:51;:::i;:::-;1678:14;;;1671:75;1682:5;314:1462;-1:-1:-1;;;314:1462:184:o;1781:242::-;1851:2;1845:9;1881:17;;;-1:-1:-1;;;;;1913:34:184;;1949:22;;;1910:62;1907:2;;;1975:9;1907:2;2002;1995:22;1825:198;;-1:-1:-1;1825:198:184:o;:::-;1271:12916:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/external/Router.sol",
  "type": "contract"
}