{
  "abi": [
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "governance",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "views",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "initializeMarket",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "nTokenActions",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "batchAction",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "accountAction",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "erc1155",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "liquidateCurrency",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "liquidatefCash",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "cETH",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "treasury",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "calculationViews",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "vaultAccountAction",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "vaultAction",
              "type": "address"
            }
          ],
          "internalType": "struct Router.DeployedContracts",
          "name": "contracts",
          "type": "tuple"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "ACCOUNT_ACTION",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "BATCH_ACTION",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "CALCULATION_VIEWS",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ERC1155",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "GOVERNANCE",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "INITIALIZE_MARKET",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "LIQUIDATE_CURRENCY",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "LIQUIDATE_FCASH",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "NTOKEN_ACTIONS",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "TREASURY",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "VAULT_ACCOUNT_ACTION",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "VAULT_ACTION",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "VIEWS",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cETH",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "sig",
          "type": "bytes4"
        }
      ],
      "name": "getRouterImplementation",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "pauseRouter_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "pauseGuardian_",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pauseGuardian",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pauseRouter",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "13": "contracts/global/Constants.sol",
    "16": "contracts/global/StorageLayoutV1.sol",
    "17": "contracts/global/Types.sol",
    "6": "contracts/external/Router.sol"
  },
  "ast": {
    "absolutePath": "contracts/external/Router.sol",
    "exportedSymbols": {
      "ABDKMath64x64": [
        31382
      ],
      "AaveHandler": [
        26819
      ],
      "AccountBalance": [
        10203
      ],
      "AccountContext": [
        10122
      ],
      "AccountContextHandler": [
        28293
      ],
      "AggregatorInterface": [
        33537
      ],
      "AggregatorV2V3Interface": [
        25563
      ],
      "AggregatorV3Interface": [
        33583
      ],
      "AssetHandler": [
        33489
      ],
      "AssetRate": [
        14777
      ],
      "AssetRateAdapter": [
        25607
      ],
      "AssetRateParameters": [
        10018
      ],
      "AssetRateStorage": [
        10086
      ],
      "AssetStorageState": [
        9879
      ],
      "BalanceAction": [
        9900
      ],
      "BalanceActionWithTrades": [
        9916
      ],
      "BalanceHandler": [
        18134
      ],
      "BalanceState": [
        10011
      ],
      "BalanceStorage": [
        10146
      ],
      "BatchLend": [
        9887
      ],
      "Bitmap": [
        32412
      ],
      "BitmapAssetsHandler": [
        32071
      ],
      "CErc20Interface": [
        33722
      ],
      "CEtherInterface": [
        33728
      ],
      "CTokenInterface": [
        36140
      ],
      "CashGroup": [
        19569
      ],
      "CashGroupParameters": [
        10027
      ],
      "CashGroupSettings": [
        10111
      ],
      "CompoundHandler": [
        27010
      ],
      "Constants": [
        14204
      ],
      "Context": [
        33606
      ],
      "DateTime": [
        20208
      ],
      "Deployments": [
        26576
      ],
      "DepositActionType": [
        9874
      ],
      "ERC20": [
        26569
      ],
      "ETHRate": [
        9992
      ],
      "ETHRateStorage": [
        10081
      ],
      "FloatingPoint56": [
        28558
      ],
      "GenericToken": [
        18290
      ],
      "IAToken": [
        33628
      ],
      "IATokenFull": [
        33663
      ],
      "IEIP20NonStandard": [
        28628
      ],
      "IERC20": [
        15272
      ],
      "ILendingPool": [
        25689
      ],
      "INTokenAction": [
        10462
      ],
      "IRewarder": [
        25707
      ],
      "IScaledBalanceToken": [
        33653
      ],
      "IVaultAccountAction": [
        11013
      ],
      "IVaultAction": [
        10821
      ],
      "IVaultController": [
        11018
      ],
      "Incentives": [
        28482
      ],
      "LendingPoolStorage": [
        25613
      ],
      "LibStorage": [
        13673
      ],
      "LiquidationFactors": [
        9970
      ],
      "Market": [
        22673
      ],
      "MarketParameters": [
        10057
      ],
      "MarketStorage": [
        10166
      ],
      "MigrateIncentives": [
        35972
      ],
      "NotionalCalculations": [
        11188
      ],
      "NotionalGovernance": [
        11437
      ],
      "NotionalProxy": [
        11908
      ],
      "NotionalTreasury": [
        25775
      ],
      "NotionalViews": [
        26066
      ],
      "PortfolioAsset": [
        10040
      ],
      "PortfolioAssetStorage": [
        10178
      ],
      "PortfolioHandler": [
        25554
      ],
      "PortfolioState": [
        9981
      ],
      "Router": [
        921
      ],
      "SafeInt256": [
        15129
      ],
      "SafeMath": [
        20759
      ],
      "SettleAmount": [
        9921
      ],
      "SettlementRateStorage": [
        10153
      ],
      "StorageLayoutV1": [
        9847
      ],
      "Token": [
        9932
      ],
      "TokenHandler": [
        13134
      ],
      "TokenStorage": [
        10068
      ],
      "TokenType": [
        9859
      ],
      "TradeActionType": [
        9866
      ],
      "TransferAssets": [
        27545
      ],
      "VaultAccount": [
        10323
      ],
      "VaultAccountSecondaryDebtShareStorage": [
        10312
      ],
      "VaultAccountStorage": [
        10305
      ],
      "VaultBorrowCapacityStorage": [
        10231
      ],
      "VaultConfig": [
        10265
      ],
      "VaultConfigStorage": [
        10226
      ],
      "VaultSecondaryBorrowStorage": [
        10238
      ],
      "VaultSettledAssetsStorage": [
        10283
      ],
      "VaultState": [
        10298
      ],
      "VaultStateStorage": [
        10278
      ],
      "ifCashStorage": [
        10169
      ],
      "nERC1155Interface": [
        12069
      ],
      "nTokenCalculations": [
        23237
      ],
      "nTokenContext": [
        10137
      ],
      "nTokenHandler": [
        24263
      ],
      "nTokenMintAction": [
        9793
      ],
      "nTokenPortfolio": [
        9947
      ],
      "nTokenSupply": [
        32714
      ],
      "nTokenTotalSupplyStorage": [
        10192
      ],
      "nTokenTotalSupplyStorage_deprecated": [
        10185
      ]
    },
    "id": 922,
    "license": "GPL-3.0-only",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "=",
          "0.7",
          ".6"
        ],
        "nodeType": "PragmaDirective",
        "src": "41:23:6"
      },
      {
        "id": 2,
        "literals": [
          "abicoder",
          "v2"
        ],
        "nodeType": "PragmaDirective",
        "src": "65:19:6"
      },
      {
        "absolutePath": "contracts/external/actions/nTokenMintAction.sol",
        "file": "./actions/nTokenMintAction.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 922,
        "sourceUnit": 9794,
        "src": "86:40:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/global/StorageLayoutV1.sol",
        "file": "../global/StorageLayoutV1.sol",
        "id": 4,
        "nodeType": "ImportDirective",
        "scope": 922,
        "sourceUnit": 9848,
        "src": "127:39:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/global/Types.sol",
        "file": "../global/Types.sol",
        "id": 5,
        "nodeType": "ImportDirective",
        "scope": 922,
        "sourceUnit": 10324,
        "src": "167:29:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/notional/INTokenAction.sol",
        "file": "../../interfaces/notional/INTokenAction.sol",
        "id": 7,
        "nodeType": "ImportDirective",
        "scope": 922,
        "sourceUnit": 10463,
        "src": "197:74:6",
        "symbolAliases": [
          {
            "foreign": {
              "id": 6,
              "name": "INTokenAction",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "205:13:6",
              "typeDescriptions": {}
            }
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/notional/NotionalProxy.sol",
        "file": "../../interfaces/notional/NotionalProxy.sol",
        "id": 8,
        "nodeType": "ImportDirective",
        "scope": 922,
        "sourceUnit": 11909,
        "src": "272:53:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/notional/IVaultController.sol",
        "file": "../../interfaces/notional/IVaultController.sol",
        "id": 11,
        "nodeType": "ImportDirective",
        "scope": 922,
        "sourceUnit": 11019,
        "src": "326:97:6",
        "symbolAliases": [
          {
            "foreign": {
              "id": 9,
              "name": "IVaultAction",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "334:12:6",
              "typeDescriptions": {}
            }
          },
          {
            "foreign": {
              "id": 10,
              "name": "IVaultAccountAction",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "348:19:6",
              "typeDescriptions": {}
            }
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/notional/nERC1155Interface.sol",
        "file": "../../interfaces/notional/nERC1155Interface.sol",
        "id": 13,
        "nodeType": "ImportDirective",
        "scope": 922,
        "sourceUnit": 12070,
        "src": "424:82:6",
        "symbolAliases": [
          {
            "foreign": {
              "id": 12,
              "name": "nERC1155Interface",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "432:17:6",
              "typeDescriptions": {}
            }
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/notional/NotionalGovernance.sol",
        "file": "../../interfaces/notional/NotionalGovernance.sol",
        "id": 15,
        "nodeType": "ImportDirective",
        "scope": 922,
        "sourceUnit": 11438,
        "src": "507:84:6",
        "symbolAliases": [
          {
            "foreign": {
              "id": 14,
              "name": "NotionalGovernance",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "515:18:6",
              "typeDescriptions": {}
            }
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/notional/NotionalCalculations.sol",
        "file": "../../interfaces/notional/NotionalCalculations.sol",
        "id": 17,
        "nodeType": "ImportDirective",
        "scope": 922,
        "sourceUnit": 11189,
        "src": "592:88:6",
        "symbolAliases": [
          {
            "foreign": {
              "id": 16,
              "name": "NotionalCalculations",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "600:20:6",
              "typeDescriptions": {}
            }
          }
        ],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 19,
              "name": "StorageLayoutV1",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 9847,
              "src": "1290:15:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_StorageLayoutV1_$9847",
                "typeString": "contract StorageLayoutV1"
              }
            },
            "id": 20,
            "nodeType": "InheritanceSpecifier",
            "src": "1290:15:6"
          }
        ],
        "contractDependencies": [
          9847
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 18,
          "nodeType": "StructuredDocumentation",
          "src": "682:588:6",
          "text": " @notice Sits behind an upgradeable proxy and routes methods to an appropriate implementation contract. All storage\n will sit inside the upgradeable proxy and this router will authorize the call and re-route the calls to implementing\n contracts.\n This pattern adds an additional hop between the proxy and the ultimate implementation contract, however, it also\n allows for atomic upgrades of the entire system. Individual implementation contracts will be deployed and then a\n new Router with the new hardcoded addresses will then be deployed and upgraded into place."
        },
        "fullyImplemented": true,
        "id": 921,
        "linearizedBaseContracts": [
          921,
          9847
        ],
        "name": "Router",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "14627834",
            "id": 22,
            "mutability": "immutable",
            "name": "GOVERNANCE",
            "nodeType": "VariableDeclaration",
            "scope": 921,
            "src": "1390:35:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 21,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1390:7:6",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "0c4e7935",
            "id": 24,
            "mutability": "immutable",
            "name": "VIEWS",
            "nodeType": "VariableDeclaration",
            "scope": 921,
            "src": "1431:30:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 23,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1431:7:6",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "dcc1a738",
            "id": 26,
            "mutability": "immutable",
            "name": "INITIALIZE_MARKET",
            "nodeType": "VariableDeclaration",
            "scope": 921,
            "src": "1467:42:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 25,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1467:7:6",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "15beeb93",
            "id": 28,
            "mutability": "immutable",
            "name": "NTOKEN_ACTIONS",
            "nodeType": "VariableDeclaration",
            "scope": 921,
            "src": "1515:39:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 27,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1515:7:6",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "6d7cdbbf",
            "id": 30,
            "mutability": "immutable",
            "name": "BATCH_ACTION",
            "nodeType": "VariableDeclaration",
            "scope": 921,
            "src": "1560:37:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 29,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1560:7:6",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "6009b8e6",
            "id": 32,
            "mutability": "immutable",
            "name": "ACCOUNT_ACTION",
            "nodeType": "VariableDeclaration",
            "scope": 921,
            "src": "1603:39:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 31,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1603:7:6",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "2d255471",
            "id": 34,
            "mutability": "immutable",
            "name": "ERC1155",
            "nodeType": "VariableDeclaration",
            "scope": 921,
            "src": "1648:32:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 33,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1648:7:6",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "2be75895",
            "id": 36,
            "mutability": "immutable",
            "name": "LIQUIDATE_CURRENCY",
            "nodeType": "VariableDeclaration",
            "scope": 921,
            "src": "1686:43:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 35,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1686:7:6",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "206109b5",
            "id": 38,
            "mutability": "immutable",
            "name": "LIQUIDATE_FCASH",
            "nodeType": "VariableDeclaration",
            "scope": 921,
            "src": "1735:40:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 37,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1735:7:6",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "a1b4d011",
            "id": 40,
            "mutability": "immutable",
            "name": "cETH",
            "nodeType": "VariableDeclaration",
            "scope": 921,
            "src": "1781:29:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 39,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1781:7:6",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "2d2c5565",
            "id": 42,
            "mutability": "immutable",
            "name": "TREASURY",
            "nodeType": "VariableDeclaration",
            "scope": 921,
            "src": "1816:33:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 41,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1816:7:6",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "72d27134",
            "id": 44,
            "mutability": "immutable",
            "name": "CALCULATION_VIEWS",
            "nodeType": "VariableDeclaration",
            "scope": 921,
            "src": "1855:42:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 43,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1855:7:6",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "ba6b7fc2",
            "id": 46,
            "mutability": "immutable",
            "name": "VAULT_ACCOUNT_ACTION",
            "nodeType": "VariableDeclaration",
            "scope": 921,
            "src": "1903:45:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 45,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1903:7:6",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "d8e310a4",
            "id": 48,
            "mutability": "immutable",
            "name": "VAULT_ACTION",
            "nodeType": "VariableDeclaration",
            "scope": 921,
            "src": "1954:37:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 47,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1954:7:6",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 50,
            "mutability": "immutable",
            "name": "DEPLOYER",
            "nodeType": "VariableDeclaration",
            "scope": 921,
            "src": "1997:34:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 49,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1997:7:6",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "canonicalName": "Router.DeployedContracts",
            "id": 79,
            "members": [
              {
                "constant": false,
                "id": 52,
                "mutability": "mutable",
                "name": "governance",
                "nodeType": "VariableDeclaration",
                "scope": 79,
                "src": "2073:18:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 51,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2073:7:6",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 54,
                "mutability": "mutable",
                "name": "views",
                "nodeType": "VariableDeclaration",
                "scope": 79,
                "src": "2101:13:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 53,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2101:7:6",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 56,
                "mutability": "mutable",
                "name": "initializeMarket",
                "nodeType": "VariableDeclaration",
                "scope": 79,
                "src": "2124:24:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 55,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2124:7:6",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 58,
                "mutability": "mutable",
                "name": "nTokenActions",
                "nodeType": "VariableDeclaration",
                "scope": 79,
                "src": "2158:21:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 57,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2158:7:6",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 60,
                "mutability": "mutable",
                "name": "batchAction",
                "nodeType": "VariableDeclaration",
                "scope": 79,
                "src": "2189:19:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 59,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2189:7:6",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 62,
                "mutability": "mutable",
                "name": "accountAction",
                "nodeType": "VariableDeclaration",
                "scope": 79,
                "src": "2218:21:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 61,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2218:7:6",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 64,
                "mutability": "mutable",
                "name": "erc1155",
                "nodeType": "VariableDeclaration",
                "scope": 79,
                "src": "2249:15:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 63,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2249:7:6",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 66,
                "mutability": "mutable",
                "name": "liquidateCurrency",
                "nodeType": "VariableDeclaration",
                "scope": 79,
                "src": "2274:25:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 65,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2274:7:6",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 68,
                "mutability": "mutable",
                "name": "liquidatefCash",
                "nodeType": "VariableDeclaration",
                "scope": 79,
                "src": "2309:22:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 67,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2309:7:6",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 70,
                "mutability": "mutable",
                "name": "cETH",
                "nodeType": "VariableDeclaration",
                "scope": 79,
                "src": "2341:12:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 69,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2341:7:6",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 72,
                "mutability": "mutable",
                "name": "treasury",
                "nodeType": "VariableDeclaration",
                "scope": 79,
                "src": "2363:16:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 71,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2363:7:6",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 74,
                "mutability": "mutable",
                "name": "calculationViews",
                "nodeType": "VariableDeclaration",
                "scope": 79,
                "src": "2389:24:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 73,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2389:7:6",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 76,
                "mutability": "mutable",
                "name": "vaultAccountAction",
                "nodeType": "VariableDeclaration",
                "scope": 79,
                "src": "2423:26:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 75,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2423:7:6",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 78,
                "mutability": "mutable",
                "name": "vaultAction",
                "nodeType": "VariableDeclaration",
                "scope": 79,
                "src": "2459:19:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 77,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2459:7:6",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "DeployedContracts",
            "nodeType": "StructDefinition",
            "scope": 921,
            "src": "2038:447:6",
            "visibility": "public"
          },
          {
            "body": {
              "id": 163,
              "nodeType": "Block",
              "src": "2553:818:6",
              "statements": [
                {
                  "expression": {
                    "id": 87,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 84,
                      "name": "GOVERNANCE",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22,
                      "src": "2563:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 85,
                        "name": "contracts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 81,
                        "src": "2576:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DeployedContracts_$79_memory_ptr",
                          "typeString": "struct Router.DeployedContracts memory"
                        }
                      },
                      "id": 86,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "governance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 52,
                      "src": "2576:20:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2563:33:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 88,
                  "nodeType": "ExpressionStatement",
                  "src": "2563:33:6"
                },
                {
                  "expression": {
                    "id": 92,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 89,
                      "name": "VIEWS",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24,
                      "src": "2606:5:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 90,
                        "name": "contracts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 81,
                        "src": "2614:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DeployedContracts_$79_memory_ptr",
                          "typeString": "struct Router.DeployedContracts memory"
                        }
                      },
                      "id": 91,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "views",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 54,
                      "src": "2614:15:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2606:23:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 93,
                  "nodeType": "ExpressionStatement",
                  "src": "2606:23:6"
                },
                {
                  "expression": {
                    "id": 97,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 94,
                      "name": "INITIALIZE_MARKET",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26,
                      "src": "2639:17:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 95,
                        "name": "contracts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 81,
                        "src": "2659:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DeployedContracts_$79_memory_ptr",
                          "typeString": "struct Router.DeployedContracts memory"
                        }
                      },
                      "id": 96,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initializeMarket",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 56,
                      "src": "2659:26:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2639:46:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 98,
                  "nodeType": "ExpressionStatement",
                  "src": "2639:46:6"
                },
                {
                  "expression": {
                    "id": 102,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 99,
                      "name": "NTOKEN_ACTIONS",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28,
                      "src": "2695:14:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 100,
                        "name": "contracts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 81,
                        "src": "2712:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DeployedContracts_$79_memory_ptr",
                          "typeString": "struct Router.DeployedContracts memory"
                        }
                      },
                      "id": 101,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "nTokenActions",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 58,
                      "src": "2712:23:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2695:40:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 103,
                  "nodeType": "ExpressionStatement",
                  "src": "2695:40:6"
                },
                {
                  "expression": {
                    "id": 107,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 104,
                      "name": "BATCH_ACTION",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30,
                      "src": "2745:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 105,
                        "name": "contracts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 81,
                        "src": "2760:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DeployedContracts_$79_memory_ptr",
                          "typeString": "struct Router.DeployedContracts memory"
                        }
                      },
                      "id": 106,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "batchAction",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 60,
                      "src": "2760:21:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2745:36:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 108,
                  "nodeType": "ExpressionStatement",
                  "src": "2745:36:6"
                },
                {
                  "expression": {
                    "id": 112,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 109,
                      "name": "ACCOUNT_ACTION",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32,
                      "src": "2791:14:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 110,
                        "name": "contracts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 81,
                        "src": "2808:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DeployedContracts_$79_memory_ptr",
                          "typeString": "struct Router.DeployedContracts memory"
                        }
                      },
                      "id": 111,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "accountAction",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 62,
                      "src": "2808:23:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2791:40:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 113,
                  "nodeType": "ExpressionStatement",
                  "src": "2791:40:6"
                },
                {
                  "expression": {
                    "id": 117,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 114,
                      "name": "ERC1155",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34,
                      "src": "2841:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 115,
                        "name": "contracts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 81,
                        "src": "2851:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DeployedContracts_$79_memory_ptr",
                          "typeString": "struct Router.DeployedContracts memory"
                        }
                      },
                      "id": 116,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "erc1155",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 64,
                      "src": "2851:17:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2841:27:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 118,
                  "nodeType": "ExpressionStatement",
                  "src": "2841:27:6"
                },
                {
                  "expression": {
                    "id": 122,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 119,
                      "name": "LIQUIDATE_CURRENCY",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36,
                      "src": "2878:18:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 120,
                        "name": "contracts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 81,
                        "src": "2899:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DeployedContracts_$79_memory_ptr",
                          "typeString": "struct Router.DeployedContracts memory"
                        }
                      },
                      "id": 121,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "liquidateCurrency",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 66,
                      "src": "2899:27:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2878:48:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 123,
                  "nodeType": "ExpressionStatement",
                  "src": "2878:48:6"
                },
                {
                  "expression": {
                    "id": 127,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 124,
                      "name": "LIQUIDATE_FCASH",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38,
                      "src": "2936:15:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 125,
                        "name": "contracts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 81,
                        "src": "2954:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DeployedContracts_$79_memory_ptr",
                          "typeString": "struct Router.DeployedContracts memory"
                        }
                      },
                      "id": 126,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "liquidatefCash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 68,
                      "src": "2954:24:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2936:42:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 128,
                  "nodeType": "ExpressionStatement",
                  "src": "2936:42:6"
                },
                {
                  "expression": {
                    "id": 132,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 129,
                      "name": "cETH",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40,
                      "src": "2988:4:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 130,
                        "name": "contracts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 81,
                        "src": "2995:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DeployedContracts_$79_memory_ptr",
                          "typeString": "struct Router.DeployedContracts memory"
                        }
                      },
                      "id": 131,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "cETH",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 70,
                      "src": "2995:14:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2988:21:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 133,
                  "nodeType": "ExpressionStatement",
                  "src": "2988:21:6"
                },
                {
                  "expression": {
                    "id": 137,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 134,
                      "name": "TREASURY",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42,
                      "src": "3019:8:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 135,
                        "name": "contracts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 81,
                        "src": "3030:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DeployedContracts_$79_memory_ptr",
                          "typeString": "struct Router.DeployedContracts memory"
                        }
                      },
                      "id": 136,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "treasury",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 72,
                      "src": "3030:18:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3019:29:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 138,
                  "nodeType": "ExpressionStatement",
                  "src": "3019:29:6"
                },
                {
                  "expression": {
                    "id": 142,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 139,
                      "name": "CALCULATION_VIEWS",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44,
                      "src": "3058:17:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 140,
                        "name": "contracts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 81,
                        "src": "3078:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DeployedContracts_$79_memory_ptr",
                          "typeString": "struct Router.DeployedContracts memory"
                        }
                      },
                      "id": 141,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "calculationViews",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 74,
                      "src": "3078:26:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3058:46:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 143,
                  "nodeType": "ExpressionStatement",
                  "src": "3058:46:6"
                },
                {
                  "expression": {
                    "id": 147,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 144,
                      "name": "VAULT_ACCOUNT_ACTION",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46,
                      "src": "3114:20:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 145,
                        "name": "contracts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 81,
                        "src": "3137:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DeployedContracts_$79_memory_ptr",
                          "typeString": "struct Router.DeployedContracts memory"
                        }
                      },
                      "id": 146,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "vaultAccountAction",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 76,
                      "src": "3137:28:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3114:51:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 148,
                  "nodeType": "ExpressionStatement",
                  "src": "3114:51:6"
                },
                {
                  "expression": {
                    "id": 152,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 149,
                      "name": "VAULT_ACTION",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48,
                      "src": "3175:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 150,
                        "name": "contracts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 81,
                        "src": "3190:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DeployedContracts_$79_memory_ptr",
                          "typeString": "struct Router.DeployedContracts memory"
                        }
                      },
                      "id": 151,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "vaultAction",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 78,
                      "src": "3190:21:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3175:36:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 153,
                  "nodeType": "ExpressionStatement",
                  "src": "3175:36:6"
                },
                {
                  "expression": {
                    "id": 157,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 154,
                      "name": "DEPLOYER",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50,
                      "src": "3222:8:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 155,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "3233:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 156,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "3233:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "3222:21:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 158,
                  "nodeType": "ExpressionStatement",
                  "src": "3222:21:6"
                },
                {
                  "expression": {
                    "id": 161,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 159,
                      "name": "hasInitialized",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9804,
                      "src": "3343:14:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 160,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3360:4:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3343:21:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 162,
                  "nodeType": "ExpressionStatement",
                  "src": "3343:21:6"
                }
              ]
            },
            "id": 164,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 82,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 81,
                  "mutability": "mutable",
                  "name": "contracts",
                  "nodeType": "VariableDeclaration",
                  "scope": 164,
                  "src": "2512:34:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_DeployedContracts_$79_memory_ptr",
                    "typeString": "struct Router.DeployedContracts"
                  },
                  "typeName": {
                    "id": 80,
                    "name": "DeployedContracts",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 79,
                    "src": "2512:17:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_DeployedContracts_$79_storage_ptr",
                      "typeString": "struct Router.DeployedContracts"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2502:50:6"
            },
            "returnParameters": {
              "id": 83,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2553:0:6"
            },
            "scope": 921,
            "src": "2491:880:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 252,
              "nodeType": "Block",
              "src": "3466:1337:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 180,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 177,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 174,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "3539:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 175,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3539:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 176,
                            "name": "DEPLOYER",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50,
                            "src": "3553:8:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3539:22:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "id": 179,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "3565:15:6",
                          "subExpression": {
                            "id": 178,
                            "name": "hasInitialized",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9804,
                            "src": "3566:14:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "3539:41:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 173,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3531:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 181,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3531:50:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 182,
                  "nodeType": "ExpressionStatement",
                  "src": "3531:50:6"
                },
                {
                  "expression": {
                    "id": 186,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 183,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9806,
                      "src": "3715:5:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 184,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "3723:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 185,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "3723:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "3715:18:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 187,
                  "nodeType": "ExpressionStatement",
                  "src": "3715:18:6"
                },
                {
                  "assignments": [
                    189,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 189,
                      "mutability": "mutable",
                      "name": "status",
                      "nodeType": "VariableDeclaration",
                      "scope": 252,
                      "src": "3906:11:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 188,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "3906:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 231,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 197,
                                "name": "NotionalGovernance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 11437,
                                "src": "4029:18:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_NotionalGovernance_$11437_$",
                                  "typeString": "type(contract NotionalGovernance)"
                                }
                              },
                              "id": 198,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "listCurrency",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 11317,
                              "src": "4029:31:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_declaration_nonpayable$_t_struct$_TokenStorage_$10068_calldata_ptr_$_t_struct$_TokenStorage_$10068_calldata_ptr_$_t_contract$_AggregatorV2V3Interface_$25563_$_t_bool_$_t_uint8_$_t_uint8_$_t_uint8_$returns$_t_uint16_$",
                                "typeString": "function NotionalGovernance.listCurrency(struct TokenStorage calldata,struct TokenStorage calldata,contract AggregatorV2V3Interface,bool,uint8,uint8,uint8) returns (uint16)"
                              }
                            },
                            "id": 199,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "4029:40:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 201,
                                "name": "cETH",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 40,
                                "src": "4104:4:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "hexValue": "66616c7365",
                                "id": 202,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4110:5:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "false"
                              },
                              {
                                "expression": {
                                  "id": 203,
                                  "name": "TokenType",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 9859,
                                  "src": "4117:9:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_TokenType_$9859_$",
                                    "typeString": "type(enum TokenType)"
                                  }
                                },
                                "id": 204,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "cETH",
                                "nodeType": "MemberAccess",
                                "src": "4117:14:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_TokenType_$9859",
                                  "typeString": "enum TokenType"
                                }
                              },
                              {
                                "expression": {
                                  "id": 205,
                                  "name": "Constants",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 14204,
                                  "src": "4133:9:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_Constants_$14204_$",
                                    "typeString": "type(library Constants)"
                                  }
                                },
                                "id": 206,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "CETH_DECIMAL_PLACES",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 13944,
                                "src": "4133:29:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              {
                                "hexValue": "30",
                                "id": 207,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4164:1:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_enum$_TokenType_$9859",
                                  "typeString": "enum TokenType"
                                },
                                {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                },
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 200,
                              "name": "TokenStorage",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10068,
                              "src": "4091:12:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_TokenStorage_$10068_storage_ptr_$",
                                "typeString": "type(struct TokenStorage storage pointer)"
                              }
                            },
                            "id": 208,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4091:75:6",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TokenStorage_$10068_memory_ptr",
                              "typeString": "struct TokenStorage memory"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 212,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "4259:1:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 211,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "4251:7:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 210,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "4251:7:6",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 213,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4251:10:6",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              {
                                "hexValue": "66616c7365",
                                "id": 214,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4263:5:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "false"
                              },
                              {
                                "expression": {
                                  "id": 215,
                                  "name": "TokenType",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 9859,
                                  "src": "4270:9:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_TokenType_$9859_$",
                                    "typeString": "type(enum TokenType)"
                                  }
                                },
                                "id": 216,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "Ether",
                                "nodeType": "MemberAccess",
                                "src": "4270:15:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_TokenType_$9859",
                                  "typeString": "enum TokenType"
                                }
                              },
                              {
                                "expression": {
                                  "id": 217,
                                  "name": "Constants",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 14204,
                                  "src": "4287:9:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_Constants_$14204_$",
                                    "typeString": "type(library Constants)"
                                  }
                                },
                                "id": 218,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "ETH_DECIMAL_PLACES",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 13956,
                                "src": "4287:28:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              {
                                "hexValue": "30",
                                "id": 219,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4317:1:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_enum$_TokenType_$9859",
                                  "typeString": "enum TokenType"
                                },
                                {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                },
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 209,
                              "name": "TokenStorage",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10068,
                              "src": "4238:12:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_TokenStorage_$10068_storage_ptr_$",
                                "typeString": "type(struct TokenStorage storage pointer)"
                              }
                            },
                            "id": 220,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4238:81:6",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TokenStorage_$10068_memory_ptr",
                              "typeString": "struct TokenStorage memory"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 223,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4349:1:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 222,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4341:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 221,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "4341:7:6",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 224,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4341:10:6",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "hexValue": "66616c7365",
                            "id": 225,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4373:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          {
                            "hexValue": "313333",
                            "id": 226,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4400:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_133_by_1",
                              "typeString": "int_const 133"
                            },
                            "value": "133"
                          },
                          {
                            "hexValue": "3735",
                            "id": 227,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4460:2:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_75_by_1",
                              "typeString": "int_const 75"
                            },
                            "value": "75"
                          },
                          {
                            "hexValue": "313038",
                            "id": 228,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4500:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_108_by_1",
                              "typeString": "int_const 108"
                            },
                            "value": "108"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_struct$_TokenStorage_$10068_memory_ptr",
                              "typeString": "struct TokenStorage memory"
                            },
                            {
                              "typeIdentifier": "t_struct$_TokenStorage_$10068_memory_ptr",
                              "typeString": "struct TokenStorage memory"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_rational_133_by_1",
                              "typeString": "int_const 133"
                            },
                            {
                              "typeIdentifier": "t_rational_75_by_1",
                              "typeString": "int_const 75"
                            },
                            {
                              "typeIdentifier": "t_rational_108_by_1",
                              "typeString": "int_const 108"
                            }
                          ],
                          "expression": {
                            "id": 195,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "3985:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 196,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "3985:22:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 229,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3985:564:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 192,
                            "name": "GOVERNANCE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 22,
                            "src": "3943:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 191,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3935:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 190,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3935:7:6",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 193,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3935:19:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 194,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "delegatecall",
                      "nodeType": "MemberAccess",
                      "src": "3935:32:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) returns (bool,bytes memory)"
                      }
                    },
                    "id": 230,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3935:628:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3905:658:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 233,
                        "name": "status",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 189,
                        "src": "4581:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 232,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4573:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 234,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4573:15:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 235,
                  "nodeType": "ExpressionStatement",
                  "src": "4573:15:6"
                },
                {
                  "expression": {
                    "id": 238,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 236,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9806,
                      "src": "4599:5:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 237,
                      "name": "owner_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 166,
                      "src": "4607:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4599:14:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 239,
                  "nodeType": "ExpressionStatement",
                  "src": "4599:14:6"
                },
                {
                  "expression": {
                    "id": 242,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 240,
                      "name": "pauseRouter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9808,
                      "src": "4697:11:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 241,
                      "name": "pauseRouter_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 168,
                      "src": "4711:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4697:26:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 243,
                  "nodeType": "ExpressionStatement",
                  "src": "4697:26:6"
                },
                {
                  "expression": {
                    "id": 246,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 244,
                      "name": "pauseGuardian",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9810,
                      "src": "4733:13:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 245,
                      "name": "pauseGuardian_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 170,
                      "src": "4749:14:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4733:30:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 247,
                  "nodeType": "ExpressionStatement",
                  "src": "4733:30:6"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 250,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 248,
                      "name": "hasInitialized",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9804,
                      "src": "4774:14:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "74727565",
                      "id": 249,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4792:4:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "4774:22:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 251,
                  "nodeType": "ExpressionStatement",
                  "src": "4774:22:6"
                }
              ]
            },
            "functionSelector": "c0c53b8b",
            "id": 253,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "initialize",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 171,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 166,
                  "mutability": "mutable",
                  "name": "owner_",
                  "nodeType": "VariableDeclaration",
                  "scope": 253,
                  "src": "3397:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 165,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3397:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 168,
                  "mutability": "mutable",
                  "name": "pauseRouter_",
                  "nodeType": "VariableDeclaration",
                  "scope": 253,
                  "src": "3413:20:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 167,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3413:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 170,
                  "mutability": "mutable",
                  "name": "pauseGuardian_",
                  "nodeType": "VariableDeclaration",
                  "scope": 253,
                  "src": "3435:22:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 169,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3435:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3396:62:6"
            },
            "returnParameters": {
              "id": 172,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3466:0:6"
            },
            "scope": 921,
            "src": "3377:1426:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 900,
              "nodeType": "Block",
              "src": "5044:7889:6",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 283,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 277,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 271,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          },
                          "id": 265,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 261,
                            "name": "sig",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 256,
                            "src": "5071:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "expression": {
                                "id": 262,
                                "name": "NotionalProxy",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 11908,
                                "src": "5078:13:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_NotionalProxy_$11908_$",
                                  "typeString": "type(contract NotionalProxy)"
                                }
                              },
                              "id": 263,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "batchBalanceAction",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 11736,
                              "src": "5078:32:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_declaration_payable$_t_address_$_t_array$_t_struct$_BalanceAction_$9900_calldata_ptr_$dyn_calldata_ptr_$returns$__$",
                                "typeString": "function NotionalProxy.batchBalanceAction(address,struct BalanceAction calldata[] calldata) payable"
                              }
                            },
                            "id": 264,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "5078:41:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          "src": "5071:48:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          },
                          "id": 270,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 266,
                            "name": "sig",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 256,
                            "src": "5135:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "expression": {
                                "id": 267,
                                "name": "NotionalProxy",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 11908,
                                "src": "5142:13:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_NotionalProxy_$11908_$",
                                  "typeString": "type(contract NotionalProxy)"
                                }
                              },
                              "id": 268,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "batchBalanceAndTradeAction",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 11744,
                              "src": "5142:40:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_declaration_payable$_t_address_$_t_array$_t_struct$_BalanceActionWithTrades_$9916_calldata_ptr_$dyn_calldata_ptr_$returns$__$",
                                "typeString": "function NotionalProxy.batchBalanceAndTradeAction(address,struct BalanceActionWithTrades calldata[] calldata) payable"
                              }
                            },
                            "id": 269,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "5142:49:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          "src": "5135:56:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "5071:120:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "||",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "id": 276,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 272,
                          "name": "sig",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 256,
                          "src": "5207:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "expression": {
                              "id": 273,
                              "name": "NotionalProxy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11908,
                              "src": "5214:13:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_NotionalProxy_$11908_$",
                                "typeString": "type(contract NotionalProxy)"
                              }
                            },
                            "id": 274,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "batchBalanceAndTradeActionWithCallback",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 11754,
                            "src": "5214:52:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_declaration_payable$_t_address_$_t_array$_t_struct$_BalanceActionWithTrades_$9916_calldata_ptr_$dyn_calldata_ptr_$_t_bytes_calldata_ptr_$returns$__$",
                              "typeString": "function NotionalProxy.batchBalanceAndTradeActionWithCallback(address,struct BalanceActionWithTrades calldata[] calldata,bytes calldata) payable"
                            }
                          },
                          "id": 275,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "selector",
                          "nodeType": "MemberAccess",
                          "src": "5214:61:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "src": "5207:68:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "5071:204:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      },
                      "id": 282,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 278,
                        "name": "sig",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 256,
                        "src": "5291:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "expression": {
                          "expression": {
                            "id": 279,
                            "name": "NotionalProxy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11908,
                            "src": "5298:13:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_NotionalProxy_$11908_$",
                              "typeString": "type(contract NotionalProxy)"
                            }
                          },
                          "id": 280,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "batchLend",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 11762,
                          "src": "5298:23:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_array$_t_struct$_BatchLend_$9887_calldata_ptr_$dyn_calldata_ptr_$returns$__$",
                            "typeString": "function NotionalProxy.batchLend(address,struct BatchLend calldata[] calldata)"
                          }
                        },
                        "id": 281,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "selector",
                        "nodeType": "MemberAccess",
                        "src": "5298:32:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "src": "5291:39:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "5071:259:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 327,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 321,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 315,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 309,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 303,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "id": 297,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  },
                                  "id": 291,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 287,
                                    "name": "sig",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 256,
                                    "src": "5408:3:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "expression": {
                                      "expression": {
                                        "id": 288,
                                        "name": "IVaultAccountAction",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 11013,
                                        "src": "5415:19:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_contract$_IVaultAccountAction_$11013_$",
                                          "typeString": "type(contract IVaultAccountAction)"
                                        }
                                      },
                                      "id": 289,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberName": "enterVault",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 10917,
                                      "src": "5415:30:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_declaration_payable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint32_$_t_bytes_calldata_ptr_$returns$_t_uint256_$",
                                        "typeString": "function IVaultAccountAction.enterVault(address,address,uint256,uint256,uint256,uint32,bytes calldata) payable returns (uint256)"
                                      }
                                    },
                                    "id": 290,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberName": "selector",
                                    "nodeType": "MemberAccess",
                                    "src": "5415:39:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    }
                                  },
                                  "src": "5408:46:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "||",
                                "rightExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  },
                                  "id": 296,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 292,
                                    "name": "sig",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 256,
                                    "src": "5470:3:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "expression": {
                                      "expression": {
                                        "id": 293,
                                        "name": "IVaultAccountAction",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 11013,
                                        "src": "5477:19:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_contract$_IVaultAccountAction_$11013_$",
                                          "typeString": "type(contract IVaultAccountAction)"
                                        }
                                      },
                                      "id": 294,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberName": "rollVaultPosition",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 10937,
                                      "src": "5477:37:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint32_$_t_uint32_$_t_bytes_calldata_ptr_$returns$_t_uint256_$",
                                        "typeString": "function IVaultAccountAction.rollVaultPosition(address,address,uint256,uint256,uint32,uint32,bytes calldata) returns (uint256)"
                                      }
                                    },
                                    "id": 295,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberName": "selector",
                                    "nodeType": "MemberAccess",
                                    "src": "5477:46:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    }
                                  },
                                  "src": "5470:53:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "src": "5408:115:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "||",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                },
                                "id": 302,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 298,
                                  "name": "sig",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 256,
                                  "src": "5539:3:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "expression": {
                                    "expression": {
                                      "id": 299,
                                      "name": "IVaultAccountAction",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 11013,
                                      "src": "5546:19:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_IVaultAccountAction_$11013_$",
                                        "typeString": "type(contract IVaultAccountAction)"
                                      }
                                    },
                                    "id": 300,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberName": "exitVault",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 10957,
                                    "src": "5546:29:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_declaration_payable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint32_$_t_bytes_calldata_ptr_$returns$_t_uint256_$",
                                      "typeString": "function IVaultAccountAction.exitVault(address,address,address,uint256,uint256,uint32,bytes calldata) payable returns (uint256)"
                                    }
                                  },
                                  "id": 301,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "selector",
                                  "nodeType": "MemberAccess",
                                  "src": "5546:38:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  }
                                },
                                "src": "5539:45:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "5408:176:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "||",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              },
                              "id": 308,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 304,
                                "name": "sig",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 256,
                                "src": "5600:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "expression": {
                                    "id": 305,
                                    "name": "IVaultAccountAction",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 11013,
                                    "src": "5607:19:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_IVaultAccountAction_$11013_$",
                                      "typeString": "type(contract IVaultAccountAction)"
                                    }
                                  },
                                  "id": 306,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "deleverageAccount",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 10975,
                                  "src": "5607:37:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bool_$_t_bytes_calldata_ptr_$returns$_t_uint256_$",
                                    "typeString": "function IVaultAccountAction.deleverageAccount(address,address,address,uint256,bool,bytes calldata) returns (uint256)"
                                  }
                                },
                                "id": 307,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "selector",
                                "nodeType": "MemberAccess",
                                "src": "5607:46:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                }
                              },
                              "src": "5600:53:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "5408:245:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            "id": 314,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 310,
                              "name": "sig",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 256,
                              "src": "5669:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "expression": {
                                "expression": {
                                  "id": 311,
                                  "name": "IVaultAccountAction",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 11013,
                                  "src": "5676:19:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IVaultAccountAction_$11013_$",
                                    "typeString": "type(contract IVaultAccountAction)"
                                  }
                                },
                                "id": 312,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "getVaultAccount",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 10984,
                                "src": "5676:35:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_declaration_view$_t_address_$_t_address_$returns$_t_struct$_VaultAccount_$10323_memory_ptr_$",
                                  "typeString": "function IVaultAccountAction.getVaultAccount(address,address) view returns (struct VaultAccount memory)"
                                }
                              },
                              "id": 313,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "selector",
                              "nodeType": "MemberAccess",
                              "src": "5676:44:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            },
                            "src": "5669:51:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "5408:312:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          },
                          "id": 320,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 316,
                            "name": "sig",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 256,
                            "src": "5736:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "expression": {
                                "id": 317,
                                "name": "IVaultAccountAction",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 11013,
                                "src": "5743:19:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IVaultAccountAction_$11013_$",
                                  "typeString": "type(contract IVaultAccountAction)"
                                }
                              },
                              "id": 318,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "getVaultAccountDebtShares",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 10999,
                              "src": "5743:45:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_declaration_view$_t_address_$_t_address_$returns$_t_uint256_$_t_array$_t_uint256_$2_memory_ptr_$_t_uint256_$",
                                "typeString": "function IVaultAccountAction.getVaultAccountDebtShares(address,address) view returns (uint256,uint256[2] memory,uint256)"
                              }
                            },
                            "id": 319,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "5743:54:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          "src": "5736:61:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "5408:389:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "||",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "id": 326,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 322,
                          "name": "sig",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 256,
                          "src": "5813:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "expression": {
                              "id": 323,
                              "name": "IVaultAccountAction",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11013,
                              "src": "5820:19:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IVaultAccountAction_$11013_$",
                                "typeString": "type(contract IVaultAccountAction)"
                              }
                            },
                            "id": 324,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "getVaultAccountCollateralRatio",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 11012,
                            "src": "5820:50:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_declaration_view$_t_address_$_t_address_$returns$_t_int256_$_t_int256_$_t_int256_$",
                              "typeString": "function IVaultAccountAction.getVaultAccountCollateralRatio(address,address) view returns (int256,int256,int256)"
                            }
                          },
                          "id": 325,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "selector",
                          "nodeType": "MemberAccess",
                          "src": "5820:59:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "src": "5813:66:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "5408:471:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 365,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 359,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 353,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 347,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "id": 341,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  },
                                  "id": 335,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 331,
                                    "name": "sig",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 256,
                                    "src": "5965:3:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "expression": {
                                      "expression": {
                                        "id": 332,
                                        "name": "NotionalProxy",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 11908,
                                        "src": "5972:13:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_contract$_NotionalProxy_$11908_$",
                                          "typeString": "type(contract NotionalProxy)"
                                        }
                                      },
                                      "id": 333,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberName": "depositUnderlyingToken",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 11705,
                                      "src": "5972:36:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_declaration_payable$_t_address_$_t_uint16_$_t_uint256_$returns$_t_uint256_$",
                                        "typeString": "function NotionalProxy.depositUnderlyingToken(address,uint16,uint256) payable returns (uint256)"
                                      }
                                    },
                                    "id": 334,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberName": "selector",
                                    "nodeType": "MemberAccess",
                                    "src": "5972:45:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    }
                                  },
                                  "src": "5965:52:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "||",
                                "rightExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  },
                                  "id": 340,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 336,
                                    "name": "sig",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 256,
                                    "src": "6033:3:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "expression": {
                                      "expression": {
                                        "id": 337,
                                        "name": "NotionalProxy",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 11908,
                                        "src": "6040:13:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_contract$_NotionalProxy_$11908_$",
                                          "typeString": "type(contract NotionalProxy)"
                                        }
                                      },
                                      "id": 338,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberName": "depositAssetToken",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 11716,
                                      "src": "6040:31:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_uint16_$_t_uint256_$returns$_t_uint256_$",
                                        "typeString": "function NotionalProxy.depositAssetToken(address,uint16,uint256) returns (uint256)"
                                      }
                                    },
                                    "id": 339,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberName": "selector",
                                    "nodeType": "MemberAccess",
                                    "src": "6040:40:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    }
                                  },
                                  "src": "6033:47:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "src": "5965:115:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "||",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                },
                                "id": 346,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 342,
                                  "name": "sig",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 256,
                                  "src": "6096:3:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "expression": {
                                    "expression": {
                                      "id": 343,
                                      "name": "NotionalProxy",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 11908,
                                      "src": "6103:13:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_NotionalProxy_$11908_$",
                                        "typeString": "type(contract NotionalProxy)"
                                      }
                                    },
                                    "id": 344,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberName": "withdraw",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 11727,
                                    "src": "6103:22:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_declaration_nonpayable$_t_uint16_$_t_uint88_$_t_bool_$returns$_t_uint256_$",
                                      "typeString": "function NotionalProxy.withdraw(uint16,uint88,bool) returns (uint256)"
                                    }
                                  },
                                  "id": 345,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "selector",
                                  "nodeType": "MemberAccess",
                                  "src": "6103:31:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  }
                                },
                                "src": "6096:38:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "5965:169:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "||",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              },
                              "id": 352,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 348,
                                "name": "sig",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 256,
                                "src": "6150:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "expression": {
                                    "id": 349,
                                    "name": "NotionalProxy",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 11908,
                                    "src": "6157:13:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_NotionalProxy_$11908_$",
                                      "typeString": "type(contract NotionalProxy)"
                                    }
                                  },
                                  "id": 350,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "settleAccount",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 11694,
                                  "src": "6157:27:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$returns$__$",
                                    "typeString": "function NotionalProxy.settleAccount(address)"
                                  }
                                },
                                "id": 351,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "selector",
                                "nodeType": "MemberAccess",
                                "src": "6157:36:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                }
                              },
                              "src": "6150:43:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "5965:228:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            "id": 358,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 354,
                              "name": "sig",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 256,
                              "src": "6209:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "expression": {
                                "expression": {
                                  "id": 355,
                                  "name": "NotionalProxy",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 11908,
                                  "src": "6216:13:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_NotionalProxy_$11908_$",
                                    "typeString": "type(contract NotionalProxy)"
                                  }
                                },
                                "id": 356,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "nTokenRedeem",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 11683,
                                "src": "6216:26:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_uint16_$_t_uint96_$_t_bool_$_t_bool_$returns$_t_int256_$",
                                  "typeString": "function NotionalProxy.nTokenRedeem(address,uint16,uint96,bool,bool) returns (int256)"
                                }
                              },
                              "id": 357,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "selector",
                              "nodeType": "MemberAccess",
                              "src": "6216:35:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            },
                            "src": "6209:42:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "5965:286:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          },
                          "id": 364,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 360,
                            "name": "sig",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 256,
                            "src": "6267:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "expression": {
                                "id": 361,
                                "name": "NotionalProxy",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 11908,
                                "src": "6274:13:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_NotionalProxy_$11908_$",
                                  "typeString": "type(contract NotionalProxy)"
                                }
                              },
                              "id": 362,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "enableBitmapCurrency",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 11689,
                              "src": "6274:34:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_declaration_nonpayable$_t_uint16_$returns$__$",
                                "typeString": "function NotionalProxy.enableBitmapCurrency(uint16)"
                              }
                            },
                            "id": 363,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "6274:43:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          "src": "6267:50:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "5965:352:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseBody": {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 433,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 427,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 421,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "id": 415,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "id": 409,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    "id": 403,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      },
                                      "id": 397,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "commonType": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        },
                                        "id": 391,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "commonType": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          },
                                          "id": 385,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "commonType": {
                                              "typeIdentifier": "t_bool",
                                              "typeString": "bool"
                                            },
                                            "id": 379,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "commonType": {
                                                "typeIdentifier": "t_bytes4",
                                                "typeString": "bytes4"
                                              },
                                              "id": 373,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftExpression": {
                                                "id": 369,
                                                "name": "sig",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 256,
                                                "src": "6397:3:6",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_bytes4",
                                                  "typeString": "bytes4"
                                                }
                                              },
                                              "nodeType": "BinaryOperation",
                                              "operator": "==",
                                              "rightExpression": {
                                                "expression": {
                                                  "expression": {
                                                    "id": 370,
                                                    "name": "nERC1155Interface",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 12069,
                                                    "src": "6404:17:6",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_type$_t_contract$_nERC1155Interface_$12069_$",
                                                      "typeString": "type(contract nERC1155Interface)"
                                                    }
                                                  },
                                                  "id": 371,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": true,
                                                  "lValueRequested": false,
                                                  "memberName": "supportsInterface",
                                                  "nodeType": "MemberAccess",
                                                  "referencedDeclaration": 11959,
                                                  "src": "6404:35:6",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_function_declaration_pure$_t_bytes4_$returns$_t_bool_$",
                                                    "typeString": "function nERC1155Interface.supportsInterface(bytes4) pure returns (bool)"
                                                  }
                                                },
                                                "id": 372,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "lValueRequested": false,
                                                "memberName": "selector",
                                                "nodeType": "MemberAccess",
                                                "src": "6404:44:6",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_bytes4",
                                                  "typeString": "bytes4"
                                                }
                                              },
                                              "src": "6397:51:6",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "||",
                                            "rightExpression": {
                                              "commonType": {
                                                "typeIdentifier": "t_bytes4",
                                                "typeString": "bytes4"
                                              },
                                              "id": 378,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftExpression": {
                                                "id": 374,
                                                "name": "sig",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 256,
                                                "src": "6464:3:6",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_bytes4",
                                                  "typeString": "bytes4"
                                                }
                                              },
                                              "nodeType": "BinaryOperation",
                                              "operator": "==",
                                              "rightExpression": {
                                                "expression": {
                                                  "expression": {
                                                    "id": 375,
                                                    "name": "nERC1155Interface",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 12069,
                                                    "src": "6471:17:6",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_type$_t_contract$_nERC1155Interface_$12069_$",
                                                      "typeString": "type(contract nERC1155Interface)"
                                                    }
                                                  },
                                                  "id": 376,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": true,
                                                  "lValueRequested": false,
                                                  "memberName": "balanceOf",
                                                  "nodeType": "MemberAccess",
                                                  "referencedDeclaration": 11968,
                                                  "src": "6471:27:6",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_function_declaration_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                                                    "typeString": "function nERC1155Interface.balanceOf(address,uint256) view returns (uint256)"
                                                  }
                                                },
                                                "id": 377,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "lValueRequested": false,
                                                "memberName": "selector",
                                                "nodeType": "MemberAccess",
                                                "src": "6471:36:6",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_bytes4",
                                                  "typeString": "bytes4"
                                                }
                                              },
                                              "src": "6464:43:6",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                              }
                                            },
                                            "src": "6397:110:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bool",
                                              "typeString": "bool"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "||",
                                          "rightExpression": {
                                            "commonType": {
                                              "typeIdentifier": "t_bytes4",
                                              "typeString": "bytes4"
                                            },
                                            "id": 384,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "id": 380,
                                              "name": "sig",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 256,
                                              "src": "6523:3:6",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_bytes4",
                                                "typeString": "bytes4"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "==",
                                            "rightExpression": {
                                              "expression": {
                                                "expression": {
                                                  "id": 381,
                                                  "name": "nERC1155Interface",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 12069,
                                                  "src": "6530:17:6",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_contract$_nERC1155Interface_$12069_$",
                                                    "typeString": "type(contract nERC1155Interface)"
                                                  }
                                                },
                                                "id": 382,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "lValueRequested": false,
                                                "memberName": "balanceOfBatch",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 11980,
                                                "src": "6530:32:6",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_function_declaration_view$_t_array$_t_address_$dyn_calldata_ptr_$_t_array$_t_uint256_$dyn_calldata_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                                                  "typeString": "function nERC1155Interface.balanceOfBatch(address[] calldata,uint256[] calldata) view returns (uint256[] memory)"
                                                }
                                              },
                                              "id": 383,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "memberName": "selector",
                                              "nodeType": "MemberAccess",
                                              "src": "6530:41:6",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_bytes4",
                                                "typeString": "bytes4"
                                              }
                                            },
                                            "src": "6523:48:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bool",
                                              "typeString": "bool"
                                            }
                                          },
                                          "src": "6397:174:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "||",
                                        "rightExpression": {
                                          "commonType": {
                                            "typeIdentifier": "t_bytes4",
                                            "typeString": "bytes4"
                                          },
                                          "id": 390,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "id": 386,
                                            "name": "sig",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 256,
                                            "src": "6587:3:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bytes4",
                                              "typeString": "bytes4"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "==",
                                          "rightExpression": {
                                            "expression": {
                                              "expression": {
                                                "id": 387,
                                                "name": "nERC1155Interface",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 12069,
                                                "src": "6594:17:6",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_type$_t_contract$_nERC1155Interface_$12069_$",
                                                  "typeString": "type(contract nERC1155Interface)"
                                                }
                                              },
                                              "id": 388,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "memberName": "signedBalanceOf",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": 11989,
                                              "src": "6594:33:6",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_function_declaration_view$_t_address_$_t_uint256_$returns$_t_int256_$",
                                                "typeString": "function nERC1155Interface.signedBalanceOf(address,uint256) view returns (int256)"
                                              }
                                            },
                                            "id": 389,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "memberName": "selector",
                                            "nodeType": "MemberAccess",
                                            "src": "6594:42:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bytes4",
                                              "typeString": "bytes4"
                                            }
                                          },
                                          "src": "6587:49:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          }
                                        },
                                        "src": "6397:239:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "||",
                                      "rightExpression": {
                                        "commonType": {
                                          "typeIdentifier": "t_bytes4",
                                          "typeString": "bytes4"
                                        },
                                        "id": 396,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 392,
                                          "name": "sig",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 256,
                                          "src": "6652:3:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes4",
                                            "typeString": "bytes4"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "==",
                                        "rightExpression": {
                                          "expression": {
                                            "expression": {
                                              "id": 393,
                                              "name": "nERC1155Interface",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 12069,
                                              "src": "6659:17:6",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_contract$_nERC1155Interface_$12069_$",
                                                "typeString": "type(contract nERC1155Interface)"
                                              }
                                            },
                                            "id": 394,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "memberName": "signedBalanceOfBatch",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 12001,
                                            "src": "6659:38:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_declaration_view$_t_array$_t_address_$dyn_calldata_ptr_$_t_array$_t_uint256_$dyn_calldata_ptr_$returns$_t_array$_t_int256_$dyn_memory_ptr_$",
                                              "typeString": "function nERC1155Interface.signedBalanceOfBatch(address[] calldata,uint256[] calldata) view returns (int256[] memory)"
                                            }
                                          },
                                          "id": 395,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "memberName": "selector",
                                          "nodeType": "MemberAccess",
                                          "src": "6659:47:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes4",
                                            "typeString": "bytes4"
                                          }
                                        },
                                        "src": "6652:54:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "src": "6397:309:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "||",
                                    "rightExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      },
                                      "id": 402,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 398,
                                        "name": "sig",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 256,
                                        "src": "6722:3:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes4",
                                          "typeString": "bytes4"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "==",
                                      "rightExpression": {
                                        "expression": {
                                          "expression": {
                                            "id": 399,
                                            "name": "nERC1155Interface",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 12069,
                                            "src": "6729:17:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_contract$_nERC1155Interface_$12069_$",
                                              "typeString": "type(contract nERC1155Interface)"
                                            }
                                          },
                                          "id": 400,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "memberName": "safeTransferFrom",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 12030,
                                          "src": "6729:34:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_declaration_payable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_calldata_ptr_$returns$__$",
                                            "typeString": "function nERC1155Interface.safeTransferFrom(address,address,uint256,uint256,bytes calldata) payable"
                                          }
                                        },
                                        "id": 401,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberName": "selector",
                                        "nodeType": "MemberAccess",
                                        "src": "6729:43:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes4",
                                          "typeString": "bytes4"
                                        }
                                      },
                                      "src": "6722:50:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "src": "6397:375:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "||",
                                  "rightExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    },
                                    "id": 408,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 404,
                                      "name": "sig",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 256,
                                      "src": "6788:3:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "expression": {
                                        "expression": {
                                          "id": 405,
                                          "name": "nERC1155Interface",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 12069,
                                          "src": "6795:17:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_contract$_nERC1155Interface_$12069_$",
                                            "typeString": "type(contract nERC1155Interface)"
                                          }
                                        },
                                        "id": 406,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberName": "safeBatchTransferFrom",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 12045,
                                        "src": "6795:39:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_declaration_payable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_bytes_calldata_ptr_$returns$__$",
                                          "typeString": "function nERC1155Interface.safeBatchTransferFrom(address,address,uint256[] calldata,uint256[] calldata,bytes calldata) payable"
                                        }
                                      },
                                      "id": 407,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberName": "selector",
                                      "nodeType": "MemberAccess",
                                      "src": "6795:48:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    },
                                    "src": "6788:55:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "src": "6397:446:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "||",
                                "rightExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  },
                                  "id": 414,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 410,
                                    "name": "sig",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 256,
                                    "src": "6859:3:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "expression": {
                                      "expression": {
                                        "id": 411,
                                        "name": "nERC1155Interface",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 12069,
                                        "src": "6866:17:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_contract$_nERC1155Interface_$12069_$",
                                          "typeString": "type(contract nERC1155Interface)"
                                        }
                                      },
                                      "id": 412,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberName": "decodeToAssets",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 12057,
                                      "src": "6866:32:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_declaration_view$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_array$_t_uint256_$dyn_calldata_ptr_$returns$_t_array$_t_struct$_PortfolioAsset_$10040_memory_ptr_$dyn_memory_ptr_$",
                                        "typeString": "function nERC1155Interface.decodeToAssets(uint256[] calldata,uint256[] calldata) view returns (struct PortfolioAsset memory[] memory)"
                                      }
                                    },
                                    "id": 413,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberName": "selector",
                                    "nodeType": "MemberAccess",
                                    "src": "6866:41:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    }
                                  },
                                  "src": "6859:48:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "src": "6397:510:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "||",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                },
                                "id": 420,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 416,
                                  "name": "sig",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 256,
                                  "src": "6923:3:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "expression": {
                                    "expression": {
                                      "id": 417,
                                      "name": "nERC1155Interface",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 12069,
                                      "src": "6930:17:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_nERC1155Interface_$12069_$",
                                        "typeString": "type(contract nERC1155Interface)"
                                      }
                                    },
                                    "id": 418,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberName": "encodeToId",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 12068,
                                    "src": "6930:28:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_declaration_pure$_t_uint16_$_t_uint40_$_t_uint8_$returns$_t_uint256_$",
                                      "typeString": "function nERC1155Interface.encodeToId(uint16,uint40,uint8) pure returns (uint256)"
                                    }
                                  },
                                  "id": 419,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "selector",
                                  "nodeType": "MemberAccess",
                                  "src": "6930:37:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  }
                                },
                                "src": "6923:44:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "6397:570:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "||",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              },
                              "id": 426,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 422,
                                "name": "sig",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 256,
                                "src": "6983:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "expression": {
                                    "id": 423,
                                    "name": "nERC1155Interface",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 12069,
                                    "src": "6990:17:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_nERC1155Interface_$12069_$",
                                      "typeString": "type(contract nERC1155Interface)"
                                    }
                                  },
                                  "id": 424,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "setApprovalForAll",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 12008,
                                  "src": "6990:35:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_bool_$returns$__$",
                                    "typeString": "function nERC1155Interface.setApprovalForAll(address,bool)"
                                  }
                                },
                                "id": 425,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "selector",
                                "nodeType": "MemberAccess",
                                "src": "6990:44:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                }
                              },
                              "src": "6983:51:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "6397:637:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            "id": 432,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 428,
                              "name": "sig",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 256,
                              "src": "7050:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "expression": {
                                "expression": {
                                  "id": 429,
                                  "name": "nERC1155Interface",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 12069,
                                  "src": "7057:17:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_nERC1155Interface_$12069_$",
                                    "typeString": "type(contract nERC1155Interface)"
                                  }
                                },
                                "id": 430,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "isApprovedForAll",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 12017,
                                "src": "7057:34:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_declaration_view$_t_address_$_t_address_$returns$_t_bool_$",
                                  "typeString": "function nERC1155Interface.isApprovedForAll(address,address) view returns (bool)"
                                }
                              },
                              "id": 431,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "selector",
                              "nodeType": "MemberAccess",
                              "src": "7057:43:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            },
                            "src": "7050:50:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "6397:703:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 513,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 507,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "id": 501,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "id": 495,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    "id": 489,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      },
                                      "id": 483,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "commonType": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        },
                                        "id": 477,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "commonType": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          },
                                          "id": 471,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "commonType": {
                                              "typeIdentifier": "t_bool",
                                              "typeString": "bool"
                                            },
                                            "id": 465,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "commonType": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                              },
                                              "id": 459,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftExpression": {
                                                "commonType": {
                                                  "typeIdentifier": "t_bool",
                                                  "typeString": "bool"
                                                },
                                                "id": 453,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                  "commonType": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                  },
                                                  "id": 447,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "leftExpression": {
                                                    "commonType": {
                                                      "typeIdentifier": "t_bytes4",
                                                      "typeString": "bytes4"
                                                    },
                                                    "id": 441,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "leftExpression": {
                                                      "id": 437,
                                                      "name": "sig",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 256,
                                                      "src": "7173:3:6",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_bytes4",
                                                        "typeString": "bytes4"
                                                      }
                                                    },
                                                    "nodeType": "BinaryOperation",
                                                    "operator": "==",
                                                    "rightExpression": {
                                                      "expression": {
                                                        "expression": {
                                                          "id": 438,
                                                          "name": "INTokenAction",
                                                          "nodeType": "Identifier",
                                                          "overloadedDeclarations": [],
                                                          "referencedDeclaration": 10462,
                                                          "src": "7180:13:6",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_type$_t_contract$_INTokenAction_$10462_$",
                                                            "typeString": "type(contract INTokenAction)"
                                                          }
                                                        },
                                                        "id": 439,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "lValueRequested": false,
                                                        "memberName": "nTokenTotalSupply",
                                                        "nodeType": "MemberAccess",
                                                        "referencedDeclaration": 10341,
                                                        "src": "7180:31:6",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_function_declaration_view$_t_address_$returns$_t_uint256_$",
                                                          "typeString": "function INTokenAction.nTokenTotalSupply(address) view returns (uint256)"
                                                        }
                                                      },
                                                      "id": 440,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": true,
                                                      "lValueRequested": false,
                                                      "memberName": "selector",
                                                      "nodeType": "MemberAccess",
                                                      "src": "7180:40:6",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_bytes4",
                                                        "typeString": "bytes4"
                                                      }
                                                    },
                                                    "src": "7173:47:6",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_bool",
                                                      "typeString": "bool"
                                                    }
                                                  },
                                                  "nodeType": "BinaryOperation",
                                                  "operator": "||",
                                                  "rightExpression": {
                                                    "commonType": {
                                                      "typeIdentifier": "t_bytes4",
                                                      "typeString": "bytes4"
                                                    },
                                                    "id": 446,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "leftExpression": {
                                                      "id": 442,
                                                      "name": "sig",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 256,
                                                      "src": "7236:3:6",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_bytes4",
                                                        "typeString": "bytes4"
                                                      }
                                                    },
                                                    "nodeType": "BinaryOperation",
                                                    "operator": "==",
                                                    "rightExpression": {
                                                      "expression": {
                                                        "expression": {
                                                          "id": 443,
                                                          "name": "INTokenAction",
                                                          "nodeType": "Identifier",
                                                          "overloadedDeclarations": [],
                                                          "referencedDeclaration": 10462,
                                                          "src": "7243:13:6",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_type$_t_contract$_INTokenAction_$10462_$",
                                                            "typeString": "type(contract INTokenAction)"
                                                          }
                                                        },
                                                        "id": 444,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "lValueRequested": false,
                                                        "memberName": "nTokenTransferAllowance",
                                                        "nodeType": "MemberAccess",
                                                        "referencedDeclaration": 10352,
                                                        "src": "7243:37:6",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_function_declaration_view$_t_uint16_$_t_address_$_t_address_$returns$_t_uint256_$",
                                                          "typeString": "function INTokenAction.nTokenTransferAllowance(uint16,address,address) view returns (uint256)"
                                                        }
                                                      },
                                                      "id": 445,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": true,
                                                      "lValueRequested": false,
                                                      "memberName": "selector",
                                                      "nodeType": "MemberAccess",
                                                      "src": "7243:46:6",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_bytes4",
                                                        "typeString": "bytes4"
                                                      }
                                                    },
                                                    "src": "7236:53:6",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_bool",
                                                      "typeString": "bool"
                                                    }
                                                  },
                                                  "src": "7173:116:6",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                  }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "||",
                                                "rightExpression": {
                                                  "commonType": {
                                                    "typeIdentifier": "t_bytes4",
                                                    "typeString": "bytes4"
                                                  },
                                                  "id": 452,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "leftExpression": {
                                                    "id": 448,
                                                    "name": "sig",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 256,
                                                    "src": "7305:3:6",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_bytes4",
                                                      "typeString": "bytes4"
                                                    }
                                                  },
                                                  "nodeType": "BinaryOperation",
                                                  "operator": "==",
                                                  "rightExpression": {
                                                    "expression": {
                                                      "expression": {
                                                        "id": 449,
                                                        "name": "INTokenAction",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 10462,
                                                        "src": "7312:13:6",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_type$_t_contract$_INTokenAction_$10462_$",
                                                          "typeString": "type(contract INTokenAction)"
                                                        }
                                                      },
                                                      "id": 450,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": true,
                                                      "lValueRequested": false,
                                                      "memberName": "nTokenBalanceOf",
                                                      "nodeType": "MemberAccess",
                                                      "referencedDeclaration": 10361,
                                                      "src": "7312:29:6",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_function_declaration_view$_t_uint16_$_t_address_$returns$_t_uint256_$",
                                                        "typeString": "function INTokenAction.nTokenBalanceOf(uint16,address) view returns (uint256)"
                                                      }
                                                    },
                                                    "id": 451,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "lValueRequested": false,
                                                    "memberName": "selector",
                                                    "nodeType": "MemberAccess",
                                                    "src": "7312:38:6",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_bytes4",
                                                      "typeString": "bytes4"
                                                    }
                                                  },
                                                  "src": "7305:45:6",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                  }
                                                },
                                                "src": "7173:177:6",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_bool",
                                                  "typeString": "bool"
                                                }
                                              },
                                              "nodeType": "BinaryOperation",
                                              "operator": "||",
                                              "rightExpression": {
                                                "commonType": {
                                                  "typeIdentifier": "t_bytes4",
                                                  "typeString": "bytes4"
                                                },
                                                "id": 458,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                  "id": 454,
                                                  "name": "sig",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 256,
                                                  "src": "7366:3:6",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_bytes4",
                                                    "typeString": "bytes4"
                                                  }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "==",
                                                "rightExpression": {
                                                  "expression": {
                                                    "expression": {
                                                      "id": 455,
                                                      "name": "INTokenAction",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 10462,
                                                      "src": "7373:13:6",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_type$_t_contract$_INTokenAction_$10462_$",
                                                        "typeString": "type(contract INTokenAction)"
                                                      }
                                                    },
                                                    "id": 456,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "lValueRequested": false,
                                                    "memberName": "nTokenTransferApprove",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 10374,
                                                    "src": "7373:35:6",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_function_declaration_nonpayable$_t_uint16_$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                                                      "typeString": "function INTokenAction.nTokenTransferApprove(uint16,address,address,uint256) returns (bool)"
                                                    }
                                                  },
                                                  "id": 457,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": true,
                                                  "lValueRequested": false,
                                                  "memberName": "selector",
                                                  "nodeType": "MemberAccess",
                                                  "src": "7373:44:6",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_bytes4",
                                                    "typeString": "bytes4"
                                                  }
                                                },
                                                "src": "7366:51:6",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_bool",
                                                  "typeString": "bool"
                                                }
                                              },
                                              "src": "7173:244:6",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "||",
                                            "rightExpression": {
                                              "commonType": {
                                                "typeIdentifier": "t_bytes4",
                                                "typeString": "bytes4"
                                              },
                                              "id": 464,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftExpression": {
                                                "id": 460,
                                                "name": "sig",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 256,
                                                "src": "7433:3:6",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_bytes4",
                                                  "typeString": "bytes4"
                                                }
                                              },
                                              "nodeType": "BinaryOperation",
                                              "operator": "==",
                                              "rightExpression": {
                                                "expression": {
                                                  "expression": {
                                                    "id": 461,
                                                    "name": "INTokenAction",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 10462,
                                                    "src": "7440:13:6",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_type$_t_contract$_INTokenAction_$10462_$",
                                                      "typeString": "type(contract INTokenAction)"
                                                    }
                                                  },
                                                  "id": 462,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": true,
                                                  "lValueRequested": false,
                                                  "memberName": "nTokenTransfer",
                                                  "nodeType": "MemberAccess",
                                                  "referencedDeclaration": 10387,
                                                  "src": "7440:28:6",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_function_declaration_nonpayable$_t_uint16_$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                                                    "typeString": "function INTokenAction.nTokenTransfer(uint16,address,address,uint256) returns (bool)"
                                                  }
                                                },
                                                "id": 463,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "lValueRequested": false,
                                                "memberName": "selector",
                                                "nodeType": "MemberAccess",
                                                "src": "7440:37:6",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_bytes4",
                                                  "typeString": "bytes4"
                                                }
                                              },
                                              "src": "7433:44:6",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                              }
                                            },
                                            "src": "7173:304:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bool",
                                              "typeString": "bool"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "||",
                                          "rightExpression": {
                                            "commonType": {
                                              "typeIdentifier": "t_bytes4",
                                              "typeString": "bytes4"
                                            },
                                            "id": 470,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "id": 466,
                                              "name": "sig",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 256,
                                              "src": "7493:3:6",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_bytes4",
                                                "typeString": "bytes4"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "==",
                                            "rightExpression": {
                                              "expression": {
                                                "expression": {
                                                  "id": 467,
                                                  "name": "INTokenAction",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 10462,
                                                  "src": "7500:13:6",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_contract$_INTokenAction_$10462_$",
                                                    "typeString": "type(contract INTokenAction)"
                                                  }
                                                },
                                                "id": 468,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "lValueRequested": false,
                                                "memberName": "nTokenTransferFrom",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 10402,
                                                "src": "7500:32:6",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_function_declaration_nonpayable$_t_uint16_$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                                                  "typeString": "function INTokenAction.nTokenTransferFrom(uint16,address,address,address,uint256) returns (bool)"
                                                }
                                              },
                                              "id": 469,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "memberName": "selector",
                                              "nodeType": "MemberAccess",
                                              "src": "7500:41:6",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_bytes4",
                                                "typeString": "bytes4"
                                              }
                                            },
                                            "src": "7493:48:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bool",
                                              "typeString": "bool"
                                            }
                                          },
                                          "src": "7173:368:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "||",
                                        "rightExpression": {
                                          "commonType": {
                                            "typeIdentifier": "t_bytes4",
                                            "typeString": "bytes4"
                                          },
                                          "id": 476,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "id": 472,
                                            "name": "sig",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 256,
                                            "src": "7557:3:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bytes4",
                                              "typeString": "bytes4"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "==",
                                          "rightExpression": {
                                            "expression": {
                                              "expression": {
                                                "id": 473,
                                                "name": "INTokenAction",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 10462,
                                                "src": "7564:13:6",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_type$_t_contract$_INTokenAction_$10462_$",
                                                  "typeString": "type(contract INTokenAction)"
                                                }
                                              },
                                              "id": 474,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "memberName": "nTokenTransferApproveAll",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": 10411,
                                              "src": "7564:38:6",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                                "typeString": "function INTokenAction.nTokenTransferApproveAll(address,uint256) returns (bool)"
                                              }
                                            },
                                            "id": 475,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "memberName": "selector",
                                            "nodeType": "MemberAccess",
                                            "src": "7564:47:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bytes4",
                                              "typeString": "bytes4"
                                            }
                                          },
                                          "src": "7557:54:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          }
                                        },
                                        "src": "7173:438:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "||",
                                      "rightExpression": {
                                        "commonType": {
                                          "typeIdentifier": "t_bytes4",
                                          "typeString": "bytes4"
                                        },
                                        "id": 482,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 478,
                                          "name": "sig",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 256,
                                          "src": "7627:3:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes4",
                                            "typeString": "bytes4"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "==",
                                        "rightExpression": {
                                          "expression": {
                                            "expression": {
                                              "id": 479,
                                              "name": "INTokenAction",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 10462,
                                              "src": "7634:13:6",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_contract$_INTokenAction_$10462_$",
                                                "typeString": "type(contract INTokenAction)"
                                              }
                                            },
                                            "id": 480,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "memberName": "nTokenClaimIncentives",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 10416,
                                            "src": "7634:35:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_declaration_nonpayable$__$returns$_t_uint256_$",
                                              "typeString": "function INTokenAction.nTokenClaimIncentives() returns (uint256)"
                                            }
                                          },
                                          "id": 481,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "memberName": "selector",
                                          "nodeType": "MemberAccess",
                                          "src": "7634:44:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes4",
                                            "typeString": "bytes4"
                                          }
                                        },
                                        "src": "7627:51:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "src": "7173:505:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "||",
                                    "rightExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      },
                                      "id": 488,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 484,
                                        "name": "sig",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 256,
                                        "src": "7694:3:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes4",
                                          "typeString": "bytes4"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "==",
                                      "rightExpression": {
                                        "expression": {
                                          "expression": {
                                            "id": 485,
                                            "name": "INTokenAction",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 10462,
                                            "src": "7701:13:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_contract$_INTokenAction_$10462_$",
                                              "typeString": "type(contract INTokenAction)"
                                            }
                                          },
                                          "id": 486,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "memberName": "nTokenPresentValueAssetDenominated",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 10423,
                                          "src": "7701:48:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_declaration_view$_t_uint16_$returns$_t_int256_$",
                                            "typeString": "function INTokenAction.nTokenPresentValueAssetDenominated(uint16) view returns (int256)"
                                          }
                                        },
                                        "id": 487,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberName": "selector",
                                        "nodeType": "MemberAccess",
                                        "src": "7701:57:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes4",
                                          "typeString": "bytes4"
                                        }
                                      },
                                      "src": "7694:64:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "src": "7173:585:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "||",
                                  "rightExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    },
                                    "id": 494,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 490,
                                      "name": "sig",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 256,
                                      "src": "7774:3:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "expression": {
                                        "expression": {
                                          "id": 491,
                                          "name": "INTokenAction",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 10462,
                                          "src": "7781:13:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_contract$_INTokenAction_$10462_$",
                                            "typeString": "type(contract INTokenAction)"
                                          }
                                        },
                                        "id": 492,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberName": "nTokenPresentValueUnderlyingDenominated",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 10430,
                                        "src": "7781:53:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_declaration_view$_t_uint16_$returns$_t_int256_$",
                                          "typeString": "function INTokenAction.nTokenPresentValueUnderlyingDenominated(uint16) view returns (int256)"
                                        }
                                      },
                                      "id": 493,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberName": "selector",
                                      "nodeType": "MemberAccess",
                                      "src": "7781:62:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    },
                                    "src": "7774:69:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "src": "7173:670:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "||",
                                "rightExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  },
                                  "id": 500,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 496,
                                    "name": "sig",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 256,
                                    "src": "7859:3:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "expression": {
                                      "expression": {
                                        "id": 497,
                                        "name": "INTokenAction",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 10462,
                                        "src": "7866:13:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_contract$_INTokenAction_$10462_$",
                                          "typeString": "type(contract INTokenAction)"
                                        }
                                      },
                                      "id": 498,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberName": "nTokenPresentValueUnderlyingExternal",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 10437,
                                      "src": "7866:50:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_declaration_view$_t_uint16_$returns$_t_uint256_$",
                                        "typeString": "function INTokenAction.nTokenPresentValueUnderlyingExternal(uint16) view returns (uint256)"
                                      }
                                    },
                                    "id": 499,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberName": "selector",
                                    "nodeType": "MemberAccess",
                                    "src": "7866:59:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    }
                                  },
                                  "src": "7859:66:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "src": "7173:752:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "||",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                },
                                "id": 506,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 502,
                                  "name": "sig",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 256,
                                  "src": "7941:3:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "expression": {
                                    "expression": {
                                      "id": 503,
                                      "name": "INTokenAction",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 10462,
                                      "src": "7948:13:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_INTokenAction_$10462_$",
                                        "typeString": "type(contract INTokenAction)"
                                      }
                                    },
                                    "id": 504,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberName": "nTokenRedeemViaProxy",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 10450,
                                    "src": "7948:34:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_declaration_nonpayable$_t_uint16_$_t_uint256_$_t_address_$_t_address_$returns$_t_uint256_$",
                                      "typeString": "function INTokenAction.nTokenRedeemViaProxy(uint16,uint256,address,address) returns (uint256)"
                                    }
                                  },
                                  "id": 505,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "selector",
                                  "nodeType": "MemberAccess",
                                  "src": "7948:43:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  }
                                },
                                "src": "7941:50:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "7173:818:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "||",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              },
                              "id": 512,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 508,
                                "name": "sig",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 256,
                                "src": "8007:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "expression": {
                                    "id": 509,
                                    "name": "INTokenAction",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 10462,
                                    "src": "8014:13:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_INTokenAction_$10462_$",
                                      "typeString": "type(contract INTokenAction)"
                                    }
                                  },
                                  "id": 510,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "nTokenMintViaProxy",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 10461,
                                  "src": "8014:32:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_declaration_payable$_t_uint16_$_t_uint256_$_t_address_$returns$_t_uint256_$",
                                    "typeString": "function INTokenAction.nTokenMintViaProxy(uint16,uint256,address) payable returns (uint256)"
                                  }
                                },
                                "id": 511,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "selector",
                                "nodeType": "MemberAccess",
                                "src": "8014:41:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                }
                              },
                              "src": "8007:48:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "7173:882:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseBody": {
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 539,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "id": 533,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "id": 527,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    },
                                    "id": 521,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 517,
                                      "name": "sig",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 256,
                                      "src": "8135:3:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "expression": {
                                        "expression": {
                                          "id": 518,
                                          "name": "NotionalProxy",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 11908,
                                          "src": "8142:13:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_contract$_NotionalProxy_$11908_$",
                                            "typeString": "type(contract NotionalProxy)"
                                          }
                                        },
                                        "id": 519,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberName": "liquidateLocalCurrency",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 11789,
                                        "src": "8142:36:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_uint16_$_t_uint96_$returns$_t_int256_$_t_int256_$",
                                          "typeString": "function NotionalProxy.liquidateLocalCurrency(address,uint16,uint96) returns (int256,int256)"
                                        }
                                      },
                                      "id": 520,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberName": "selector",
                                      "nodeType": "MemberAccess",
                                      "src": "8142:45:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    },
                                    "src": "8135:52:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "||",
                                  "rightExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    },
                                    "id": 526,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 522,
                                      "name": "sig",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 256,
                                      "src": "8203:3:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "expression": {
                                        "expression": {
                                          "id": 523,
                                          "name": "NotionalProxy",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 11908,
                                          "src": "8210:13:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_contract$_NotionalProxy_$11908_$",
                                            "typeString": "type(contract NotionalProxy)"
                                          }
                                        },
                                        "id": 524,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberName": "liquidateCollateralCurrency",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 11831,
                                        "src": "8210:41:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_uint16_$_t_uint16_$_t_uint128_$_t_uint96_$_t_bool_$_t_bool_$returns$_t_int256_$_t_int256_$_t_int256_$",
                                          "typeString": "function NotionalProxy.liquidateCollateralCurrency(address,uint16,uint16,uint128,uint96,bool,bool) returns (int256,int256,int256)"
                                        }
                                      },
                                      "id": 525,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberName": "selector",
                                      "nodeType": "MemberAccess",
                                      "src": "8210:50:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    },
                                    "src": "8203:57:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "src": "8135:125:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "||",
                                "rightExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  },
                                  "id": 532,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 528,
                                    "name": "sig",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 256,
                                    "src": "8276:3:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "expression": {
                                      "expression": {
                                        "id": 529,
                                        "name": "NotionalProxy",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 11908,
                                        "src": "8283:13:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_contract$_NotionalProxy_$11908_$",
                                          "typeString": "type(contract NotionalProxy)"
                                        }
                                      },
                                      "id": 530,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberName": "calculateLocalCurrencyLiquidation",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 11776,
                                      "src": "8283:47:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_uint16_$_t_uint96_$returns$_t_int256_$_t_int256_$",
                                        "typeString": "function NotionalProxy.calculateLocalCurrencyLiquidation(address,uint16,uint96) returns (int256,int256)"
                                      }
                                    },
                                    "id": 531,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberName": "selector",
                                    "nodeType": "MemberAccess",
                                    "src": "8283:56:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    }
                                  },
                                  "src": "8276:63:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "src": "8135:204:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "||",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                },
                                "id": 538,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 534,
                                  "name": "sig",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 256,
                                  "src": "8355:3:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "expression": {
                                    "expression": {
                                      "id": 535,
                                      "name": "NotionalProxy",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 11908,
                                      "src": "8362:13:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_NotionalProxy_$11908_$",
                                        "typeString": "type(contract NotionalProxy)"
                                      }
                                    },
                                    "id": 536,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberName": "calculateCollateralCurrencyLiquidation",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 11808,
                                    "src": "8362:52:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_uint16_$_t_uint16_$_t_uint128_$_t_uint96_$returns$_t_int256_$_t_int256_$_t_int256_$",
                                      "typeString": "function NotionalProxy.calculateCollateralCurrencyLiquidation(address,uint16,uint16,uint128,uint96) returns (int256,int256,int256)"
                                    }
                                  },
                                  "id": 537,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "selector",
                                  "nodeType": "MemberAccess",
                                  "src": "8362:61:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  }
                                },
                                "src": "8355:68:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "8135:288:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "falseBody": {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "id": 565,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "id": 559,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    "id": 553,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      },
                                      "id": 547,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 543,
                                        "name": "sig",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 256,
                                        "src": "8507:3:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes4",
                                          "typeString": "bytes4"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "==",
                                      "rightExpression": {
                                        "expression": {
                                          "expression": {
                                            "id": 544,
                                            "name": "NotionalProxy",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 11908,
                                            "src": "8514:13:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_contract$_NotionalProxy_$11908_$",
                                              "typeString": "type(contract NotionalProxy)"
                                            }
                                          },
                                          "id": 545,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "memberName": "liquidatefCashLocal",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 11867,
                                          "src": "8514:33:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_uint16_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_array$_t_uint256_$dyn_calldata_ptr_$returns$_t_array$_t_int256_$dyn_memory_ptr_$_t_int256_$",
                                            "typeString": "function NotionalProxy.liquidatefCashLocal(address,uint16,uint256[] calldata,uint256[] calldata) returns (int256[] memory,int256)"
                                          }
                                        },
                                        "id": 546,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberName": "selector",
                                        "nodeType": "MemberAccess",
                                        "src": "8514:42:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes4",
                                          "typeString": "bytes4"
                                        }
                                      },
                                      "src": "8507:49:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "||",
                                    "rightExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      },
                                      "id": 552,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 548,
                                        "name": "sig",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 256,
                                        "src": "8572:3:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes4",
                                          "typeString": "bytes4"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "==",
                                      "rightExpression": {
                                        "expression": {
                                          "expression": {
                                            "id": 549,
                                            "name": "NotionalProxy",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 11908,
                                            "src": "8579:13:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_contract$_NotionalProxy_$11908_$",
                                              "typeString": "type(contract NotionalProxy)"
                                            }
                                          },
                                          "id": 550,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "memberName": "liquidatefCashCrossCurrency",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 11907,
                                          "src": "8579:41:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_uint16_$_t_uint16_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_array$_t_uint256_$dyn_calldata_ptr_$returns$_t_array$_t_int256_$dyn_memory_ptr_$_t_int256_$",
                                            "typeString": "function NotionalProxy.liquidatefCashCrossCurrency(address,uint16,uint16,uint256[] calldata,uint256[] calldata) returns (int256[] memory,int256)"
                                          }
                                        },
                                        "id": 551,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberName": "selector",
                                        "nodeType": "MemberAccess",
                                        "src": "8579:50:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes4",
                                          "typeString": "bytes4"
                                        }
                                      },
                                      "src": "8572:57:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "src": "8507:122:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "||",
                                  "rightExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    },
                                    "id": 558,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 554,
                                      "name": "sig",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 256,
                                      "src": "8645:3:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "expression": {
                                        "expression": {
                                          "id": 555,
                                          "name": "NotionalProxy",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 11908,
                                          "src": "8652:13:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_contract$_NotionalProxy_$11908_$",
                                            "typeString": "type(contract NotionalProxy)"
                                          }
                                        },
                                        "id": 556,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberName": "calculatefCashLocalLiquidation",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 11849,
                                        "src": "8652:44:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_uint16_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_array$_t_uint256_$dyn_calldata_ptr_$returns$_t_array$_t_int256_$dyn_memory_ptr_$_t_int256_$",
                                          "typeString": "function NotionalProxy.calculatefCashLocalLiquidation(address,uint16,uint256[] calldata,uint256[] calldata) returns (int256[] memory,int256)"
                                        }
                                      },
                                      "id": 557,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberName": "selector",
                                      "nodeType": "MemberAccess",
                                      "src": "8652:53:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    },
                                    "src": "8645:60:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "src": "8507:198:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "||",
                                "rightExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  },
                                  "id": 564,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 560,
                                    "name": "sig",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 256,
                                    "src": "8721:3:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "expression": {
                                      "expression": {
                                        "id": 561,
                                        "name": "NotionalProxy",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 11908,
                                        "src": "8728:13:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_contract$_NotionalProxy_$11908_$",
                                          "typeString": "type(contract NotionalProxy)"
                                        }
                                      },
                                      "id": 562,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberName": "calculatefCashCrossCurrencyLiquidation",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 11887,
                                      "src": "8728:52:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_uint16_$_t_uint16_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_array$_t_uint256_$dyn_calldata_ptr_$returns$_t_array$_t_int256_$dyn_memory_ptr_$_t_int256_$",
                                        "typeString": "function NotionalProxy.calculatefCashCrossCurrencyLiquidation(address,uint16,uint16,uint256[] calldata,uint256[] calldata) returns (int256[] memory,int256)"
                                      }
                                    },
                                    "id": 563,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberName": "selector",
                                    "nodeType": "MemberAccess",
                                    "src": "8728:61:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    }
                                  },
                                  "src": "8721:68:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "src": "8507:282:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseBody": {
                                "condition": {
                                  "commonType": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "id": 657,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    "id": 651,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      },
                                      "id": 645,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "commonType": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        },
                                        "id": 639,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "commonType": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          },
                                          "id": 633,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "commonType": {
                                              "typeIdentifier": "t_bool",
                                              "typeString": "bool"
                                            },
                                            "id": 627,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "commonType": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                              },
                                              "id": 621,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftExpression": {
                                                "commonType": {
                                                  "typeIdentifier": "t_bool",
                                                  "typeString": "bool"
                                                },
                                                "id": 615,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                  "commonType": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                  },
                                                  "id": 609,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "leftExpression": {
                                                    "commonType": {
                                                      "typeIdentifier": "t_bool",
                                                      "typeString": "bool"
                                                    },
                                                    "id": 603,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "leftExpression": {
                                                      "commonType": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                      },
                                                      "id": 597,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "leftExpression": {
                                                        "commonType": {
                                                          "typeIdentifier": "t_bool",
                                                          "typeString": "bool"
                                                        },
                                                        "id": 591,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "leftExpression": {
                                                          "commonType": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                          },
                                                          "id": 585,
                                                          "isConstant": false,
                                                          "isLValue": false,
                                                          "isPure": false,
                                                          "lValueRequested": false,
                                                          "leftExpression": {
                                                            "commonType": {
                                                              "typeIdentifier": "t_bool",
                                                              "typeString": "bool"
                                                            },
                                                            "id": 579,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "leftExpression": {
                                                              "commonType": {
                                                                "typeIdentifier": "t_bytes4",
                                                                "typeString": "bytes4"
                                                              },
                                                              "id": 573,
                                                              "isConstant": false,
                                                              "isLValue": false,
                                                              "isPure": false,
                                                              "lValueRequested": false,
                                                              "leftExpression": {
                                                                "id": 569,
                                                                "name": "sig",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 256,
                                                                "src": "8870:3:6",
                                                                "typeDescriptions": {
                                                                  "typeIdentifier": "t_bytes4",
                                                                  "typeString": "bytes4"
                                                                }
                                                              },
                                                              "nodeType": "BinaryOperation",
                                                              "operator": "==",
                                                              "rightExpression": {
                                                                "expression": {
                                                                  "expression": {
                                                                    "id": 570,
                                                                    "name": "IVaultAction",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 10821,
                                                                    "src": "8877:12:6",
                                                                    "typeDescriptions": {
                                                                      "typeIdentifier": "t_type$_t_contract$_IVaultAction_$10821_$",
                                                                      "typeString": "type(contract IVaultAction)"
                                                                    }
                                                                  },
                                                                  "id": 571,
                                                                  "isConstant": false,
                                                                  "isLValue": false,
                                                                  "isPure": true,
                                                                  "lValueRequested": false,
                                                                  "memberName": "updateVault",
                                                                  "nodeType": "MemberAccess",
                                                                  "referencedDeclaration": 10651,
                                                                  "src": "8877:24:6",
                                                                  "typeDescriptions": {
                                                                    "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_struct$_VaultConfigStorage_$10226_calldata_ptr_$_t_uint80_$returns$__$",
                                                                    "typeString": "function IVaultAction.updateVault(address,struct VaultConfigStorage calldata,uint80)"
                                                                  }
                                                                },
                                                                "id": 572,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": true,
                                                                "lValueRequested": false,
                                                                "memberName": "selector",
                                                                "nodeType": "MemberAccess",
                                                                "src": "8877:33:6",
                                                                "typeDescriptions": {
                                                                  "typeIdentifier": "t_bytes4",
                                                                  "typeString": "bytes4"
                                                                }
                                                              },
                                                              "src": "8870:40:6",
                                                              "typeDescriptions": {
                                                                "typeIdentifier": "t_bool",
                                                                "typeString": "bool"
                                                              }
                                                            },
                                                            "nodeType": "BinaryOperation",
                                                            "operator": "||",
                                                            "rightExpression": {
                                                              "commonType": {
                                                                "typeIdentifier": "t_bytes4",
                                                                "typeString": "bytes4"
                                                              },
                                                              "id": 578,
                                                              "isConstant": false,
                                                              "isLValue": false,
                                                              "isPure": false,
                                                              "lValueRequested": false,
                                                              "leftExpression": {
                                                                "id": 574,
                                                                "name": "sig",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 256,
                                                                "src": "8926:3:6",
                                                                "typeDescriptions": {
                                                                  "typeIdentifier": "t_bytes4",
                                                                  "typeString": "bytes4"
                                                                }
                                                              },
                                                              "nodeType": "BinaryOperation",
                                                              "operator": "==",
                                                              "rightExpression": {
                                                                "expression": {
                                                                  "expression": {
                                                                    "id": 575,
                                                                    "name": "IVaultAction",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 10821,
                                                                    "src": "8933:12:6",
                                                                    "typeDescriptions": {
                                                                      "typeIdentifier": "t_type$_t_contract$_IVaultAction_$10821_$",
                                                                      "typeString": "type(contract IVaultAction)"
                                                                    }
                                                                  },
                                                                  "id": 576,
                                                                  "isConstant": false,
                                                                  "isLValue": false,
                                                                  "isPure": true,
                                                                  "lValueRequested": false,
                                                                  "memberName": "setVaultPauseStatus",
                                                                  "nodeType": "MemberAccess",
                                                                  "referencedDeclaration": 10659,
                                                                  "src": "8933:32:6",
                                                                  "typeDescriptions": {
                                                                    "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_bool_$returns$__$",
                                                                    "typeString": "function IVaultAction.setVaultPauseStatus(address,bool)"
                                                                  }
                                                                },
                                                                "id": 577,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": true,
                                                                "lValueRequested": false,
                                                                "memberName": "selector",
                                                                "nodeType": "MemberAccess",
                                                                "src": "8933:41:6",
                                                                "typeDescriptions": {
                                                                  "typeIdentifier": "t_bytes4",
                                                                  "typeString": "bytes4"
                                                                }
                                                              },
                                                              "src": "8926:48:6",
                                                              "typeDescriptions": {
                                                                "typeIdentifier": "t_bool",
                                                                "typeString": "bool"
                                                              }
                                                            },
                                                            "src": "8870:104:6",
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_bool",
                                                              "typeString": "bool"
                                                            }
                                                          },
                                                          "nodeType": "BinaryOperation",
                                                          "operator": "||",
                                                          "rightExpression": {
                                                            "commonType": {
                                                              "typeIdentifier": "t_bytes4",
                                                              "typeString": "bytes4"
                                                            },
                                                            "id": 584,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "leftExpression": {
                                                              "id": 580,
                                                              "name": "sig",
                                                              "nodeType": "Identifier",
                                                              "overloadedDeclarations": [],
                                                              "referencedDeclaration": 256,
                                                              "src": "8990:3:6",
                                                              "typeDescriptions": {
                                                                "typeIdentifier": "t_bytes4",
                                                                "typeString": "bytes4"
                                                              }
                                                            },
                                                            "nodeType": "BinaryOperation",
                                                            "operator": "==",
                                                            "rightExpression": {
                                                              "expression": {
                                                                "expression": {
                                                                  "id": 581,
                                                                  "name": "IVaultAction",
                                                                  "nodeType": "Identifier",
                                                                  "overloadedDeclarations": [],
                                                                  "referencedDeclaration": 10821,
                                                                  "src": "8997:12:6",
                                                                  "typeDescriptions": {
                                                                    "typeIdentifier": "t_type$_t_contract$_IVaultAction_$10821_$",
                                                                    "typeString": "type(contract IVaultAction)"
                                                                  }
                                                                },
                                                                "id": 582,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": true,
                                                                "lValueRequested": false,
                                                                "memberName": "reduceMaxBorrowCapacity",
                                                                "nodeType": "MemberAccess",
                                                                "referencedDeclaration": 10673,
                                                                "src": "8997:36:6",
                                                                "typeDescriptions": {
                                                                  "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_uint80_$_t_uint256_$_t_uint256_$_t_bytes_calldata_ptr_$returns$__$",
                                                                  "typeString": "function IVaultAction.reduceMaxBorrowCapacity(address,uint80,uint256,uint256,bytes calldata)"
                                                                }
                                                              },
                                                              "id": 583,
                                                              "isConstant": false,
                                                              "isLValue": false,
                                                              "isPure": true,
                                                              "lValueRequested": false,
                                                              "memberName": "selector",
                                                              "nodeType": "MemberAccess",
                                                              "src": "8997:45:6",
                                                              "typeDescriptions": {
                                                                "typeIdentifier": "t_bytes4",
                                                                "typeString": "bytes4"
                                                              }
                                                            },
                                                            "src": "8990:52:6",
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_bool",
                                                              "typeString": "bool"
                                                            }
                                                          },
                                                          "src": "8870:172:6",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                          }
                                                        },
                                                        "nodeType": "BinaryOperation",
                                                        "operator": "||",
                                                        "rightExpression": {
                                                          "commonType": {
                                                            "typeIdentifier": "t_bytes4",
                                                            "typeString": "bytes4"
                                                          },
                                                          "id": 590,
                                                          "isConstant": false,
                                                          "isLValue": false,
                                                          "isPure": false,
                                                          "lValueRequested": false,
                                                          "leftExpression": {
                                                            "id": 586,
                                                            "name": "sig",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 256,
                                                            "src": "9058:3:6",
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_bytes4",
                                                              "typeString": "bytes4"
                                                            }
                                                          },
                                                          "nodeType": "BinaryOperation",
                                                          "operator": "==",
                                                          "rightExpression": {
                                                            "expression": {
                                                              "expression": {
                                                                "id": 587,
                                                                "name": "IVaultAction",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 10821,
                                                                "src": "9065:12:6",
                                                                "typeDescriptions": {
                                                                  "typeIdentifier": "t_type$_t_contract$_IVaultAction_$10821_$",
                                                                  "typeString": "type(contract IVaultAction)"
                                                                }
                                                              },
                                                              "id": 588,
                                                              "isConstant": false,
                                                              "isLValue": false,
                                                              "isPure": true,
                                                              "lValueRequested": false,
                                                              "memberName": "updateSecondaryBorrowCapacity",
                                                              "nodeType": "MemberAccess",
                                                              "referencedDeclaration": 10683,
                                                              "src": "9065:42:6",
                                                              "typeDescriptions": {
                                                                "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_uint16_$_t_uint80_$returns$__$",
                                                                "typeString": "function IVaultAction.updateSecondaryBorrowCapacity(address,uint16,uint80)"
                                                              }
                                                            },
                                                            "id": 589,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "lValueRequested": false,
                                                            "memberName": "selector",
                                                            "nodeType": "MemberAccess",
                                                            "src": "9065:51:6",
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_bytes4",
                                                              "typeString": "bytes4"
                                                            }
                                                          },
                                                          "src": "9058:58:6",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                          }
                                                        },
                                                        "src": "8870:246:6",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_bool",
                                                          "typeString": "bool"
                                                        }
                                                      },
                                                      "nodeType": "BinaryOperation",
                                                      "operator": "||",
                                                      "rightExpression": {
                                                        "commonType": {
                                                          "typeIdentifier": "t_bytes4",
                                                          "typeString": "bytes4"
                                                        },
                                                        "id": 596,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "leftExpression": {
                                                          "id": 592,
                                                          "name": "sig",
                                                          "nodeType": "Identifier",
                                                          "overloadedDeclarations": [],
                                                          "referencedDeclaration": 256,
                                                          "src": "9132:3:6",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_bytes4",
                                                            "typeString": "bytes4"
                                                          }
                                                        },
                                                        "nodeType": "BinaryOperation",
                                                        "operator": "==",
                                                        "rightExpression": {
                                                          "expression": {
                                                            "expression": {
                                                              "id": 593,
                                                              "name": "IVaultAction",
                                                              "nodeType": "Identifier",
                                                              "overloadedDeclarations": [],
                                                              "referencedDeclaration": 10821,
                                                              "src": "9139:12:6",
                                                              "typeDescriptions": {
                                                                "typeIdentifier": "t_type$_t_contract$_IVaultAction_$10821_$",
                                                                "typeString": "type(contract IVaultAction)"
                                                              }
                                                            },
                                                            "id": 594,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "lValueRequested": false,
                                                            "memberName": "depositVaultCashToStrategyTokens",
                                                            "nodeType": "MemberAccess",
                                                            "referencedDeclaration": 10693,
                                                            "src": "9139:45:6",
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_function_declaration_nonpayable$_t_uint256_$_t_uint256_$_t_bytes_calldata_ptr_$returns$__$",
                                                              "typeString": "function IVaultAction.depositVaultCashToStrategyTokens(uint256,uint256,bytes calldata)"
                                                            }
                                                          },
                                                          "id": 595,
                                                          "isConstant": false,
                                                          "isLValue": false,
                                                          "isPure": true,
                                                          "lValueRequested": false,
                                                          "memberName": "selector",
                                                          "nodeType": "MemberAccess",
                                                          "src": "9139:54:6",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_bytes4",
                                                            "typeString": "bytes4"
                                                          }
                                                        },
                                                        "src": "9132:61:6",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_bool",
                                                          "typeString": "bool"
                                                        }
                                                      },
                                                      "src": "8870:323:6",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                      }
                                                    },
                                                    "nodeType": "BinaryOperation",
                                                    "operator": "||",
                                                    "rightExpression": {
                                                      "commonType": {
                                                        "typeIdentifier": "t_bytes4",
                                                        "typeString": "bytes4"
                                                      },
                                                      "id": 602,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "leftExpression": {
                                                        "id": 598,
                                                        "name": "sig",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 256,
                                                        "src": "9209:3:6",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_bytes4",
                                                          "typeString": "bytes4"
                                                        }
                                                      },
                                                      "nodeType": "BinaryOperation",
                                                      "operator": "==",
                                                      "rightExpression": {
                                                        "expression": {
                                                          "expression": {
                                                            "id": 599,
                                                            "name": "IVaultAction",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 10821,
                                                            "src": "9216:12:6",
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_type$_t_contract$_IVaultAction_$10821_$",
                                                              "typeString": "type(contract IVaultAction)"
                                                            }
                                                          },
                                                          "id": 600,
                                                          "isConstant": false,
                                                          "isLValue": false,
                                                          "isPure": true,
                                                          "lValueRequested": false,
                                                          "memberName": "redeemStrategyTokensToCash",
                                                          "nodeType": "MemberAccess",
                                                          "referencedDeclaration": 10707,
                                                          "src": "9216:39:6",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_function_declaration_nonpayable$_t_uint256_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_int256_$_t_int256_$",
                                                            "typeString": "function IVaultAction.redeemStrategyTokensToCash(uint256,uint256,bytes calldata) returns (int256,int256)"
                                                          }
                                                        },
                                                        "id": 601,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "lValueRequested": false,
                                                        "memberName": "selector",
                                                        "nodeType": "MemberAccess",
                                                        "src": "9216:48:6",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_bytes4",
                                                          "typeString": "bytes4"
                                                        }
                                                      },
                                                      "src": "9209:55:6",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                      }
                                                    },
                                                    "src": "8870:394:6",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_bool",
                                                      "typeString": "bool"
                                                    }
                                                  },
                                                  "nodeType": "BinaryOperation",
                                                  "operator": "||",
                                                  "rightExpression": {
                                                    "commonType": {
                                                      "typeIdentifier": "t_bytes4",
                                                      "typeString": "bytes4"
                                                    },
                                                    "id": 608,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "leftExpression": {
                                                      "id": 604,
                                                      "name": "sig",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 256,
                                                      "src": "9280:3:6",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_bytes4",
                                                        "typeString": "bytes4"
                                                      }
                                                    },
                                                    "nodeType": "BinaryOperation",
                                                    "operator": "==",
                                                    "rightExpression": {
                                                      "expression": {
                                                        "expression": {
                                                          "id": 605,
                                                          "name": "IVaultAction",
                                                          "nodeType": "Identifier",
                                                          "overloadedDeclarations": [],
                                                          "referencedDeclaration": 10821,
                                                          "src": "9287:12:6",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_type$_t_contract$_IVaultAction_$10821_$",
                                                            "typeString": "type(contract IVaultAction)"
                                                          }
                                                        },
                                                        "id": 606,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "lValueRequested": false,
                                                        "memberName": "borrowSecondaryCurrencyToVault",
                                                        "nodeType": "MemberAccess",
                                                        "referencedDeclaration": 10730,
                                                        "src": "9287:43:6",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_uint256_$_t_array$_t_uint256_$2_calldata_ptr_$_t_array$_t_uint32_$2_calldata_ptr_$_t_array$_t_uint32_$2_calldata_ptr_$returns$_t_array$_t_uint256_$2_memory_ptr_$",
                                                          "typeString": "function IVaultAction.borrowSecondaryCurrencyToVault(address,uint256,uint256[2] calldata,uint32[2] calldata,uint32[2] calldata) returns (uint256[2] memory)"
                                                        }
                                                      },
                                                      "id": 607,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": true,
                                                      "lValueRequested": false,
                                                      "memberName": "selector",
                                                      "nodeType": "MemberAccess",
                                                      "src": "9287:52:6",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_bytes4",
                                                        "typeString": "bytes4"
                                                      }
                                                    },
                                                    "src": "9280:59:6",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_bool",
                                                      "typeString": "bool"
                                                    }
                                                  },
                                                  "src": "8870:469:6",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                  }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "||",
                                                "rightExpression": {
                                                  "commonType": {
                                                    "typeIdentifier": "t_bytes4",
                                                    "typeString": "bytes4"
                                                  },
                                                  "id": 614,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "leftExpression": {
                                                    "id": 610,
                                                    "name": "sig",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 256,
                                                    "src": "9355:3:6",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_bytes4",
                                                      "typeString": "bytes4"
                                                    }
                                                  },
                                                  "nodeType": "BinaryOperation",
                                                  "operator": "==",
                                                  "rightExpression": {
                                                    "expression": {
                                                      "expression": {
                                                        "id": 611,
                                                        "name": "IVaultAction",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 10821,
                                                        "src": "9362:12:6",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_type$_t_contract$_IVaultAction_$10821_$",
                                                          "typeString": "type(contract IVaultAction)"
                                                        }
                                                      },
                                                      "id": 612,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": true,
                                                      "lValueRequested": false,
                                                      "memberName": "repaySecondaryCurrencyFromVault",
                                                      "nodeType": "MemberAccess",
                                                      "referencedDeclaration": 10747,
                                                      "src": "9362:44:6",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_uint16_$_t_uint256_$_t_uint256_$_t_uint32_$_t_bytes_calldata_ptr_$returns$_t_bytes_memory_ptr_$",
                                                        "typeString": "function IVaultAction.repaySecondaryCurrencyFromVault(address,uint16,uint256,uint256,uint32,bytes calldata) returns (bytes memory)"
                                                      }
                                                    },
                                                    "id": 613,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "lValueRequested": false,
                                                    "memberName": "selector",
                                                    "nodeType": "MemberAccess",
                                                    "src": "9362:53:6",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_bytes4",
                                                      "typeString": "bytes4"
                                                    }
                                                  },
                                                  "src": "9355:60:6",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                  }
                                                },
                                                "src": "8870:545:6",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_bool",
                                                  "typeString": "bool"
                                                }
                                              },
                                              "nodeType": "BinaryOperation",
                                              "operator": "||",
                                              "rightExpression": {
                                                "commonType": {
                                                  "typeIdentifier": "t_bytes4",
                                                  "typeString": "bytes4"
                                                },
                                                "id": 620,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                  "id": 616,
                                                  "name": "sig",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 256,
                                                  "src": "9431:3:6",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_bytes4",
                                                    "typeString": "bytes4"
                                                  }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "==",
                                                "rightExpression": {
                                                  "expression": {
                                                    "expression": {
                                                      "id": 617,
                                                      "name": "IVaultAction",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 10821,
                                                      "src": "9438:12:6",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_type$_t_contract$_IVaultAction_$10821_$",
                                                        "typeString": "type(contract IVaultAction)"
                                                      }
                                                    },
                                                    "id": 618,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "lValueRequested": false,
                                                    "memberName": "initiateSecondaryBorrowSettlement",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 10756,
                                                    "src": "9438:46:6",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_function_declaration_nonpayable$_t_uint256_$returns$_t_array$_t_uint256_$2_memory_ptr_$",
                                                      "typeString": "function IVaultAction.initiateSecondaryBorrowSettlement(uint256) returns (uint256[2] memory)"
                                                    }
                                                  },
                                                  "id": 619,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": true,
                                                  "lValueRequested": false,
                                                  "memberName": "selector",
                                                  "nodeType": "MemberAccess",
                                                  "src": "9438:55:6",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_bytes4",
                                                    "typeString": "bytes4"
                                                  }
                                                },
                                                "src": "9431:62:6",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_bool",
                                                  "typeString": "bool"
                                                }
                                              },
                                              "src": "8870:623:6",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "||",
                                            "rightExpression": {
                                              "commonType": {
                                                "typeIdentifier": "t_bytes4",
                                                "typeString": "bytes4"
                                              },
                                              "id": 626,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftExpression": {
                                                "id": 622,
                                                "name": "sig",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 256,
                                                "src": "9509:3:6",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_bytes4",
                                                  "typeString": "bytes4"
                                                }
                                              },
                                              "nodeType": "BinaryOperation",
                                              "operator": "==",
                                              "rightExpression": {
                                                "expression": {
                                                  "expression": {
                                                    "id": 623,
                                                    "name": "IVaultAction",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 10821,
                                                    "src": "9516:12:6",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_type$_t_contract$_IVaultAction_$10821_$",
                                                      "typeString": "type(contract IVaultAction)"
                                                    }
                                                  },
                                                  "id": 624,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": true,
                                                  "lValueRequested": false,
                                                  "memberName": "settleVault",
                                                  "nodeType": "MemberAccess",
                                                  "referencedDeclaration": 10764,
                                                  "src": "9516:24:6",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                                    "typeString": "function IVaultAction.settleVault(address,uint256)"
                                                  }
                                                },
                                                "id": 625,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "lValueRequested": false,
                                                "memberName": "selector",
                                                "nodeType": "MemberAccess",
                                                "src": "9516:33:6",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_bytes4",
                                                  "typeString": "bytes4"
                                                }
                                              },
                                              "src": "9509:40:6",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                              }
                                            },
                                            "src": "8870:679:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bool",
                                              "typeString": "bool"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "||",
                                          "rightExpression": {
                                            "commonType": {
                                              "typeIdentifier": "t_bytes4",
                                              "typeString": "bytes4"
                                            },
                                            "id": 632,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "id": 628,
                                              "name": "sig",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 256,
                                              "src": "9565:3:6",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_bytes4",
                                                "typeString": "bytes4"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "==",
                                            "rightExpression": {
                                              "expression": {
                                                "expression": {
                                                  "id": 629,
                                                  "name": "IVaultAction",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 10821,
                                                  "src": "9572:12:6",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_contract$_IVaultAction_$10821_$",
                                                    "typeString": "type(contract IVaultAction)"
                                                  }
                                                },
                                                "id": 630,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "lValueRequested": false,
                                                "memberName": "getVaultConfig",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 10772,
                                                "src": "9572:27:6",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_function_declaration_view$_t_address_$returns$_t_struct$_VaultConfig_$10265_memory_ptr_$",
                                                  "typeString": "function IVaultAction.getVaultConfig(address) view returns (struct VaultConfig memory)"
                                                }
                                              },
                                              "id": 631,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "memberName": "selector",
                                              "nodeType": "MemberAccess",
                                              "src": "9572:36:6",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_bytes4",
                                                "typeString": "bytes4"
                                              }
                                            },
                                            "src": "9565:43:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bool",
                                              "typeString": "bool"
                                            }
                                          },
                                          "src": "8870:738:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "||",
                                        "rightExpression": {
                                          "commonType": {
                                            "typeIdentifier": "t_bytes4",
                                            "typeString": "bytes4"
                                          },
                                          "id": 638,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "id": 634,
                                            "name": "sig",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 256,
                                            "src": "9624:3:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bytes4",
                                              "typeString": "bytes4"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "==",
                                          "rightExpression": {
                                            "expression": {
                                              "expression": {
                                                "id": 635,
                                                "name": "IVaultAction",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 10821,
                                                "src": "9631:12:6",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_type$_t_contract$_IVaultAction_$10821_$",
                                                  "typeString": "type(contract IVaultAction)"
                                                }
                                              },
                                              "id": 636,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "memberName": "getBorrowCapacity",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": 10783,
                                              "src": "9631:30:6",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_function_declaration_view$_t_address_$_t_uint16_$returns$_t_uint256_$_t_uint256_$",
                                                "typeString": "function IVaultAction.getBorrowCapacity(address,uint16) view returns (uint256,uint256)"
                                              }
                                            },
                                            "id": 637,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "memberName": "selector",
                                            "nodeType": "MemberAccess",
                                            "src": "9631:39:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bytes4",
                                              "typeString": "bytes4"
                                            }
                                          },
                                          "src": "9624:46:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          }
                                        },
                                        "src": "8870:800:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "||",
                                      "rightExpression": {
                                        "commonType": {
                                          "typeIdentifier": "t_bytes4",
                                          "typeString": "bytes4"
                                        },
                                        "id": 644,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 640,
                                          "name": "sig",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 256,
                                          "src": "9686:3:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes4",
                                            "typeString": "bytes4"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "==",
                                        "rightExpression": {
                                          "expression": {
                                            "expression": {
                                              "id": 641,
                                              "name": "IVaultAction",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 10821,
                                              "src": "9693:12:6",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_contract$_IVaultAction_$10821_$",
                                                "typeString": "type(contract IVaultAction)"
                                              }
                                            },
                                            "id": 642,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "memberName": "getSecondaryBorrow",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 10798,
                                            "src": "9693:31:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_declaration_view$_t_address_$_t_uint16_$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_uint256_$",
                                              "typeString": "function IVaultAction.getSecondaryBorrow(address,uint16,uint256) view returns (uint256,uint256,uint256)"
                                            }
                                          },
                                          "id": 643,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "memberName": "selector",
                                          "nodeType": "MemberAccess",
                                          "src": "9693:40:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes4",
                                            "typeString": "bytes4"
                                          }
                                        },
                                        "src": "9686:47:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "src": "8870:863:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "||",
                                    "rightExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      },
                                      "id": 650,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 646,
                                        "name": "sig",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 256,
                                        "src": "9749:3:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes4",
                                          "typeString": "bytes4"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "==",
                                      "rightExpression": {
                                        "expression": {
                                          "expression": {
                                            "id": 647,
                                            "name": "IVaultAction",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 10821,
                                            "src": "9756:12:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_contract$_IVaultAction_$10821_$",
                                              "typeString": "type(contract IVaultAction)"
                                            }
                                          },
                                          "id": 648,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "memberName": "getVaultState",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 10808,
                                          "src": "9756:26:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_declaration_view$_t_address_$_t_uint256_$returns$_t_struct$_VaultState_$10298_memory_ptr_$",
                                            "typeString": "function IVaultAction.getVaultState(address,uint256) view returns (struct VaultState memory)"
                                          }
                                        },
                                        "id": 649,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberName": "selector",
                                        "nodeType": "MemberAccess",
                                        "src": "9756:35:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes4",
                                          "typeString": "bytes4"
                                        }
                                      },
                                      "src": "9749:42:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "src": "8870:921:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "||",
                                  "rightExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    },
                                    "id": 656,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 652,
                                      "name": "sig",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 256,
                                      "src": "9807:3:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "expression": {
                                        "expression": {
                                          "id": 653,
                                          "name": "IVaultAction",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 10821,
                                          "src": "9814:12:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_contract$_IVaultAction_$10821_$",
                                            "typeString": "type(contract IVaultAction)"
                                          }
                                        },
                                        "id": 654,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberName": "getCashRequiredToSettle",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 10820,
                                        "src": "9814:36:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_declaration_view$_t_address_$_t_uint256_$returns$_t_int256_$_t_int256_$",
                                          "typeString": "function IVaultAction.getCashRequiredToSettle(address,uint256) view returns (int256,int256)"
                                        }
                                      },
                                      "id": 655,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberName": "selector",
                                      "nodeType": "MemberAccess",
                                      "src": "9814:45:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    },
                                    "src": "9807:52:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "src": "8870:989:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "falseBody": {
                                  "condition": {
                                    "commonType": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    "id": 671,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      },
                                      "id": 665,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 661,
                                        "name": "sig",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 256,
                                        "src": "9937:3:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes4",
                                          "typeString": "bytes4"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "==",
                                      "rightExpression": {
                                        "expression": {
                                          "expression": {
                                            "id": 662,
                                            "name": "NotionalProxy",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 11908,
                                            "src": "9944:13:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_contract$_NotionalProxy_$11908_$",
                                              "typeString": "type(contract NotionalProxy)"
                                            }
                                          },
                                          "id": 663,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "memberName": "initializeMarkets",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 11662,
                                          "src": "9944:31:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_declaration_nonpayable$_t_uint16_$_t_bool_$returns$__$",
                                            "typeString": "function NotionalProxy.initializeMarkets(uint16,bool)"
                                          }
                                        },
                                        "id": 664,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberName": "selector",
                                        "nodeType": "MemberAccess",
                                        "src": "9944:40:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes4",
                                          "typeString": "bytes4"
                                        }
                                      },
                                      "src": "9937:47:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "||",
                                    "rightExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      },
                                      "id": 670,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 666,
                                        "name": "sig",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 256,
                                        "src": "10000:3:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes4",
                                          "typeString": "bytes4"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "==",
                                      "rightExpression": {
                                        "expression": {
                                          "expression": {
                                            "id": 667,
                                            "name": "NotionalProxy",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 11908,
                                            "src": "10007:13:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_contract$_NotionalProxy_$11908_$",
                                              "typeString": "type(contract NotionalProxy)"
                                            }
                                          },
                                          "id": 668,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "memberName": "sweepCashIntoMarkets",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 11667,
                                          "src": "10007:34:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_declaration_nonpayable$_t_uint16_$returns$__$",
                                            "typeString": "function NotionalProxy.sweepCashIntoMarkets(uint16)"
                                          }
                                        },
                                        "id": 669,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberName": "selector",
                                        "nodeType": "MemberAccess",
                                        "src": "10007:43:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes4",
                                          "typeString": "bytes4"
                                        }
                                      },
                                      "src": "10000:50:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "src": "9937:113:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "falseBody": {
                                    "condition": {
                                      "commonType": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      },
                                      "id": 781,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "commonType": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        },
                                        "id": 775,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "commonType": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          },
                                          "id": 769,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "commonType": {
                                              "typeIdentifier": "t_bool",
                                              "typeString": "bool"
                                            },
                                            "id": 763,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "commonType": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                              },
                                              "id": 757,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftExpression": {
                                                "commonType": {
                                                  "typeIdentifier": "t_bool",
                                                  "typeString": "bool"
                                                },
                                                "id": 751,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                  "commonType": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                  },
                                                  "id": 745,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "leftExpression": {
                                                    "commonType": {
                                                      "typeIdentifier": "t_bool",
                                                      "typeString": "bool"
                                                    },
                                                    "id": 739,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "leftExpression": {
                                                      "commonType": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                      },
                                                      "id": 733,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "leftExpression": {
                                                        "commonType": {
                                                          "typeIdentifier": "t_bool",
                                                          "typeString": "bool"
                                                        },
                                                        "id": 727,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "leftExpression": {
                                                          "commonType": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                          },
                                                          "id": 721,
                                                          "isConstant": false,
                                                          "isLValue": false,
                                                          "isPure": false,
                                                          "lValueRequested": false,
                                                          "leftExpression": {
                                                            "commonType": {
                                                              "typeIdentifier": "t_bool",
                                                              "typeString": "bool"
                                                            },
                                                            "id": 715,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "leftExpression": {
                                                              "commonType": {
                                                                "typeIdentifier": "t_bool",
                                                                "typeString": "bool"
                                                              },
                                                              "id": 709,
                                                              "isConstant": false,
                                                              "isLValue": false,
                                                              "isPure": false,
                                                              "lValueRequested": false,
                                                              "leftExpression": {
                                                                "commonType": {
                                                                  "typeIdentifier": "t_bool",
                                                                  "typeString": "bool"
                                                                },
                                                                "id": 703,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": false,
                                                                "lValueRequested": false,
                                                                "leftExpression": {
                                                                  "commonType": {
                                                                    "typeIdentifier": "t_bool",
                                                                    "typeString": "bool"
                                                                  },
                                                                  "id": 697,
                                                                  "isConstant": false,
                                                                  "isLValue": false,
                                                                  "isPure": false,
                                                                  "lValueRequested": false,
                                                                  "leftExpression": {
                                                                    "commonType": {
                                                                      "typeIdentifier": "t_bool",
                                                                      "typeString": "bool"
                                                                    },
                                                                    "id": 691,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": false,
                                                                    "lValueRequested": false,
                                                                    "leftExpression": {
                                                                      "commonType": {
                                                                        "typeIdentifier": "t_bool",
                                                                        "typeString": "bool"
                                                                      },
                                                                      "id": 685,
                                                                      "isConstant": false,
                                                                      "isLValue": false,
                                                                      "isPure": false,
                                                                      "lValueRequested": false,
                                                                      "leftExpression": {
                                                                        "commonType": {
                                                                          "typeIdentifier": "t_bytes4",
                                                                          "typeString": "bytes4"
                                                                        },
                                                                        "id": 679,
                                                                        "isConstant": false,
                                                                        "isLValue": false,
                                                                        "isPure": false,
                                                                        "lValueRequested": false,
                                                                        "leftExpression": {
                                                                          "id": 675,
                                                                          "name": "sig",
                                                                          "nodeType": "Identifier",
                                                                          "overloadedDeclarations": [],
                                                                          "referencedDeclaration": 256,
                                                                          "src": "10133:3:6",
                                                                          "typeDescriptions": {
                                                                            "typeIdentifier": "t_bytes4",
                                                                            "typeString": "bytes4"
                                                                          }
                                                                        },
                                                                        "nodeType": "BinaryOperation",
                                                                        "operator": "==",
                                                                        "rightExpression": {
                                                                          "expression": {
                                                                            "expression": {
                                                                              "id": 676,
                                                                              "name": "NotionalGovernance",
                                                                              "nodeType": "Identifier",
                                                                              "overloadedDeclarations": [],
                                                                              "referencedDeclaration": 11437,
                                                                              "src": "10140:18:6",
                                                                              "typeDescriptions": {
                                                                                "typeIdentifier": "t_type$_t_contract$_NotionalGovernance_$11437_$",
                                                                                "typeString": "type(contract NotionalGovernance)"
                                                                              }
                                                                            },
                                                                            "id": 677,
                                                                            "isConstant": false,
                                                                            "isLValue": false,
                                                                            "isPure": true,
                                                                            "lValueRequested": false,
                                                                            "memberName": "listCurrency",
                                                                            "nodeType": "MemberAccess",
                                                                            "referencedDeclaration": 11317,
                                                                            "src": "10140:31:6",
                                                                            "typeDescriptions": {
                                                                              "typeIdentifier": "t_function_declaration_nonpayable$_t_struct$_TokenStorage_$10068_calldata_ptr_$_t_struct$_TokenStorage_$10068_calldata_ptr_$_t_contract$_AggregatorV2V3Interface_$25563_$_t_bool_$_t_uint8_$_t_uint8_$_t_uint8_$returns$_t_uint16_$",
                                                                              "typeString": "function NotionalGovernance.listCurrency(struct TokenStorage calldata,struct TokenStorage calldata,contract AggregatorV2V3Interface,bool,uint8,uint8,uint8) returns (uint16)"
                                                                            }
                                                                          },
                                                                          "id": 678,
                                                                          "isConstant": false,
                                                                          "isLValue": false,
                                                                          "isPure": true,
                                                                          "lValueRequested": false,
                                                                          "memberName": "selector",
                                                                          "nodeType": "MemberAccess",
                                                                          "src": "10140:40:6",
                                                                          "typeDescriptions": {
                                                                            "typeIdentifier": "t_bytes4",
                                                                            "typeString": "bytes4"
                                                                          }
                                                                        },
                                                                        "src": "10133:47:6",
                                                                        "typeDescriptions": {
                                                                          "typeIdentifier": "t_bool",
                                                                          "typeString": "bool"
                                                                        }
                                                                      },
                                                                      "nodeType": "BinaryOperation",
                                                                      "operator": "||",
                                                                      "rightExpression": {
                                                                        "commonType": {
                                                                          "typeIdentifier": "t_bytes4",
                                                                          "typeString": "bytes4"
                                                                        },
                                                                        "id": 684,
                                                                        "isConstant": false,
                                                                        "isLValue": false,
                                                                        "isPure": false,
                                                                        "lValueRequested": false,
                                                                        "leftExpression": {
                                                                          "id": 680,
                                                                          "name": "sig",
                                                                          "nodeType": "Identifier",
                                                                          "overloadedDeclarations": [],
                                                                          "referencedDeclaration": 256,
                                                                          "src": "10196:3:6",
                                                                          "typeDescriptions": {
                                                                            "typeIdentifier": "t_bytes4",
                                                                            "typeString": "bytes4"
                                                                          }
                                                                        },
                                                                        "nodeType": "BinaryOperation",
                                                                        "operator": "==",
                                                                        "rightExpression": {
                                                                          "expression": {
                                                                            "expression": {
                                                                              "id": 681,
                                                                              "name": "NotionalGovernance",
                                                                              "nodeType": "Identifier",
                                                                              "overloadedDeclarations": [],
                                                                              "referencedDeclaration": 11437,
                                                                              "src": "10203:18:6",
                                                                              "typeDescriptions": {
                                                                                "typeIdentifier": "t_type$_t_contract$_NotionalGovernance_$11437_$",
                                                                                "typeString": "type(contract NotionalGovernance)"
                                                                              }
                                                                            },
                                                                            "id": 682,
                                                                            "isConstant": false,
                                                                            "isLValue": false,
                                                                            "isPure": true,
                                                                            "lValueRequested": false,
                                                                            "memberName": "enableCashGroup",
                                                                            "nodeType": "MemberAccess",
                                                                            "referencedDeclaration": 11337,
                                                                            "src": "10203:34:6",
                                                                            "typeDescriptions": {
                                                                              "typeIdentifier": "t_function_declaration_nonpayable$_t_uint16_$_t_contract$_AssetRateAdapter_$25607_$_t_struct$_CashGroupSettings_$10111_calldata_ptr_$_t_string_calldata_ptr_$_t_string_calldata_ptr_$returns$__$",
                                                                              "typeString": "function NotionalGovernance.enableCashGroup(uint16,contract AssetRateAdapter,struct CashGroupSettings calldata,string calldata,string calldata)"
                                                                            }
                                                                          },
                                                                          "id": 683,
                                                                          "isConstant": false,
                                                                          "isLValue": false,
                                                                          "isPure": true,
                                                                          "lValueRequested": false,
                                                                          "memberName": "selector",
                                                                          "nodeType": "MemberAccess",
                                                                          "src": "10203:43:6",
                                                                          "typeDescriptions": {
                                                                            "typeIdentifier": "t_bytes4",
                                                                            "typeString": "bytes4"
                                                                          }
                                                                        },
                                                                        "src": "10196:50:6",
                                                                        "typeDescriptions": {
                                                                          "typeIdentifier": "t_bool",
                                                                          "typeString": "bool"
                                                                        }
                                                                      },
                                                                      "src": "10133:113:6",
                                                                      "typeDescriptions": {
                                                                        "typeIdentifier": "t_bool",
                                                                        "typeString": "bool"
                                                                      }
                                                                    },
                                                                    "nodeType": "BinaryOperation",
                                                                    "operator": "||",
                                                                    "rightExpression": {
                                                                      "commonType": {
                                                                        "typeIdentifier": "t_bytes4",
                                                                        "typeString": "bytes4"
                                                                      },
                                                                      "id": 690,
                                                                      "isConstant": false,
                                                                      "isLValue": false,
                                                                      "isPure": false,
                                                                      "lValueRequested": false,
                                                                      "leftExpression": {
                                                                        "id": 686,
                                                                        "name": "sig",
                                                                        "nodeType": "Identifier",
                                                                        "overloadedDeclarations": [],
                                                                        "referencedDeclaration": 256,
                                                                        "src": "10262:3:6",
                                                                        "typeDescriptions": {
                                                                          "typeIdentifier": "t_bytes4",
                                                                          "typeString": "bytes4"
                                                                        }
                                                                      },
                                                                      "nodeType": "BinaryOperation",
                                                                      "operator": "==",
                                                                      "rightExpression": {
                                                                        "expression": {
                                                                          "expression": {
                                                                            "id": 687,
                                                                            "name": "NotionalGovernance",
                                                                            "nodeType": "Identifier",
                                                                            "overloadedDeclarations": [],
                                                                            "referencedDeclaration": 11437,
                                                                            "src": "10269:18:6",
                                                                            "typeDescriptions": {
                                                                              "typeIdentifier": "t_type$_t_contract$_NotionalGovernance_$11437_$",
                                                                              "typeString": "type(contract NotionalGovernance)"
                                                                            }
                                                                          },
                                                                          "id": 688,
                                                                          "isConstant": false,
                                                                          "isLValue": false,
                                                                          "isPure": true,
                                                                          "lValueRequested": false,
                                                                          "memberName": "updateCashGroup",
                                                                          "nodeType": "MemberAccess",
                                                                          "referencedDeclaration": 11388,
                                                                          "src": "10269:34:6",
                                                                          "typeDescriptions": {
                                                                            "typeIdentifier": "t_function_declaration_nonpayable$_t_uint16_$_t_struct$_CashGroupSettings_$10111_calldata_ptr_$returns$__$",
                                                                            "typeString": "function NotionalGovernance.updateCashGroup(uint16,struct CashGroupSettings calldata)"
                                                                          }
                                                                        },
                                                                        "id": 689,
                                                                        "isConstant": false,
                                                                        "isLValue": false,
                                                                        "isPure": true,
                                                                        "lValueRequested": false,
                                                                        "memberName": "selector",
                                                                        "nodeType": "MemberAccess",
                                                                        "src": "10269:43:6",
                                                                        "typeDescriptions": {
                                                                          "typeIdentifier": "t_bytes4",
                                                                          "typeString": "bytes4"
                                                                        }
                                                                      },
                                                                      "src": "10262:50:6",
                                                                      "typeDescriptions": {
                                                                        "typeIdentifier": "t_bool",
                                                                        "typeString": "bool"
                                                                      }
                                                                    },
                                                                    "src": "10133:179:6",
                                                                    "typeDescriptions": {
                                                                      "typeIdentifier": "t_bool",
                                                                      "typeString": "bool"
                                                                    }
                                                                  },
                                                                  "nodeType": "BinaryOperation",
                                                                  "operator": "||",
                                                                  "rightExpression": {
                                                                    "commonType": {
                                                                      "typeIdentifier": "t_bytes4",
                                                                      "typeString": "bytes4"
                                                                    },
                                                                    "id": 696,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": false,
                                                                    "lValueRequested": false,
                                                                    "leftExpression": {
                                                                      "id": 692,
                                                                      "name": "sig",
                                                                      "nodeType": "Identifier",
                                                                      "overloadedDeclarations": [],
                                                                      "referencedDeclaration": 256,
                                                                      "src": "10328:3:6",
                                                                      "typeDescriptions": {
                                                                        "typeIdentifier": "t_bytes4",
                                                                        "typeString": "bytes4"
                                                                      }
                                                                    },
                                                                    "nodeType": "BinaryOperation",
                                                                    "operator": "==",
                                                                    "rightExpression": {
                                                                      "expression": {
                                                                        "expression": {
                                                                          "id": 693,
                                                                          "name": "NotionalGovernance",
                                                                          "nodeType": "Identifier",
                                                                          "overloadedDeclarations": [],
                                                                          "referencedDeclaration": 11437,
                                                                          "src": "10335:18:6",
                                                                          "typeDescriptions": {
                                                                            "typeIdentifier": "t_type$_t_contract$_NotionalGovernance_$11437_$",
                                                                            "typeString": "type(contract NotionalGovernance)"
                                                                          }
                                                                        },
                                                                        "id": 694,
                                                                        "isConstant": false,
                                                                        "isLValue": false,
                                                                        "isPure": true,
                                                                        "lValueRequested": false,
                                                                        "memberName": "updateAssetRate",
                                                                        "nodeType": "MemberAccess",
                                                                        "referencedDeclaration": 11395,
                                                                        "src": "10335:34:6",
                                                                        "typeDescriptions": {
                                                                          "typeIdentifier": "t_function_declaration_nonpayable$_t_uint16_$_t_contract$_AssetRateAdapter_$25607_$returns$__$",
                                                                          "typeString": "function NotionalGovernance.updateAssetRate(uint16,contract AssetRateAdapter)"
                                                                        }
                                                                      },
                                                                      "id": 695,
                                                                      "isConstant": false,
                                                                      "isLValue": false,
                                                                      "isPure": true,
                                                                      "lValueRequested": false,
                                                                      "memberName": "selector",
                                                                      "nodeType": "MemberAccess",
                                                                      "src": "10335:43:6",
                                                                      "typeDescriptions": {
                                                                        "typeIdentifier": "t_bytes4",
                                                                        "typeString": "bytes4"
                                                                      }
                                                                    },
                                                                    "src": "10328:50:6",
                                                                    "typeDescriptions": {
                                                                      "typeIdentifier": "t_bool",
                                                                      "typeString": "bool"
                                                                    }
                                                                  },
                                                                  "src": "10133:245:6",
                                                                  "typeDescriptions": {
                                                                    "typeIdentifier": "t_bool",
                                                                    "typeString": "bool"
                                                                  }
                                                                },
                                                                "nodeType": "BinaryOperation",
                                                                "operator": "||",
                                                                "rightExpression": {
                                                                  "commonType": {
                                                                    "typeIdentifier": "t_bytes4",
                                                                    "typeString": "bytes4"
                                                                  },
                                                                  "id": 702,
                                                                  "isConstant": false,
                                                                  "isLValue": false,
                                                                  "isPure": false,
                                                                  "lValueRequested": false,
                                                                  "leftExpression": {
                                                                    "id": 698,
                                                                    "name": "sig",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 256,
                                                                    "src": "10394:3:6",
                                                                    "typeDescriptions": {
                                                                      "typeIdentifier": "t_bytes4",
                                                                      "typeString": "bytes4"
                                                                    }
                                                                  },
                                                                  "nodeType": "BinaryOperation",
                                                                  "operator": "==",
                                                                  "rightExpression": {
                                                                    "expression": {
                                                                      "expression": {
                                                                        "id": 699,
                                                                        "name": "NotionalGovernance",
                                                                        "nodeType": "Identifier",
                                                                        "overloadedDeclarations": [],
                                                                        "referencedDeclaration": 11437,
                                                                        "src": "10401:18:6",
                                                                        "typeDescriptions": {
                                                                          "typeIdentifier": "t_type$_t_contract$_NotionalGovernance_$11437_$",
                                                                          "typeString": "type(contract NotionalGovernance)"
                                                                        }
                                                                      },
                                                                      "id": 700,
                                                                      "isConstant": false,
                                                                      "isLValue": false,
                                                                      "isPure": true,
                                                                      "lValueRequested": false,
                                                                      "memberName": "updateETHRate",
                                                                      "nodeType": "MemberAccess",
                                                                      "referencedDeclaration": 11410,
                                                                      "src": "10401:32:6",
                                                                      "typeDescriptions": {
                                                                        "typeIdentifier": "t_function_declaration_nonpayable$_t_uint16_$_t_contract$_AggregatorV2V3Interface_$25563_$_t_bool_$_t_uint8_$_t_uint8_$_t_uint8_$returns$__$",
                                                                        "typeString": "function NotionalGovernance.updateETHRate(uint16,contract AggregatorV2V3Interface,bool,uint8,uint8,uint8)"
                                                                      }
                                                                    },
                                                                    "id": 701,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": true,
                                                                    "lValueRequested": false,
                                                                    "memberName": "selector",
                                                                    "nodeType": "MemberAccess",
                                                                    "src": "10401:41:6",
                                                                    "typeDescriptions": {
                                                                      "typeIdentifier": "t_bytes4",
                                                                      "typeString": "bytes4"
                                                                    }
                                                                  },
                                                                  "src": "10394:48:6",
                                                                  "typeDescriptions": {
                                                                    "typeIdentifier": "t_bool",
                                                                    "typeString": "bool"
                                                                  }
                                                                },
                                                                "src": "10133:309:6",
                                                                "typeDescriptions": {
                                                                  "typeIdentifier": "t_bool",
                                                                  "typeString": "bool"
                                                                }
                                                              },
                                                              "nodeType": "BinaryOperation",
                                                              "operator": "||",
                                                              "rightExpression": {
                                                                "commonType": {
                                                                  "typeIdentifier": "t_bytes4",
                                                                  "typeString": "bytes4"
                                                                },
                                                                "id": 708,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": false,
                                                                "lValueRequested": false,
                                                                "leftExpression": {
                                                                  "id": 704,
                                                                  "name": "sig",
                                                                  "nodeType": "Identifier",
                                                                  "overloadedDeclarations": [],
                                                                  "referencedDeclaration": 256,
                                                                  "src": "10458:3:6",
                                                                  "typeDescriptions": {
                                                                    "typeIdentifier": "t_bytes4",
                                                                    "typeString": "bytes4"
                                                                  }
                                                                },
                                                                "nodeType": "BinaryOperation",
                                                                "operator": "==",
                                                                "rightExpression": {
                                                                  "expression": {
                                                                    "expression": {
                                                                      "id": 705,
                                                                      "name": "NotionalGovernance",
                                                                      "nodeType": "Identifier",
                                                                      "overloadedDeclarations": [],
                                                                      "referencedDeclaration": 11437,
                                                                      "src": "10465:18:6",
                                                                      "typeDescriptions": {
                                                                        "typeIdentifier": "t_type$_t_contract$_NotionalGovernance_$11437_$",
                                                                        "typeString": "type(contract NotionalGovernance)"
                                                                      }
                                                                    },
                                                                    "id": 706,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": true,
                                                                    "lValueRequested": false,
                                                                    "memberName": "transferOwnership",
                                                                    "nodeType": "MemberAccess",
                                                                    "referencedDeclaration": 11283,
                                                                    "src": "10465:36:6",
                                                                    "typeDescriptions": {
                                                                      "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_bool_$returns$__$",
                                                                      "typeString": "function NotionalGovernance.transferOwnership(address,bool)"
                                                                    }
                                                                  },
                                                                  "id": 707,
                                                                  "isConstant": false,
                                                                  "isLValue": false,
                                                                  "isPure": true,
                                                                  "lValueRequested": false,
                                                                  "memberName": "selector",
                                                                  "nodeType": "MemberAccess",
                                                                  "src": "10465:45:6",
                                                                  "typeDescriptions": {
                                                                    "typeIdentifier": "t_bytes4",
                                                                    "typeString": "bytes4"
                                                                  }
                                                                },
                                                                "src": "10458:52:6",
                                                                "typeDescriptions": {
                                                                  "typeIdentifier": "t_bool",
                                                                  "typeString": "bool"
                                                                }
                                                              },
                                                              "src": "10133:377:6",
                                                              "typeDescriptions": {
                                                                "typeIdentifier": "t_bool",
                                                                "typeString": "bool"
                                                              }
                                                            },
                                                            "nodeType": "BinaryOperation",
                                                            "operator": "||",
                                                            "rightExpression": {
                                                              "commonType": {
                                                                "typeIdentifier": "t_bytes4",
                                                                "typeString": "bytes4"
                                                              },
                                                              "id": 714,
                                                              "isConstant": false,
                                                              "isLValue": false,
                                                              "isPure": false,
                                                              "lValueRequested": false,
                                                              "leftExpression": {
                                                                "id": 710,
                                                                "name": "sig",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 256,
                                                                "src": "10526:3:6",
                                                                "typeDescriptions": {
                                                                  "typeIdentifier": "t_bytes4",
                                                                  "typeString": "bytes4"
                                                                }
                                                              },
                                                              "nodeType": "BinaryOperation",
                                                              "operator": "==",
                                                              "rightExpression": {
                                                                "expression": {
                                                                  "expression": {
                                                                    "id": 711,
                                                                    "name": "NotionalGovernance",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 11437,
                                                                    "src": "10533:18:6",
                                                                    "typeDescriptions": {
                                                                      "typeIdentifier": "t_type$_t_contract$_NotionalGovernance_$11437_$",
                                                                      "typeString": "type(contract NotionalGovernance)"
                                                                    }
                                                                  },
                                                                  "id": 712,
                                                                  "isConstant": false,
                                                                  "isLValue": false,
                                                                  "isPure": true,
                                                                  "lValueRequested": false,
                                                                  "memberName": "claimOwnership",
                                                                  "nodeType": "MemberAccess",
                                                                  "referencedDeclaration": 11286,
                                                                  "src": "10533:33:6",
                                                                  "typeDescriptions": {
                                                                    "typeIdentifier": "t_function_declaration_nonpayable$__$returns$__$",
                                                                    "typeString": "function NotionalGovernance.claimOwnership()"
                                                                  }
                                                                },
                                                                "id": 713,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": true,
                                                                "lValueRequested": false,
                                                                "memberName": "selector",
                                                                "nodeType": "MemberAccess",
                                                                "src": "10533:42:6",
                                                                "typeDescriptions": {
                                                                  "typeIdentifier": "t_bytes4",
                                                                  "typeString": "bytes4"
                                                                }
                                                              },
                                                              "src": "10526:49:6",
                                                              "typeDescriptions": {
                                                                "typeIdentifier": "t_bool",
                                                                "typeString": "bool"
                                                              }
                                                            },
                                                            "src": "10133:442:6",
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_bool",
                                                              "typeString": "bool"
                                                            }
                                                          },
                                                          "nodeType": "BinaryOperation",
                                                          "operator": "||",
                                                          "rightExpression": {
                                                            "commonType": {
                                                              "typeIdentifier": "t_bytes4",
                                                              "typeString": "bytes4"
                                                            },
                                                            "id": 720,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "leftExpression": {
                                                              "id": 716,
                                                              "name": "sig",
                                                              "nodeType": "Identifier",
                                                              "overloadedDeclarations": [],
                                                              "referencedDeclaration": 256,
                                                              "src": "10591:3:6",
                                                              "typeDescriptions": {
                                                                "typeIdentifier": "t_bytes4",
                                                                "typeString": "bytes4"
                                                              }
                                                            },
                                                            "nodeType": "BinaryOperation",
                                                            "operator": "==",
                                                            "rightExpression": {
                                                              "expression": {
                                                                "expression": {
                                                                  "id": 717,
                                                                  "name": "NotionalGovernance",
                                                                  "nodeType": "Identifier",
                                                                  "overloadedDeclarations": [],
                                                                  "referencedDeclaration": 11437,
                                                                  "src": "10598:18:6",
                                                                  "typeDescriptions": {
                                                                    "typeIdentifier": "t_type$_t_contract$_NotionalGovernance_$11437_$",
                                                                    "typeString": "type(contract NotionalGovernance)"
                                                                  }
                                                                },
                                                                "id": 718,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": true,
                                                                "lValueRequested": false,
                                                                "memberName": "updateIncentiveEmissionRate",
                                                                "nodeType": "MemberAccess",
                                                                "referencedDeclaration": 11366,
                                                                "src": "10598:46:6",
                                                                "typeDescriptions": {
                                                                  "typeIdentifier": "t_function_declaration_nonpayable$_t_uint16_$_t_uint32_$returns$__$",
                                                                  "typeString": "function NotionalGovernance.updateIncentiveEmissionRate(uint16,uint32)"
                                                                }
                                                              },
                                                              "id": 719,
                                                              "isConstant": false,
                                                              "isLValue": false,
                                                              "isPure": true,
                                                              "lValueRequested": false,
                                                              "memberName": "selector",
                                                              "nodeType": "MemberAccess",
                                                              "src": "10598:55:6",
                                                              "typeDescriptions": {
                                                                "typeIdentifier": "t_bytes4",
                                                                "typeString": "bytes4"
                                                              }
                                                            },
                                                            "src": "10591:62:6",
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_bool",
                                                              "typeString": "bool"
                                                            }
                                                          },
                                                          "src": "10133:520:6",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                          }
                                                        },
                                                        "nodeType": "BinaryOperation",
                                                        "operator": "||",
                                                        "rightExpression": {
                                                          "commonType": {
                                                            "typeIdentifier": "t_bytes4",
                                                            "typeString": "bytes4"
                                                          },
                                                          "id": 726,
                                                          "isConstant": false,
                                                          "isLValue": false,
                                                          "isPure": false,
                                                          "lValueRequested": false,
                                                          "leftExpression": {
                                                            "id": 722,
                                                            "name": "sig",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 256,
                                                            "src": "10669:3:6",
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_bytes4",
                                                              "typeString": "bytes4"
                                                            }
                                                          },
                                                          "nodeType": "BinaryOperation",
                                                          "operator": "==",
                                                          "rightExpression": {
                                                            "expression": {
                                                              "expression": {
                                                                "id": 723,
                                                                "name": "NotionalGovernance",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 11437,
                                                                "src": "10676:18:6",
                                                                "typeDescriptions": {
                                                                  "typeIdentifier": "t_type$_t_contract$_NotionalGovernance_$11437_$",
                                                                  "typeString": "type(contract NotionalGovernance)"
                                                                }
                                                              },
                                                              "id": 724,
                                                              "isConstant": false,
                                                              "isLValue": false,
                                                              "isPure": true,
                                                              "lValueRequested": false,
                                                              "memberName": "updateMaxCollateralBalance",
                                                              "nodeType": "MemberAccess",
                                                              "referencedDeclaration": 11324,
                                                              "src": "10676:45:6",
                                                              "typeDescriptions": {
                                                                "typeIdentifier": "t_function_declaration_nonpayable$_t_uint16_$_t_uint72_$returns$__$",
                                                                "typeString": "function NotionalGovernance.updateMaxCollateralBalance(uint16,uint72)"
                                                              }
                                                            },
                                                            "id": 725,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "lValueRequested": false,
                                                            "memberName": "selector",
                                                            "nodeType": "MemberAccess",
                                                            "src": "10676:54:6",
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_bytes4",
                                                              "typeString": "bytes4"
                                                            }
                                                          },
                                                          "src": "10669:61:6",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                          }
                                                        },
                                                        "src": "10133:597:6",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_bool",
                                                          "typeString": "bool"
                                                        }
                                                      },
                                                      "nodeType": "BinaryOperation",
                                                      "operator": "||",
                                                      "rightExpression": {
                                                        "commonType": {
                                                          "typeIdentifier": "t_bytes4",
                                                          "typeString": "bytes4"
                                                        },
                                                        "id": 732,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "leftExpression": {
                                                          "id": 728,
                                                          "name": "sig",
                                                          "nodeType": "Identifier",
                                                          "overloadedDeclarations": [],
                                                          "referencedDeclaration": 256,
                                                          "src": "10746:3:6",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_bytes4",
                                                            "typeString": "bytes4"
                                                          }
                                                        },
                                                        "nodeType": "BinaryOperation",
                                                        "operator": "==",
                                                        "rightExpression": {
                                                          "expression": {
                                                            "expression": {
                                                              "id": 729,
                                                              "name": "NotionalGovernance",
                                                              "nodeType": "Identifier",
                                                              "overloadedDeclarations": [],
                                                              "referencedDeclaration": 11437,
                                                              "src": "10753:18:6",
                                                              "typeDescriptions": {
                                                                "typeIdentifier": "t_type$_t_contract$_NotionalGovernance_$11437_$",
                                                                "typeString": "type(contract NotionalGovernance)"
                                                              }
                                                            },
                                                            "id": 730,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "lValueRequested": false,
                                                            "memberName": "updateDepositParameters",
                                                            "nodeType": "MemberAccess",
                                                            "referencedDeclaration": 11348,
                                                            "src": "10753:42:6",
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_function_declaration_nonpayable$_t_uint16_$_t_array$_t_uint32_$dyn_calldata_ptr_$_t_array$_t_uint32_$dyn_calldata_ptr_$returns$__$",
                                                              "typeString": "function NotionalGovernance.updateDepositParameters(uint16,uint32[] calldata,uint32[] calldata)"
                                                            }
                                                          },
                                                          "id": 731,
                                                          "isConstant": false,
                                                          "isLValue": false,
                                                          "isPure": true,
                                                          "lValueRequested": false,
                                                          "memberName": "selector",
                                                          "nodeType": "MemberAccess",
                                                          "src": "10753:51:6",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_bytes4",
                                                            "typeString": "bytes4"
                                                          }
                                                        },
                                                        "src": "10746:58:6",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_bool",
                                                          "typeString": "bool"
                                                        }
                                                      },
                                                      "src": "10133:671:6",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                      }
                                                    },
                                                    "nodeType": "BinaryOperation",
                                                    "operator": "||",
                                                    "rightExpression": {
                                                      "commonType": {
                                                        "typeIdentifier": "t_bytes4",
                                                        "typeString": "bytes4"
                                                      },
                                                      "id": 738,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "leftExpression": {
                                                        "id": 734,
                                                        "name": "sig",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 256,
                                                        "src": "10820:3:6",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_bytes4",
                                                          "typeString": "bytes4"
                                                        }
                                                      },
                                                      "nodeType": "BinaryOperation",
                                                      "operator": "==",
                                                      "rightExpression": {
                                                        "expression": {
                                                          "expression": {
                                                            "id": 735,
                                                            "name": "NotionalGovernance",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 11437,
                                                            "src": "10827:18:6",
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_type$_t_contract$_NotionalGovernance_$11437_$",
                                                              "typeString": "type(contract NotionalGovernance)"
                                                            }
                                                          },
                                                          "id": 736,
                                                          "isConstant": false,
                                                          "isLValue": false,
                                                          "isPure": true,
                                                          "lValueRequested": false,
                                                          "memberName": "updateInitializationParameters",
                                                          "nodeType": "MemberAccess",
                                                          "referencedDeclaration": 11359,
                                                          "src": "10827:49:6",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_function_declaration_nonpayable$_t_uint16_$_t_array$_t_uint32_$dyn_calldata_ptr_$_t_array$_t_uint32_$dyn_calldata_ptr_$returns$__$",
                                                            "typeString": "function NotionalGovernance.updateInitializationParameters(uint16,uint32[] calldata,uint32[] calldata)"
                                                          }
                                                        },
                                                        "id": 737,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "lValueRequested": false,
                                                        "memberName": "selector",
                                                        "nodeType": "MemberAccess",
                                                        "src": "10827:58:6",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_bytes4",
                                                          "typeString": "bytes4"
                                                        }
                                                      },
                                                      "src": "10820:65:6",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                      }
                                                    },
                                                    "src": "10133:752:6",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_bool",
                                                      "typeString": "bool"
                                                    }
                                                  },
                                                  "nodeType": "BinaryOperation",
                                                  "operator": "||",
                                                  "rightExpression": {
                                                    "commonType": {
                                                      "typeIdentifier": "t_bytes4",
                                                      "typeString": "bytes4"
                                                    },
                                                    "id": 744,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "leftExpression": {
                                                      "id": 740,
                                                      "name": "sig",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 256,
                                                      "src": "10901:3:6",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_bytes4",
                                                        "typeString": "bytes4"
                                                      }
                                                    },
                                                    "nodeType": "BinaryOperation",
                                                    "operator": "==",
                                                    "rightExpression": {
                                                      "expression": {
                                                        "expression": {
                                                          "id": 741,
                                                          "name": "NotionalGovernance",
                                                          "nodeType": "Identifier",
                                                          "overloadedDeclarations": [],
                                                          "referencedDeclaration": 11437,
                                                          "src": "10908:18:6",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_type$_t_contract$_NotionalGovernance_$11437_$",
                                                            "typeString": "type(contract NotionalGovernance)"
                                                          }
                                                        },
                                                        "id": 742,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "lValueRequested": false,
                                                        "memberName": "updateTokenCollateralParameters",
                                                        "nodeType": "MemberAccess",
                                                        "referencedDeclaration": 11381,
                                                        "src": "10908:50:6",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_function_declaration_nonpayable$_t_uint16_$_t_uint8_$_t_uint8_$_t_uint8_$_t_uint8_$_t_uint8_$returns$__$",
                                                          "typeString": "function NotionalGovernance.updateTokenCollateralParameters(uint16,uint8,uint8,uint8,uint8,uint8)"
                                                        }
                                                      },
                                                      "id": 743,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": true,
                                                      "lValueRequested": false,
                                                      "memberName": "selector",
                                                      "nodeType": "MemberAccess",
                                                      "src": "10908:59:6",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_bytes4",
                                                        "typeString": "bytes4"
                                                      }
                                                    },
                                                    "src": "10901:66:6",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_bool",
                                                      "typeString": "bool"
                                                    }
                                                  },
                                                  "src": "10133:834:6",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                  }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "||",
                                                "rightExpression": {
                                                  "commonType": {
                                                    "typeIdentifier": "t_bytes4",
                                                    "typeString": "bytes4"
                                                  },
                                                  "id": 750,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "leftExpression": {
                                                    "id": 746,
                                                    "name": "sig",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 256,
                                                    "src": "10983:3:6",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_bytes4",
                                                      "typeString": "bytes4"
                                                    }
                                                  },
                                                  "nodeType": "BinaryOperation",
                                                  "operator": "==",
                                                  "rightExpression": {
                                                    "expression": {
                                                      "expression": {
                                                        "id": 747,
                                                        "name": "NotionalGovernance",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 11437,
                                                        "src": "10990:18:6",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_type$_t_contract$_NotionalGovernance_$11437_$",
                                                          "typeString": "type(contract NotionalGovernance)"
                                                        }
                                                      },
                                                      "id": 748,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": true,
                                                      "lValueRequested": false,
                                                      "memberName": "updateGlobalTransferOperator",
                                                      "nodeType": "MemberAccess",
                                                      "referencedDeclaration": 11417,
                                                      "src": "10990:47:6",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_bool_$returns$__$",
                                                        "typeString": "function NotionalGovernance.updateGlobalTransferOperator(address,bool)"
                                                      }
                                                    },
                                                    "id": 749,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "lValueRequested": false,
                                                    "memberName": "selector",
                                                    "nodeType": "MemberAccess",
                                                    "src": "10990:56:6",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_bytes4",
                                                      "typeString": "bytes4"
                                                    }
                                                  },
                                                  "src": "10983:63:6",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                  }
                                                },
                                                "src": "10133:913:6",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_bool",
                                                  "typeString": "bool"
                                                }
                                              },
                                              "nodeType": "BinaryOperation",
                                              "operator": "||",
                                              "rightExpression": {
                                                "commonType": {
                                                  "typeIdentifier": "t_bytes4",
                                                  "typeString": "bytes4"
                                                },
                                                "id": 756,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                  "id": 752,
                                                  "name": "sig",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 256,
                                                  "src": "11062:3:6",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_bytes4",
                                                    "typeString": "bytes4"
                                                  }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "==",
                                                "rightExpression": {
                                                  "expression": {
                                                    "expression": {
                                                      "id": 753,
                                                      "name": "NotionalGovernance",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 11437,
                                                      "src": "11069:18:6",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_type$_t_contract$_NotionalGovernance_$11437_$",
                                                        "typeString": "type(contract NotionalGovernance)"
                                                      }
                                                    },
                                                    "id": 754,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "lValueRequested": false,
                                                    "memberName": "updateAuthorizedCallbackContract",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 11424,
                                                    "src": "11069:51:6",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_bool_$returns$__$",
                                                      "typeString": "function NotionalGovernance.updateAuthorizedCallbackContract(address,bool)"
                                                    }
                                                  },
                                                  "id": 755,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": true,
                                                  "lValueRequested": false,
                                                  "memberName": "selector",
                                                  "nodeType": "MemberAccess",
                                                  "src": "11069:60:6",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_bytes4",
                                                    "typeString": "bytes4"
                                                  }
                                                },
                                                "src": "11062:67:6",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_bool",
                                                  "typeString": "bool"
                                                }
                                              },
                                              "src": "10133:996:6",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "||",
                                            "rightExpression": {
                                              "commonType": {
                                                "typeIdentifier": "t_bytes4",
                                                "typeString": "bytes4"
                                              },
                                              "id": 762,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftExpression": {
                                                "id": 758,
                                                "name": "sig",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 256,
                                                "src": "11145:3:6",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_bytes4",
                                                  "typeString": "bytes4"
                                                }
                                              },
                                              "nodeType": "BinaryOperation",
                                              "operator": "==",
                                              "rightExpression": {
                                                "expression": {
                                                  "expression": {
                                                    "id": 759,
                                                    "name": "NotionalGovernance",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 11437,
                                                    "src": "11152:18:6",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_type$_t_contract$_NotionalGovernance_$11437_$",
                                                      "typeString": "type(contract NotionalGovernance)"
                                                    }
                                                  },
                                                  "id": 760,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": true,
                                                  "lValueRequested": false,
                                                  "memberName": "setLendingPool",
                                                  "nodeType": "MemberAccess",
                                                  "referencedDeclaration": 11429,
                                                  "src": "11152:33:6",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_function_declaration_nonpayable$_t_contract$_ILendingPool_$25689_$returns$__$",
                                                    "typeString": "function NotionalGovernance.setLendingPool(contract ILendingPool)"
                                                  }
                                                },
                                                "id": 761,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "lValueRequested": false,
                                                "memberName": "selector",
                                                "nodeType": "MemberAccess",
                                                "src": "11152:42:6",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_bytes4",
                                                  "typeString": "bytes4"
                                                }
                                              },
                                              "src": "11145:49:6",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                              }
                                            },
                                            "src": "10133:1061:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bool",
                                              "typeString": "bool"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "||",
                                          "rightExpression": {
                                            "commonType": {
                                              "typeIdentifier": "t_bytes4",
                                              "typeString": "bytes4"
                                            },
                                            "id": 768,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "id": 764,
                                              "name": "sig",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 256,
                                              "src": "11210:3:6",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_bytes4",
                                                "typeString": "bytes4"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "==",
                                            "rightExpression": {
                                              "expression": {
                                                "expression": {
                                                  "id": 765,
                                                  "name": "NotionalGovernance",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 11437,
                                                  "src": "11217:18:6",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_contract$_NotionalGovernance_$11437_$",
                                                    "typeString": "type(contract NotionalGovernance)"
                                                  }
                                                },
                                                "id": 766,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "lValueRequested": false,
                                                "memberName": "upgradeNTokenBeacon",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 11291,
                                                "src": "11217:38:6",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$returns$__$",
                                                  "typeString": "function NotionalGovernance.upgradeNTokenBeacon(address)"
                                                }
                                              },
                                              "id": 767,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "memberName": "selector",
                                              "nodeType": "MemberAccess",
                                              "src": "11217:47:6",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_bytes4",
                                                "typeString": "bytes4"
                                              }
                                            },
                                            "src": "11210:54:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bool",
                                              "typeString": "bool"
                                            }
                                          },
                                          "src": "10133:1131:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "||",
                                        "rightExpression": {
                                          "commonType": {
                                            "typeIdentifier": "t_bytes4",
                                            "typeString": "bytes4"
                                          },
                                          "id": 774,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "id": 770,
                                            "name": "sig",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 256,
                                            "src": "11280:3:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bytes4",
                                              "typeString": "bytes4"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "==",
                                          "rightExpression": {
                                            "expression": {
                                              "expression": {
                                                "id": 771,
                                                "name": "NotionalProxy",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 11908,
                                                "src": "11287:13:6",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_type$_t_contract$_NotionalProxy_$11908_$",
                                                  "typeString": "type(contract NotionalProxy)"
                                                }
                                              },
                                              "id": 772,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "memberName": "upgradeTo",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": 11627,
                                              "src": "11287:23:6",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$returns$__$",
                                                "typeString": "function NotionalProxy.upgradeTo(address)"
                                              }
                                            },
                                            "id": 773,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "memberName": "selector",
                                            "nodeType": "MemberAccess",
                                            "src": "11287:32:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bytes4",
                                              "typeString": "bytes4"
                                            }
                                          },
                                          "src": "11280:39:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          }
                                        },
                                        "src": "10133:1186:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "||",
                                      "rightExpression": {
                                        "commonType": {
                                          "typeIdentifier": "t_bytes4",
                                          "typeString": "bytes4"
                                        },
                                        "id": 780,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 776,
                                          "name": "sig",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 256,
                                          "src": "11335:3:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes4",
                                            "typeString": "bytes4"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "==",
                                        "rightExpression": {
                                          "expression": {
                                            "expression": {
                                              "id": 777,
                                              "name": "NotionalProxy",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 11908,
                                              "src": "11342:13:6",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_contract$_NotionalProxy_$11908_$",
                                                "typeString": "type(contract NotionalProxy)"
                                              }
                                            },
                                            "id": 778,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "memberName": "upgradeToAndCall",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 11634,
                                            "src": "11342:30:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_declaration_payable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
                                              "typeString": "function NotionalProxy.upgradeToAndCall(address,bytes memory) payable"
                                            }
                                          },
                                          "id": 779,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "memberName": "selector",
                                          "nodeType": "MemberAccess",
                                          "src": "11342:39:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes4",
                                            "typeString": "bytes4"
                                          }
                                        },
                                        "src": "11335:46:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "src": "10133:1248:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "falseBody": {
                                      "condition": {
                                        "commonType": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        },
                                        "id": 813,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "commonType": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          },
                                          "id": 807,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "commonType": {
                                              "typeIdentifier": "t_bool",
                                              "typeString": "bool"
                                            },
                                            "id": 801,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "commonType": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                              },
                                              "id": 795,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftExpression": {
                                                "commonType": {
                                                  "typeIdentifier": "t_bytes4",
                                                  "typeString": "bytes4"
                                                },
                                                "id": 789,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                  "id": 785,
                                                  "name": "sig",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 256,
                                                  "src": "11457:3:6",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_bytes4",
                                                    "typeString": "bytes4"
                                                  }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "==",
                                                "rightExpression": {
                                                  "expression": {
                                                    "expression": {
                                                      "id": 786,
                                                      "name": "NotionalTreasury",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 25775,
                                                      "src": "11464:16:6",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_type$_t_contract$_NotionalTreasury_$25775_$",
                                                        "typeString": "type(contract NotionalTreasury)"
                                                      }
                                                    },
                                                    "id": 787,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "lValueRequested": false,
                                                    "memberName": "claimCOMPAndTransfer",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 25746,
                                                    "src": "11464:37:6",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_function_declaration_nonpayable$_t_array$_t_address_$dyn_calldata_ptr_$returns$_t_uint256_$",
                                                      "typeString": "function NotionalTreasury.claimCOMPAndTransfer(address[] calldata) returns (uint256)"
                                                    }
                                                  },
                                                  "id": 788,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": true,
                                                  "lValueRequested": false,
                                                  "memberName": "selector",
                                                  "nodeType": "MemberAccess",
                                                  "src": "11464:46:6",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_bytes4",
                                                    "typeString": "bytes4"
                                                  }
                                                },
                                                "src": "11457:53:6",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_bool",
                                                  "typeString": "bool"
                                                }
                                              },
                                              "nodeType": "BinaryOperation",
                                              "operator": "||",
                                              "rightExpression": {
                                                "commonType": {
                                                  "typeIdentifier": "t_bytes4",
                                                  "typeString": "bytes4"
                                                },
                                                "id": 794,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                  "id": 790,
                                                  "name": "sig",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 256,
                                                  "src": "11526:3:6",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_bytes4",
                                                    "typeString": "bytes4"
                                                  }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "==",
                                                "rightExpression": {
                                                  "expression": {
                                                    "expression": {
                                                      "id": 791,
                                                      "name": "NotionalTreasury",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 25775,
                                                      "src": "11533:16:6",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_type$_t_contract$_NotionalTreasury_$25775_$",
                                                        "typeString": "type(contract NotionalTreasury)"
                                                      }
                                                    },
                                                    "id": 792,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "lValueRequested": false,
                                                    "memberName": "transferReserveToTreasury",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 25755,
                                                    "src": "11533:42:6",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_function_declaration_nonpayable$_t_array$_t_uint16_$dyn_calldata_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                                                      "typeString": "function NotionalTreasury.transferReserveToTreasury(uint16[] calldata) returns (uint256[] memory)"
                                                    }
                                                  },
                                                  "id": 793,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": true,
                                                  "lValueRequested": false,
                                                  "memberName": "selector",
                                                  "nodeType": "MemberAccess",
                                                  "src": "11533:51:6",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_bytes4",
                                                    "typeString": "bytes4"
                                                  }
                                                },
                                                "src": "11526:58:6",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_bool",
                                                  "typeString": "bool"
                                                }
                                              },
                                              "src": "11457:127:6",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "||",
                                            "rightExpression": {
                                              "commonType": {
                                                "typeIdentifier": "t_bytes4",
                                                "typeString": "bytes4"
                                              },
                                              "id": 800,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftExpression": {
                                                "id": 796,
                                                "name": "sig",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 256,
                                                "src": "11600:3:6",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_bytes4",
                                                  "typeString": "bytes4"
                                                }
                                              },
                                              "nodeType": "BinaryOperation",
                                              "operator": "==",
                                              "rightExpression": {
                                                "expression": {
                                                  "expression": {
                                                    "id": 797,
                                                    "name": "NotionalTreasury",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 25775,
                                                    "src": "11607:16:6",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_type$_t_contract$_NotionalTreasury_$25775_$",
                                                      "typeString": "type(contract NotionalTreasury)"
                                                    }
                                                  },
                                                  "id": 798,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": true,
                                                  "lValueRequested": false,
                                                  "memberName": "setTreasuryManager",
                                                  "nodeType": "MemberAccess",
                                                  "referencedDeclaration": 25760,
                                                  "src": "11607:35:6",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$returns$__$",
                                                    "typeString": "function NotionalTreasury.setTreasuryManager(address)"
                                                  }
                                                },
                                                "id": 799,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "lValueRequested": false,
                                                "memberName": "selector",
                                                "nodeType": "MemberAccess",
                                                "src": "11607:44:6",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_bytes4",
                                                  "typeString": "bytes4"
                                                }
                                              },
                                              "src": "11600:51:6",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                              }
                                            },
                                            "src": "11457:194:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bool",
                                              "typeString": "bool"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "||",
                                          "rightExpression": {
                                            "commonType": {
                                              "typeIdentifier": "t_bytes4",
                                              "typeString": "bytes4"
                                            },
                                            "id": 806,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "id": 802,
                                              "name": "sig",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 256,
                                              "src": "11667:3:6",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_bytes4",
                                                "typeString": "bytes4"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "==",
                                            "rightExpression": {
                                              "expression": {
                                                "expression": {
                                                  "id": 803,
                                                  "name": "NotionalTreasury",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 25775,
                                                  "src": "11674:16:6",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_contract$_NotionalTreasury_$25775_$",
                                                    "typeString": "type(contract NotionalTreasury)"
                                                  }
                                                },
                                                "id": 804,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "lValueRequested": false,
                                                "memberName": "setReserveBuffer",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 25767,
                                                "src": "11674:33:6",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_function_declaration_nonpayable$_t_uint16_$_t_uint256_$returns$__$",
                                                  "typeString": "function NotionalTreasury.setReserveBuffer(uint16,uint256)"
                                                }
                                              },
                                              "id": 805,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "memberName": "selector",
                                              "nodeType": "MemberAccess",
                                              "src": "11674:42:6",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_bytes4",
                                                "typeString": "bytes4"
                                              }
                                            },
                                            "src": "11667:49:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bool",
                                              "typeString": "bool"
                                            }
                                          },
                                          "src": "11457:259:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "||",
                                        "rightExpression": {
                                          "commonType": {
                                            "typeIdentifier": "t_bytes4",
                                            "typeString": "bytes4"
                                          },
                                          "id": 812,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "id": 808,
                                            "name": "sig",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 256,
                                            "src": "11732:3:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bytes4",
                                              "typeString": "bytes4"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "==",
                                          "rightExpression": {
                                            "expression": {
                                              "expression": {
                                                "id": 809,
                                                "name": "NotionalTreasury",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 25775,
                                                "src": "11739:16:6",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_type$_t_contract$_NotionalTreasury_$25775_$",
                                                  "typeString": "type(contract NotionalTreasury)"
                                                }
                                              },
                                              "id": 810,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "memberName": "setReserveCashBalance",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": 25774,
                                              "src": "11739:38:6",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_function_declaration_nonpayable$_t_uint16_$_t_int256_$returns$__$",
                                                "typeString": "function NotionalTreasury.setReserveCashBalance(uint16,int256)"
                                              }
                                            },
                                            "id": 811,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "memberName": "selector",
                                            "nodeType": "MemberAccess",
                                            "src": "11739:47:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bytes4",
                                              "typeString": "bytes4"
                                            }
                                          },
                                          "src": "11732:54:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          }
                                        },
                                        "src": "11457:329:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "falseBody": {
                                        "condition": {
                                          "commonType": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          },
                                          "id": 881,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "commonType": {
                                              "typeIdentifier": "t_bool",
                                              "typeString": "bool"
                                            },
                                            "id": 875,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "commonType": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                              },
                                              "id": 869,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftExpression": {
                                                "commonType": {
                                                  "typeIdentifier": "t_bool",
                                                  "typeString": "bool"
                                                },
                                                "id": 863,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                  "commonType": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                  },
                                                  "id": 857,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "leftExpression": {
                                                    "commonType": {
                                                      "typeIdentifier": "t_bool",
                                                      "typeString": "bool"
                                                    },
                                                    "id": 851,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "leftExpression": {
                                                      "commonType": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                      },
                                                      "id": 845,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "leftExpression": {
                                                        "commonType": {
                                                          "typeIdentifier": "t_bool",
                                                          "typeString": "bool"
                                                        },
                                                        "id": 839,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "leftExpression": {
                                                          "commonType": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                          },
                                                          "id": 833,
                                                          "isConstant": false,
                                                          "isLValue": false,
                                                          "isPure": false,
                                                          "lValueRequested": false,
                                                          "leftExpression": {
                                                            "commonType": {
                                                              "typeIdentifier": "t_bool",
                                                              "typeString": "bool"
                                                            },
                                                            "id": 827,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "leftExpression": {
                                                              "commonType": {
                                                                "typeIdentifier": "t_bytes4",
                                                                "typeString": "bytes4"
                                                              },
                                                              "id": 821,
                                                              "isConstant": false,
                                                              "isLValue": false,
                                                              "isPure": false,
                                                              "lValueRequested": false,
                                                              "leftExpression": {
                                                                "id": 817,
                                                                "name": "sig",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 256,
                                                                "src": "11860:3:6",
                                                                "typeDescriptions": {
                                                                  "typeIdentifier": "t_bytes4",
                                                                  "typeString": "bytes4"
                                                                }
                                                              },
                                                              "nodeType": "BinaryOperation",
                                                              "operator": "==",
                                                              "rightExpression": {
                                                                "expression": {
                                                                  "expression": {
                                                                    "id": 818,
                                                                    "name": "NotionalCalculations",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 11188,
                                                                    "src": "11867:20:6",
                                                                    "typeDescriptions": {
                                                                      "typeIdentifier": "t_type$_t_contract$_NotionalCalculations_$11188_$",
                                                                      "typeString": "type(contract NotionalCalculations)"
                                                                    }
                                                                  },
                                                                  "id": 819,
                                                                  "isConstant": false,
                                                                  "isLValue": false,
                                                                  "isPure": true,
                                                                  "lValueRequested": false,
                                                                  "memberName": "calculateNTokensToMint",
                                                                  "nodeType": "MemberAccess",
                                                                  "referencedDeclaration": 11031,
                                                                  "src": "11867:43:6",
                                                                  "typeDescriptions": {
                                                                    "typeIdentifier": "t_function_declaration_view$_t_uint16_$_t_uint88_$returns$_t_uint256_$",
                                                                    "typeString": "function NotionalCalculations.calculateNTokensToMint(uint16,uint88) view returns (uint256)"
                                                                  }
                                                                },
                                                                "id": 820,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": true,
                                                                "lValueRequested": false,
                                                                "memberName": "selector",
                                                                "nodeType": "MemberAccess",
                                                                "src": "11867:52:6",
                                                                "typeDescriptions": {
                                                                  "typeIdentifier": "t_bytes4",
                                                                  "typeString": "bytes4"
                                                                }
                                                              },
                                                              "src": "11860:59:6",
                                                              "typeDescriptions": {
                                                                "typeIdentifier": "t_bool",
                                                                "typeString": "bool"
                                                              }
                                                            },
                                                            "nodeType": "BinaryOperation",
                                                            "operator": "||",
                                                            "rightExpression": {
                                                              "commonType": {
                                                                "typeIdentifier": "t_bytes4",
                                                                "typeString": "bytes4"
                                                              },
                                                              "id": 826,
                                                              "isConstant": false,
                                                              "isLValue": false,
                                                              "isPure": false,
                                                              "lValueRequested": false,
                                                              "leftExpression": {
                                                                "id": 822,
                                                                "name": "sig",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 256,
                                                                "src": "11935:3:6",
                                                                "typeDescriptions": {
                                                                  "typeIdentifier": "t_bytes4",
                                                                  "typeString": "bytes4"
                                                                }
                                                              },
                                                              "nodeType": "BinaryOperation",
                                                              "operator": "==",
                                                              "rightExpression": {
                                                                "expression": {
                                                                  "expression": {
                                                                    "id": 823,
                                                                    "name": "NotionalCalculations",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 11188,
                                                                    "src": "11942:20:6",
                                                                    "typeDescriptions": {
                                                                      "typeIdentifier": "t_type$_t_contract$_NotionalCalculations_$11188_$",
                                                                      "typeString": "type(contract NotionalCalculations)"
                                                                    }
                                                                  },
                                                                  "id": 824,
                                                                  "isConstant": false,
                                                                  "isLValue": false,
                                                                  "isPure": true,
                                                                  "lValueRequested": false,
                                                                  "memberName": "getfCashAmountGivenCashAmount",
                                                                  "nodeType": "MemberAccess",
                                                                  "referencedDeclaration": 11044,
                                                                  "src": "11942:50:6",
                                                                  "typeDescriptions": {
                                                                    "typeIdentifier": "t_function_declaration_view$_t_uint16_$_t_int88_$_t_uint256_$_t_uint256_$returns$_t_int256_$",
                                                                    "typeString": "function NotionalCalculations.getfCashAmountGivenCashAmount(uint16,int88,uint256,uint256) view returns (int256)"
                                                                  }
                                                                },
                                                                "id": 825,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": true,
                                                                "lValueRequested": false,
                                                                "memberName": "selector",
                                                                "nodeType": "MemberAccess",
                                                                "src": "11942:59:6",
                                                                "typeDescriptions": {
                                                                  "typeIdentifier": "t_bytes4",
                                                                  "typeString": "bytes4"
                                                                }
                                                              },
                                                              "src": "11935:66:6",
                                                              "typeDescriptions": {
                                                                "typeIdentifier": "t_bool",
                                                                "typeString": "bool"
                                                              }
                                                            },
                                                            "src": "11860:141:6",
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_bool",
                                                              "typeString": "bool"
                                                            }
                                                          },
                                                          "nodeType": "BinaryOperation",
                                                          "operator": "||",
                                                          "rightExpression": {
                                                            "commonType": {
                                                              "typeIdentifier": "t_bytes4",
                                                              "typeString": "bytes4"
                                                            },
                                                            "id": 832,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "leftExpression": {
                                                              "id": 828,
                                                              "name": "sig",
                                                              "nodeType": "Identifier",
                                                              "overloadedDeclarations": [],
                                                              "referencedDeclaration": 256,
                                                              "src": "12017:3:6",
                                                              "typeDescriptions": {
                                                                "typeIdentifier": "t_bytes4",
                                                                "typeString": "bytes4"
                                                              }
                                                            },
                                                            "nodeType": "BinaryOperation",
                                                            "operator": "==",
                                                            "rightExpression": {
                                                              "expression": {
                                                                "expression": {
                                                                  "id": 829,
                                                                  "name": "NotionalCalculations",
                                                                  "nodeType": "Identifier",
                                                                  "overloadedDeclarations": [],
                                                                  "referencedDeclaration": 11188,
                                                                  "src": "12024:20:6",
                                                                  "typeDescriptions": {
                                                                    "typeIdentifier": "t_type$_t_contract$_NotionalCalculations_$11188_$",
                                                                    "typeString": "type(contract NotionalCalculations)"
                                                                  }
                                                                },
                                                                "id": 830,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": true,
                                                                "lValueRequested": false,
                                                                "memberName": "getCashAmountGivenfCashAmount",
                                                                "nodeType": "MemberAccess",
                                                                "referencedDeclaration": 11059,
                                                                "src": "12024:50:6",
                                                                "typeDescriptions": {
                                                                  "typeIdentifier": "t_function_declaration_view$_t_uint16_$_t_int88_$_t_uint256_$_t_uint256_$returns$_t_int256_$_t_int256_$",
                                                                  "typeString": "function NotionalCalculations.getCashAmountGivenfCashAmount(uint16,int88,uint256,uint256) view returns (int256,int256)"
                                                                }
                                                              },
                                                              "id": 831,
                                                              "isConstant": false,
                                                              "isLValue": false,
                                                              "isPure": true,
                                                              "lValueRequested": false,
                                                              "memberName": "selector",
                                                              "nodeType": "MemberAccess",
                                                              "src": "12024:59:6",
                                                              "typeDescriptions": {
                                                                "typeIdentifier": "t_bytes4",
                                                                "typeString": "bytes4"
                                                              }
                                                            },
                                                            "src": "12017:66:6",
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_bool",
                                                              "typeString": "bool"
                                                            }
                                                          },
                                                          "src": "11860:223:6",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                          }
                                                        },
                                                        "nodeType": "BinaryOperation",
                                                        "operator": "||",
                                                        "rightExpression": {
                                                          "commonType": {
                                                            "typeIdentifier": "t_bytes4",
                                                            "typeString": "bytes4"
                                                          },
                                                          "id": 838,
                                                          "isConstant": false,
                                                          "isLValue": false,
                                                          "isPure": false,
                                                          "lValueRequested": false,
                                                          "leftExpression": {
                                                            "id": 834,
                                                            "name": "sig",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 256,
                                                            "src": "12099:3:6",
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_bytes4",
                                                              "typeString": "bytes4"
                                                            }
                                                          },
                                                          "nodeType": "BinaryOperation",
                                                          "operator": "==",
                                                          "rightExpression": {
                                                            "expression": {
                                                              "expression": {
                                                                "id": 835,
                                                                "name": "NotionalCalculations",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 11188,
                                                                "src": "12106:20:6",
                                                                "typeDescriptions": {
                                                                  "typeIdentifier": "t_type$_t_contract$_NotionalCalculations_$11188_$",
                                                                  "typeString": "type(contract NotionalCalculations)"
                                                                }
                                                              },
                                                              "id": 836,
                                                              "isConstant": false,
                                                              "isLValue": false,
                                                              "isPure": true,
                                                              "lValueRequested": false,
                                                              "memberName": "nTokenGetClaimableIncentives",
                                                              "nodeType": "MemberAccess",
                                                              "referencedDeclaration": 11068,
                                                              "src": "12106:49:6",
                                                              "typeDescriptions": {
                                                                "typeIdentifier": "t_function_declaration_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                                                                "typeString": "function NotionalCalculations.nTokenGetClaimableIncentives(address,uint256) view returns (uint256)"
                                                              }
                                                            },
                                                            "id": 837,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "lValueRequested": false,
                                                            "memberName": "selector",
                                                            "nodeType": "MemberAccess",
                                                            "src": "12106:58:6",
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_bytes4",
                                                              "typeString": "bytes4"
                                                            }
                                                          },
                                                          "src": "12099:65:6",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                          }
                                                        },
                                                        "src": "11860:304:6",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_bool",
                                                          "typeString": "bool"
                                                        }
                                                      },
                                                      "nodeType": "BinaryOperation",
                                                      "operator": "||",
                                                      "rightExpression": {
                                                        "commonType": {
                                                          "typeIdentifier": "t_bytes4",
                                                          "typeString": "bytes4"
                                                        },
                                                        "id": 844,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "leftExpression": {
                                                          "id": 840,
                                                          "name": "sig",
                                                          "nodeType": "Identifier",
                                                          "overloadedDeclarations": [],
                                                          "referencedDeclaration": 256,
                                                          "src": "12180:3:6",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_bytes4",
                                                            "typeString": "bytes4"
                                                          }
                                                        },
                                                        "nodeType": "BinaryOperation",
                                                        "operator": "==",
                                                        "rightExpression": {
                                                          "expression": {
                                                            "expression": {
                                                              "id": 841,
                                                              "name": "NotionalCalculations",
                                                              "nodeType": "Identifier",
                                                              "overloadedDeclarations": [],
                                                              "referencedDeclaration": 11188,
                                                              "src": "12187:20:6",
                                                              "typeDescriptions": {
                                                                "typeIdentifier": "t_type$_t_contract$_NotionalCalculations_$11188_$",
                                                                "typeString": "type(contract NotionalCalculations)"
                                                              }
                                                            },
                                                            "id": 842,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "lValueRequested": false,
                                                            "memberName": "getPresentfCashValue",
                                                            "nodeType": "MemberAccess",
                                                            "referencedDeclaration": 11083,
                                                            "src": "12187:41:6",
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_function_declaration_view$_t_uint16_$_t_uint256_$_t_int256_$_t_uint256_$_t_bool_$returns$_t_int256_$",
                                                              "typeString": "function NotionalCalculations.getPresentfCashValue(uint16,uint256,int256,uint256,bool) view returns (int256)"
                                                            }
                                                          },
                                                          "id": 843,
                                                          "isConstant": false,
                                                          "isLValue": false,
                                                          "isPure": true,
                                                          "lValueRequested": false,
                                                          "memberName": "selector",
                                                          "nodeType": "MemberAccess",
                                                          "src": "12187:50:6",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_bytes4",
                                                            "typeString": "bytes4"
                                                          }
                                                        },
                                                        "src": "12180:57:6",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_bool",
                                                          "typeString": "bool"
                                                        }
                                                      },
                                                      "src": "11860:377:6",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                      }
                                                    },
                                                    "nodeType": "BinaryOperation",
                                                    "operator": "||",
                                                    "rightExpression": {
                                                      "commonType": {
                                                        "typeIdentifier": "t_bytes4",
                                                        "typeString": "bytes4"
                                                      },
                                                      "id": 850,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "leftExpression": {
                                                        "id": 846,
                                                        "name": "sig",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 256,
                                                        "src": "12253:3:6",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_bytes4",
                                                          "typeString": "bytes4"
                                                        }
                                                      },
                                                      "nodeType": "BinaryOperation",
                                                      "operator": "==",
                                                      "rightExpression": {
                                                        "expression": {
                                                          "expression": {
                                                            "id": 847,
                                                            "name": "NotionalCalculations",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 11188,
                                                            "src": "12260:20:6",
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_type$_t_contract$_NotionalCalculations_$11188_$",
                                                              "typeString": "type(contract NotionalCalculations)"
                                                            }
                                                          },
                                                          "id": 848,
                                                          "isConstant": false,
                                                          "isLValue": false,
                                                          "isPure": true,
                                                          "lValueRequested": false,
                                                          "memberName": "getMarketIndex",
                                                          "nodeType": "MemberAccess",
                                                          "referencedDeclaration": 11092,
                                                          "src": "12260:35:6",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_function_declaration_pure$_t_uint256_$_t_uint256_$returns$_t_uint8_$",
                                                            "typeString": "function NotionalCalculations.getMarketIndex(uint256,uint256) pure returns (uint8)"
                                                          }
                                                        },
                                                        "id": 849,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "lValueRequested": false,
                                                        "memberName": "selector",
                                                        "nodeType": "MemberAccess",
                                                        "src": "12260:44:6",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_bytes4",
                                                          "typeString": "bytes4"
                                                        }
                                                      },
                                                      "src": "12253:51:6",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                      }
                                                    },
                                                    "src": "11860:444:6",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_bool",
                                                      "typeString": "bool"
                                                    }
                                                  },
                                                  "nodeType": "BinaryOperation",
                                                  "operator": "||",
                                                  "rightExpression": {
                                                    "commonType": {
                                                      "typeIdentifier": "t_bytes4",
                                                      "typeString": "bytes4"
                                                    },
                                                    "id": 856,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "leftExpression": {
                                                      "id": 852,
                                                      "name": "sig",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 256,
                                                      "src": "12320:3:6",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_bytes4",
                                                        "typeString": "bytes4"
                                                      }
                                                    },
                                                    "nodeType": "BinaryOperation",
                                                    "operator": "==",
                                                    "rightExpression": {
                                                      "expression": {
                                                        "expression": {
                                                          "id": 853,
                                                          "name": "NotionalCalculations",
                                                          "nodeType": "Identifier",
                                                          "overloadedDeclarations": [],
                                                          "referencedDeclaration": 11188,
                                                          "src": "12327:20:6",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_type$_t_contract$_NotionalCalculations_$11188_$",
                                                            "typeString": "type(contract NotionalCalculations)"
                                                          }
                                                        },
                                                        "id": 854,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "lValueRequested": false,
                                                        "memberName": "getfCashLendFromDeposit",
                                                        "nodeType": "MemberAccess",
                                                        "referencedDeclaration": 11113,
                                                        "src": "12327:44:6",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_function_declaration_view$_t_uint16_$_t_uint256_$_t_uint256_$_t_uint32_$_t_uint256_$_t_bool_$returns$_t_uint88_$_t_uint8_$_t_bytes32_$",
                                                          "typeString": "function NotionalCalculations.getfCashLendFromDeposit(uint16,uint256,uint256,uint32,uint256,bool) view returns (uint88,uint8,bytes32)"
                                                        }
                                                      },
                                                      "id": 855,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": true,
                                                      "lValueRequested": false,
                                                      "memberName": "selector",
                                                      "nodeType": "MemberAccess",
                                                      "src": "12327:53:6",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_bytes4",
                                                        "typeString": "bytes4"
                                                      }
                                                    },
                                                    "src": "12320:60:6",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_bool",
                                                      "typeString": "bool"
                                                    }
                                                  },
                                                  "src": "11860:520:6",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                  }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "||",
                                                "rightExpression": {
                                                  "commonType": {
                                                    "typeIdentifier": "t_bytes4",
                                                    "typeString": "bytes4"
                                                  },
                                                  "id": 862,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "leftExpression": {
                                                    "id": 858,
                                                    "name": "sig",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 256,
                                                    "src": "12396:3:6",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_bytes4",
                                                      "typeString": "bytes4"
                                                    }
                                                  },
                                                  "nodeType": "BinaryOperation",
                                                  "operator": "==",
                                                  "rightExpression": {
                                                    "expression": {
                                                      "expression": {
                                                        "id": 859,
                                                        "name": "NotionalCalculations",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 11188,
                                                        "src": "12403:20:6",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_type$_t_contract$_NotionalCalculations_$11188_$",
                                                          "typeString": "type(contract NotionalCalculations)"
                                                        }
                                                      },
                                                      "id": 860,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": true,
                                                      "lValueRequested": false,
                                                      "memberName": "getfCashBorrowFromPrincipal",
                                                      "nodeType": "MemberAccess",
                                                      "referencedDeclaration": 11134,
                                                      "src": "12403:48:6",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_function_declaration_view$_t_uint16_$_t_uint256_$_t_uint256_$_t_uint32_$_t_uint256_$_t_bool_$returns$_t_uint88_$_t_uint8_$_t_bytes32_$",
                                                        "typeString": "function NotionalCalculations.getfCashBorrowFromPrincipal(uint16,uint256,uint256,uint32,uint256,bool) view returns (uint88,uint8,bytes32)"
                                                      }
                                                    },
                                                    "id": 861,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "lValueRequested": false,
                                                    "memberName": "selector",
                                                    "nodeType": "MemberAccess",
                                                    "src": "12403:57:6",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_bytes4",
                                                      "typeString": "bytes4"
                                                    }
                                                  },
                                                  "src": "12396:64:6",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                  }
                                                },
                                                "src": "11860:600:6",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_bool",
                                                  "typeString": "bool"
                                                }
                                              },
                                              "nodeType": "BinaryOperation",
                                              "operator": "||",
                                              "rightExpression": {
                                                "commonType": {
                                                  "typeIdentifier": "t_bytes4",
                                                  "typeString": "bytes4"
                                                },
                                                "id": 868,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                  "id": 864,
                                                  "name": "sig",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 256,
                                                  "src": "12476:3:6",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_bytes4",
                                                    "typeString": "bytes4"
                                                  }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "==",
                                                "rightExpression": {
                                                  "expression": {
                                                    "expression": {
                                                      "id": 865,
                                                      "name": "NotionalCalculations",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 11188,
                                                      "src": "12483:20:6",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_type$_t_contract$_NotionalCalculations_$11188_$",
                                                        "typeString": "type(contract NotionalCalculations)"
                                                      }
                                                    },
                                                    "id": 866,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "lValueRequested": false,
                                                    "memberName": "getDepositFromfCashLend",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 11155,
                                                    "src": "12483:44:6",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_function_declaration_view$_t_uint16_$_t_uint256_$_t_uint256_$_t_uint32_$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_uint8_$_t_bytes32_$",
                                                      "typeString": "function NotionalCalculations.getDepositFromfCashLend(uint16,uint256,uint256,uint32,uint256) view returns (uint256,uint256,uint8,bytes32)"
                                                    }
                                                  },
                                                  "id": 867,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": true,
                                                  "lValueRequested": false,
                                                  "memberName": "selector",
                                                  "nodeType": "MemberAccess",
                                                  "src": "12483:53:6",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_bytes4",
                                                    "typeString": "bytes4"
                                                  }
                                                },
                                                "src": "12476:60:6",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_bool",
                                                  "typeString": "bool"
                                                }
                                              },
                                              "src": "11860:676:6",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "||",
                                            "rightExpression": {
                                              "commonType": {
                                                "typeIdentifier": "t_bytes4",
                                                "typeString": "bytes4"
                                              },
                                              "id": 874,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftExpression": {
                                                "id": 870,
                                                "name": "sig",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 256,
                                                "src": "12552:3:6",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_bytes4",
                                                  "typeString": "bytes4"
                                                }
                                              },
                                              "nodeType": "BinaryOperation",
                                              "operator": "==",
                                              "rightExpression": {
                                                "expression": {
                                                  "expression": {
                                                    "id": 871,
                                                    "name": "NotionalCalculations",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 11188,
                                                    "src": "12559:20:6",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_type$_t_contract$_NotionalCalculations_$11188_$",
                                                      "typeString": "type(contract NotionalCalculations)"
                                                    }
                                                  },
                                                  "id": 872,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": true,
                                                  "lValueRequested": false,
                                                  "memberName": "getPrincipalFromfCashBorrow",
                                                  "nodeType": "MemberAccess",
                                                  "referencedDeclaration": 11176,
                                                  "src": "12559:48:6",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_function_declaration_view$_t_uint16_$_t_uint256_$_t_uint256_$_t_uint32_$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_uint8_$_t_bytes32_$",
                                                    "typeString": "function NotionalCalculations.getPrincipalFromfCashBorrow(uint16,uint256,uint256,uint32,uint256) view returns (uint256,uint256,uint8,bytes32)"
                                                  }
                                                },
                                                "id": 873,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "lValueRequested": false,
                                                "memberName": "selector",
                                                "nodeType": "MemberAccess",
                                                "src": "12559:57:6",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_bytes4",
                                                  "typeString": "bytes4"
                                                }
                                              },
                                              "src": "12552:64:6",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                              }
                                            },
                                            "src": "11860:756:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bool",
                                              "typeString": "bool"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "||",
                                          "rightExpression": {
                                            "commonType": {
                                              "typeIdentifier": "t_bytes4",
                                              "typeString": "bytes4"
                                            },
                                            "id": 880,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "id": 876,
                                              "name": "sig",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 256,
                                              "src": "12632:3:6",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_bytes4",
                                                "typeString": "bytes4"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "==",
                                            "rightExpression": {
                                              "expression": {
                                                "expression": {
                                                  "id": 877,
                                                  "name": "NotionalCalculations",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 11188,
                                                  "src": "12639:20:6",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_contract$_NotionalCalculations_$11188_$",
                                                    "typeString": "type(contract NotionalCalculations)"
                                                  }
                                                },
                                                "id": 878,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "lValueRequested": false,
                                                "memberName": "convertCashBalanceToExternal",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 11187,
                                                "src": "12639:49:6",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_function_declaration_view$_t_uint16_$_t_int256_$_t_bool_$returns$_t_int256_$",
                                                  "typeString": "function NotionalCalculations.convertCashBalanceToExternal(uint16,int256,bool) view returns (int256)"
                                                }
                                              },
                                              "id": 879,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "memberName": "selector",
                                              "nodeType": "MemberAccess",
                                              "src": "12639:58:6",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_bytes4",
                                                "typeString": "bytes4"
                                              }
                                            },
                                            "src": "12632:65:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bool",
                                              "typeString": "bool"
                                            }
                                          },
                                          "src": "11860:837:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          }
                                        },
                                        "falseBody": {
                                          "id": 887,
                                          "nodeType": "Block",
                                          "src": "12763:164:6",
                                          "statements": [
                                            {
                                              "expression": {
                                                "id": 885,
                                                "name": "VIEWS",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 24,
                                                "src": "12911:5:6",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              },
                                              "functionReturnParameters": 260,
                                              "id": 886,
                                              "nodeType": "Return",
                                              "src": "12904:12:6"
                                            }
                                          ]
                                        },
                                        "id": 888,
                                        "nodeType": "IfStatement",
                                        "src": "11843:1084:6",
                                        "trueBody": {
                                          "id": 884,
                                          "nodeType": "Block",
                                          "src": "12708:49:6",
                                          "statements": [
                                            {
                                              "expression": {
                                                "id": 882,
                                                "name": "CALCULATION_VIEWS",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 44,
                                                "src": "12729:17:6",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              },
                                              "functionReturnParameters": 260,
                                              "id": 883,
                                              "nodeType": "Return",
                                              "src": "12722:24:6"
                                            }
                                          ]
                                        }
                                      },
                                      "id": 889,
                                      "nodeType": "IfStatement",
                                      "src": "11440:1487:6",
                                      "trueBody": {
                                        "id": 816,
                                        "nodeType": "Block",
                                        "src": "11797:40:6",
                                        "statements": [
                                          {
                                            "expression": {
                                              "id": 814,
                                              "name": "TREASURY",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 42,
                                              "src": "11818:8:6",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            },
                                            "functionReturnParameters": 260,
                                            "id": 815,
                                            "nodeType": "Return",
                                            "src": "11811:15:6"
                                          }
                                        ]
                                      }
                                    },
                                    "id": 890,
                                    "nodeType": "IfStatement",
                                    "src": "10116:2811:6",
                                    "trueBody": {
                                      "id": 784,
                                      "nodeType": "Block",
                                      "src": "11392:42:6",
                                      "statements": [
                                        {
                                          "expression": {
                                            "id": 782,
                                            "name": "GOVERNANCE",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 22,
                                            "src": "11413:10:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          },
                                          "functionReturnParameters": 260,
                                          "id": 783,
                                          "nodeType": "Return",
                                          "src": "11406:17:6"
                                        }
                                      ]
                                    }
                                  },
                                  "id": 891,
                                  "nodeType": "IfStatement",
                                  "src": "9920:3007:6",
                                  "trueBody": {
                                    "id": 674,
                                    "nodeType": "Block",
                                    "src": "10061:49:6",
                                    "statements": [
                                      {
                                        "expression": {
                                          "id": 672,
                                          "name": "INITIALIZE_MARKET",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 26,
                                          "src": "10082:17:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        "functionReturnParameters": 260,
                                        "id": 673,
                                        "nodeType": "Return",
                                        "src": "10075:24:6"
                                      }
                                    ]
                                  }
                                },
                                "id": 892,
                                "nodeType": "IfStatement",
                                "src": "8853:4074:6",
                                "trueBody": {
                                  "id": 660,
                                  "nodeType": "Block",
                                  "src": "9870:44:6",
                                  "statements": [
                                    {
                                      "expression": {
                                        "id": 658,
                                        "name": "VAULT_ACTION",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 48,
                                        "src": "9891:12:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "functionReturnParameters": 260,
                                      "id": 659,
                                      "nodeType": "Return",
                                      "src": "9884:19:6"
                                    }
                                  ]
                                }
                              },
                              "id": 893,
                              "nodeType": "IfStatement",
                              "src": "8490:4437:6",
                              "trueBody": {
                                "id": 568,
                                "nodeType": "Block",
                                "src": "8800:47:6",
                                "statements": [
                                  {
                                    "expression": {
                                      "id": 566,
                                      "name": "LIQUIDATE_FCASH",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 38,
                                      "src": "8821:15:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "functionReturnParameters": 260,
                                    "id": 567,
                                    "nodeType": "Return",
                                    "src": "8814:22:6"
                                  }
                                ]
                              }
                            },
                            "id": 894,
                            "nodeType": "IfStatement",
                            "src": "8118:4809:6",
                            "trueBody": {
                              "id": 542,
                              "nodeType": "Block",
                              "src": "8434:50:6",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 540,
                                    "name": "LIQUIDATE_CURRENCY",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 36,
                                    "src": "8455:18:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "functionReturnParameters": 260,
                                  "id": 541,
                                  "nodeType": "Return",
                                  "src": "8448:25:6"
                                }
                              ]
                            }
                          },
                          "id": 895,
                          "nodeType": "IfStatement",
                          "src": "7156:5771:6",
                          "trueBody": {
                            "id": 516,
                            "nodeType": "Block",
                            "src": "8066:46:6",
                            "statements": [
                              {
                                "expression": {
                                  "id": 514,
                                  "name": "NTOKEN_ACTIONS",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 28,
                                  "src": "8087:14:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "functionReturnParameters": 260,
                                "id": 515,
                                "nodeType": "Return",
                                "src": "8080:21:6"
                              }
                            ]
                          }
                        },
                        "id": 896,
                        "nodeType": "IfStatement",
                        "src": "6380:6547:6",
                        "trueBody": {
                          "id": 436,
                          "nodeType": "Block",
                          "src": "7111:39:6",
                          "statements": [
                            {
                              "expression": {
                                "id": 434,
                                "name": "ERC1155",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 34,
                                "src": "7132:7:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "functionReturnParameters": 260,
                              "id": 435,
                              "nodeType": "Return",
                              "src": "7125:14:6"
                            }
                          ]
                        }
                      },
                      "id": 897,
                      "nodeType": "IfStatement",
                      "src": "5948:6979:6",
                      "trueBody": {
                        "id": 368,
                        "nodeType": "Block",
                        "src": "6328:46:6",
                        "statements": [
                          {
                            "expression": {
                              "id": 366,
                              "name": "ACCOUNT_ACTION",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32,
                              "src": "6349:14:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "functionReturnParameters": 260,
                            "id": 367,
                            "nodeType": "Return",
                            "src": "6342:21:6"
                          }
                        ]
                      }
                    },
                    "id": 898,
                    "nodeType": "IfStatement",
                    "src": "5391:7536:6",
                    "trueBody": {
                      "id": 330,
                      "nodeType": "Block",
                      "src": "5890:52:6",
                      "statements": [
                        {
                          "expression": {
                            "id": 328,
                            "name": "VAULT_ACCOUNT_ACTION",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46,
                            "src": "5911:20:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "functionReturnParameters": 260,
                          "id": 329,
                          "nodeType": "Return",
                          "src": "5904:27:6"
                        }
                      ]
                    }
                  },
                  "id": 899,
                  "nodeType": "IfStatement",
                  "src": "5054:7873:6",
                  "trueBody": {
                    "id": 286,
                    "nodeType": "Block",
                    "src": "5341:44:6",
                    "statements": [
                      {
                        "expression": {
                          "id": 284,
                          "name": "BATCH_ACTION",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30,
                          "src": "5362:12:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 260,
                        "id": 285,
                        "nodeType": "Return",
                        "src": "5355:19:6"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 254,
              "nodeType": "StructuredDocumentation",
              "src": "4809:155:6",
              "text": "@notice Returns the implementation contract for the method signature\n @param sig method signature to call\n @return implementation address"
            },
            "functionSelector": "76e1df48",
            "id": 901,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getRouterImplementation",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 257,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 256,
                  "mutability": "mutable",
                  "name": "sig",
                  "nodeType": "VariableDeclaration",
                  "scope": 901,
                  "src": "5002:10:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 255,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "5002:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5001:12:6"
            },
            "returnParameters": {
              "id": 260,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 259,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 901,
                  "src": "5035:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 258,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5035:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5034:9:6"
            },
            "scope": 921,
            "src": "4969:7964:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 908,
              "nodeType": "Block",
              "src": "13164:919:6",
              "statements": [
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "13239:838:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13492:1:6",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13495:1:6",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [],
                              "functionName": {
                                "name": "calldatasize",
                                "nodeType": "YulIdentifier",
                                "src": "13498:12:6"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "13498:14:6"
                            }
                          ],
                          "functionName": {
                            "name": "calldatacopy",
                            "nodeType": "YulIdentifier",
                            "src": "13479:12:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13479:34:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "13479:34:6"
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "13640:74:6",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [],
                              "functionName": {
                                "name": "gas",
                                "nodeType": "YulIdentifier",
                                "src": "13667:3:6"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "13667:5:6"
                            },
                            {
                              "name": "implementation",
                              "nodeType": "YulIdentifier",
                              "src": "13674:14:6"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13690:1:6",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [],
                              "functionName": {
                                "name": "calldatasize",
                                "nodeType": "YulIdentifier",
                                "src": "13693:12:6"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "13693:14:6"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13709:1:6",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13712:1:6",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "delegatecall",
                            "nodeType": "YulIdentifier",
                            "src": "13654:12:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13654:60:6"
                        },
                        "variables": [
                          {
                            "name": "result",
                            "nodeType": "YulTypedName",
                            "src": "13644:6:6",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13782:1:6",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13785:1:6",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [],
                              "functionName": {
                                "name": "returndatasize",
                                "nodeType": "YulIdentifier",
                                "src": "13788:14:6"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "13788:16:6"
                            }
                          ],
                          "functionName": {
                            "name": "returndatacopy",
                            "nodeType": "YulIdentifier",
                            "src": "13767:14:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13767:38:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "13767:38:6"
                      },
                      {
                        "cases": [
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "13908:67:6",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "13937:1:6",
                                        "type": "",
                                        "value": "0"
                                      },
                                      {
                                        "arguments": [],
                                        "functionName": {
                                          "name": "returndatasize",
                                          "nodeType": "YulIdentifier",
                                          "src": "13940:14:6"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "13940:16:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "revert",
                                      "nodeType": "YulIdentifier",
                                      "src": "13930:6:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "13930:27:6"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "13930:27:6"
                                }
                              ]
                            },
                            "nodeType": "YulCase",
                            "src": "13901:74:6",
                            "value": {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13906:1:6",
                              "type": "",
                              "value": "0"
                            }
                          },
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "14000:67:6",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "14029:1:6",
                                        "type": "",
                                        "value": "0"
                                      },
                                      {
                                        "arguments": [],
                                        "functionName": {
                                          "name": "returndatasize",
                                          "nodeType": "YulIdentifier",
                                          "src": "14032:14:6"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "14032:16:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "return",
                                      "nodeType": "YulIdentifier",
                                      "src": "14022:6:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "14022:27:6"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "14022:27:6"
                                }
                              ]
                            },
                            "nodeType": "YulCase",
                            "src": "13992:75:6",
                            "value": "default"
                          }
                        ],
                        "expression": {
                          "name": "result",
                          "nodeType": "YulIdentifier",
                          "src": "13826:6:6"
                        },
                        "nodeType": "YulSwitch",
                        "src": "13819:248:6"
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 904,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "13674:14:6",
                      "valueSize": 1
                    }
                  ],
                  "id": 907,
                  "nodeType": "InlineAssembly",
                  "src": "13230:847:6"
                }
              ]
            },
            "documentation": {
              "id": 902,
              "nodeType": "StructuredDocumentation",
              "src": "12939:169:6",
              "text": "@dev Delegates the current call to `implementation`.\n This function does not return to its internal call site, it will return directly to the external caller."
            },
            "id": 909,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_delegate",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 905,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 904,
                  "mutability": "mutable",
                  "name": "implementation",
                  "nodeType": "VariableDeclaration",
                  "scope": 909,
                  "src": "13132:22:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 903,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13132:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13131:24:6"
            },
            "returnParameters": {
              "id": 906,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13164:0:6"
            },
            "scope": 921,
            "src": "13113:970:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 919,
              "nodeType": "Block",
              "src": "14117:60:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 914,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "14161:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 915,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sig",
                            "nodeType": "MemberAccess",
                            "src": "14161:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          ],
                          "id": 913,
                          "name": "getRouterImplementation",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 901,
                          "src": "14137:23:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_address_$",
                            "typeString": "function (bytes4) view returns (address)"
                          }
                        },
                        "id": 916,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14137:32:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 912,
                      "name": "_delegate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 909,
                      "src": "14127:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 917,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14127:43:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 918,
                  "nodeType": "ExpressionStatement",
                  "src": "14127:43:6"
                }
              ]
            },
            "id": 920,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 910,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14097:2:6"
            },
            "returnParameters": {
              "id": 911,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14117:0:6"
            },
            "scope": 921,
            "src": "14089:88:6",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 922,
        "src": "1271:12996:6"
      }
    ],
    "src": "41:14227:6"
  },
  "bytecode": "",
  "bytecodeSha1": "961d0558bddf2472df86efbcac62c25b2890e7a7",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.7.6+commit.7338295f"
  },
  "contractName": "Router",
  "coverageMap": {
    "branches": {
      "13": {},
      "16": {},
      "17": {},
      "6": {
        "Router.getRouterImplementation": {
          "20": [
            5071,
            5119,
            true
          ],
          "21": [
            5135,
            5191,
            true
          ],
          "22": [
            5207,
            5275,
            true
          ],
          "23": [
            5291,
            5330,
            false
          ],
          "24": [
            5408,
            5454,
            true
          ],
          "25": [
            5470,
            5523,
            true
          ],
          "26": [
            5539,
            5584,
            true
          ],
          "27": [
            5600,
            5653,
            true
          ],
          "28": [
            5669,
            5720,
            true
          ],
          "29": [
            5736,
            5797,
            true
          ],
          "30": [
            5813,
            5879,
            false
          ],
          "31": [
            5965,
            6017,
            true
          ],
          "32": [
            6033,
            6080,
            true
          ],
          "33": [
            6096,
            6134,
            true
          ],
          "34": [
            6150,
            6193,
            true
          ],
          "35": [
            6209,
            6251,
            true
          ],
          "36": [
            6267,
            6317,
            false
          ],
          "37": [
            6397,
            6448,
            true
          ],
          "38": [
            6464,
            6507,
            true
          ],
          "39": [
            6523,
            6571,
            true
          ],
          "40": [
            6587,
            6636,
            true
          ],
          "41": [
            6652,
            6706,
            true
          ],
          "42": [
            6722,
            6772,
            true
          ],
          "43": [
            6788,
            6843,
            true
          ],
          "44": [
            6859,
            6907,
            true
          ],
          "45": [
            6923,
            6967,
            true
          ],
          "46": [
            6983,
            7034,
            true
          ],
          "47": [
            7050,
            7100,
            false
          ],
          "48": [
            7173,
            7220,
            true
          ],
          "49": [
            7236,
            7289,
            true
          ],
          "50": [
            7305,
            7350,
            true
          ],
          "51": [
            7366,
            7417,
            true
          ],
          "52": [
            7433,
            7477,
            true
          ],
          "53": [
            7493,
            7541,
            true
          ],
          "54": [
            7557,
            7611,
            true
          ],
          "55": [
            7627,
            7678,
            true
          ],
          "56": [
            7694,
            7758,
            true
          ],
          "57": [
            7774,
            7843,
            true
          ],
          "58": [
            7859,
            7925,
            true
          ],
          "59": [
            7941,
            7991,
            true
          ],
          "60": [
            8007,
            8055,
            false
          ],
          "61": [
            8135,
            8187,
            true
          ],
          "62": [
            8203,
            8260,
            true
          ],
          "63": [
            8276,
            8339,
            true
          ],
          "64": [
            8355,
            8423,
            false
          ],
          "65": [
            8507,
            8556,
            true
          ],
          "66": [
            8572,
            8629,
            true
          ],
          "67": [
            8645,
            8705,
            true
          ],
          "68": [
            8721,
            8789,
            false
          ],
          "69": [
            8870,
            8910,
            true
          ],
          "70": [
            8926,
            8974,
            true
          ],
          "71": [
            8990,
            9042,
            true
          ],
          "72": [
            9058,
            9116,
            true
          ],
          "73": [
            9132,
            9193,
            true
          ],
          "74": [
            9209,
            9264,
            true
          ],
          "75": [
            9280,
            9339,
            true
          ],
          "76": [
            9355,
            9415,
            true
          ],
          "77": [
            9431,
            9493,
            true
          ],
          "78": [
            9509,
            9549,
            true
          ],
          "79": [
            9565,
            9608,
            true
          ],
          "80": [
            9624,
            9670,
            true
          ],
          "81": [
            9686,
            9733,
            true
          ],
          "82": [
            9749,
            9791,
            true
          ],
          "83": [
            9807,
            9859,
            false
          ],
          "84": [
            9937,
            9984,
            true
          ],
          "85": [
            10000,
            10050,
            false
          ],
          "86": [
            10133,
            10180,
            true
          ],
          "87": [
            10196,
            10246,
            true
          ],
          "88": [
            10262,
            10312,
            true
          ],
          "89": [
            10328,
            10378,
            true
          ],
          "90": [
            10394,
            10442,
            true
          ],
          "91": [
            10458,
            10510,
            true
          ],
          "92": [
            10526,
            10575,
            true
          ],
          "93": [
            10591,
            10653,
            true
          ],
          "94": [
            10669,
            10730,
            true
          ],
          "95": [
            10746,
            10804,
            true
          ],
          "96": [
            10820,
            10885,
            true
          ],
          "97": [
            10901,
            10967,
            true
          ],
          "98": [
            10983,
            11046,
            true
          ],
          "99": [
            11062,
            11129,
            true
          ],
          "100": [
            11145,
            11194,
            true
          ],
          "101": [
            11210,
            11264,
            true
          ],
          "102": [
            11280,
            11319,
            true
          ],
          "103": [
            11335,
            11381,
            false
          ],
          "104": [
            11457,
            11510,
            true
          ],
          "105": [
            11526,
            11584,
            true
          ],
          "106": [
            11600,
            11651,
            true
          ],
          "107": [
            11667,
            11716,
            true
          ],
          "108": [
            11732,
            11786,
            false
          ],
          "109": [
            11860,
            11919,
            true
          ],
          "110": [
            11935,
            12001,
            true
          ],
          "111": [
            12017,
            12083,
            true
          ],
          "112": [
            12099,
            12164,
            true
          ],
          "113": [
            12180,
            12237,
            true
          ],
          "114": [
            12253,
            12304,
            true
          ],
          "115": [
            12320,
            12380,
            true
          ],
          "116": [
            12396,
            12460,
            true
          ],
          "117": [
            12476,
            12536,
            true
          ],
          "118": [
            12552,
            12616,
            true
          ],
          "119": [
            12632,
            12697,
            false
          ]
        },
        "Router.initialize": {
          "120": [
            3539,
            3561,
            false
          ],
          "121": [
            3566,
            3580,
            true
          ],
          "122": [
            4581,
            4587,
            true
          ]
        }
      }
    },
    "statements": {
      "13": {},
      "16": {},
      "17": {},
      "6": {
        "Router.<fallback>": {
          "0": [
            14127,
            14170
          ]
        },
        "Router.getRouterImplementation": {
          "1": [
            5355,
            5374
          ],
          "2": [
            5904,
            5931
          ],
          "3": [
            6342,
            6363
          ],
          "4": [
            7125,
            7139
          ],
          "5": [
            8080,
            8101
          ],
          "6": [
            8448,
            8473
          ],
          "7": [
            8814,
            8836
          ],
          "8": [
            9884,
            9903
          ],
          "9": [
            10075,
            10099
          ],
          "10": [
            11406,
            11423
          ],
          "11": [
            11811,
            11826
          ],
          "12": [
            12722,
            12746
          ],
          "13": [
            12904,
            12916
          ]
        },
        "Router.initialize": {
          "14": [
            3531,
            3581
          ],
          "15": [
            3715,
            3733
          ],
          "16": [
            4573,
            4588
          ],
          "17": [
            4599,
            4613
          ],
          "18": [
            4697,
            4723
          ],
          "19": [
            4733,
            4763
          ]
        }
      }
    }
  },
  "dependencies": [
    "Constants",
    "StorageLayoutV1"
  ],
  "deployedBytecode": "6080604052600436106101145760003560e01c80636d7cdbbf116100a0578063a1b4d01111610064578063a1b4d0111461027a578063ba6b7fc21461028f578063c0c53b8b146102a4578063d8e310a4146102c4578063dcc1a738146102d957610114565b80636d7cdbbf1461020657806372d271341461021b57806376e1df481461023057806382463367146102505780638da5cb5b1461026557610114565b806324a3d622116100e757806324a3d6221461019d5780632be75895146101b25780632d255471146101c75780632d2c5565146101dc5780636009b8e6146101f157610114565b80630c4e793514610133578063146278341461015e57806315beeb9314610173578063206109b514610188575b61013161012c6000356001600160e01b0319166102ee565b610f5c565b005b34801561013f57600080fd5b50610148610f80565b60405161015591906114ca565b60405180910390f35b34801561016a57600080fd5b50610148610fa4565b34801561017f57600080fd5b50610148610fc8565b34801561019457600080fd5b50610148610fec565b3480156101a957600080fd5b50610148611010565b3480156101be57600080fd5b5061014861101f565b3480156101d357600080fd5b50610148611043565b3480156101e857600080fd5b50610148611067565b3480156101fd57600080fd5b5061014861108b565b34801561021257600080fd5b506101486110af565b34801561022757600080fd5b506101486110d3565b34801561023c57600080fd5b5061014861024b366004611412565b6102ee565b34801561025c57600080fd5b506101486110f7565b34801561027157600080fd5b50610148611106565b34801561028657600080fd5b5061014861111d565b34801561029b57600080fd5b50610148611141565b3480156102b057600080fd5b506101316102bf3660046113d0565b611165565b3480156102d057600080fd5b50610148611371565b3480156102e557600080fd5b50610148611395565b60006001600160e01b03198216633735195360e11b148061031f57506001600160e01b03198216630276b64b60e01b145b8061033a57506001600160e01b03198216635950d8e960e01b145b8061035557506001600160e01b03198216630541f52760e41b145b1561038157507f0000000000000000000000000000000000000000000000000000000000000000610f57565b6001600160e01b03198216634ae0d10160e11b14806103b057506001600160e01b03198216632286070160e11b145b806103cb57506001600160e01b03198216636ce48f0160e01b145b806103e657506001600160e01b03198216634ca418af60e11b145b8061040157506001600160e01b0319821663c025d1a560e01b145b8061041c57506001600160e01b0319821663803c25fb60e01b145b8061043757506001600160e01b0319821663323e60cb60e11b145b1561046357507f0000000000000000000000000000000000000000000000000000000000000000610f57565b6001600160e01b03198216632890fb6560e01b148061049257506001600160e01b0319821663b8a6945560e01b145b806104ac57506001600160e01b03198216625e665d60e31b145b806104c757506001600160e01b0319821663f667f89760e01b145b806104e257506001600160e01b03198216636689064360e01b145b806104fd57506001600160e01b031982166309c9794560e41b145b1561052957507f0000000000000000000000000000000000000000000000000000000000000000610f57565b6001600160e01b031982166301ffc9a760e01b148061055757506001600160e01b03198216627eeac760e11b145b8061057257506001600160e01b031982166313849cfd60e21b145b8061058d57506001600160e01b03198216630fac8f0960e01b145b806105a857506001600160e01b031982166381a8685560e01b145b806105c357506001600160e01b03198216637921219560e11b145b806105de57506001600160e01b03198216631759616b60e11b145b806105f957506001600160e01b031982166307f4d70160e31b145b8061061457506001600160e01b03198216630e6b43b960e31b145b8061062f57506001600160e01b0319821663a22cb46560e01b145b8061064a57506001600160e01b0319821663e985e9c560e01b145b1561067657507f0000000000000000000000000000000000000000000000000000000000000000610f57565b6001600160e01b03198216636a96e86f60e01b14806106a557506001600160e01b03198216637db31ab960e01b145b806106c057506001600160e01b0319821663a78dbfff60e01b145b806106db57506001600160e01b0319821663184e005360e11b145b806106f657506001600160e01b031982166318ae40d760e01b145b8061071157506001600160e01b03198216634425384960e11b145b8061072c57506001600160e01b031982166305c1d97560e31b145b8061074757506001600160e01b03198216636d6503d360e11b145b8061076257506001600160e01b03198216631a05bce160e01b145b8061077d57506001600160e01b03198216633b2987b360e01b145b8061079857506001600160e01b03198216634cb6b35960e01b145b806107b357506001600160e01b031982166331e14c1960e11b145b806107ce57506001600160e01b0319821663450083df60e11b145b156107fa57507f0000000000000000000000000000000000000000000000000000000000000000610f57565b6001600160e01b03198216632d10e6eb60e01b148061082957506001600160e01b03198216636633af3960e01b145b8061084457506001600160e01b0319821663e3e7cb4f60e01b145b8061085f57506001600160e01b03198216639a600eeb60e01b145b1561088b57507f0000000000000000000000000000000000000000000000000000000000000000610f57565b6001600160e01b03198216631ff7aefd60e21b14806108ba57506001600160e01b0319821663e816469d60e01b145b806108d557506001600160e01b03198216630fb281d960e01b145b806108f057506001600160e01b0319821663fa37e39560e01b145b1561091c57507f0000000000000000000000000000000000000000000000000000000000000000610f57565b6001600160e01b031982166359e23aa360e11b148061094b57506001600160e01b031982166315bd0a3160e21b145b8061096657506001600160e01b03198216636b6ef5cd60e11b145b8061098157506001600160e01b0319821663291afdf360e01b145b8061099c57506001600160e01b0319821663341305ab60e21b145b806109b757506001600160e01b0319821663ee01436b60e01b145b806109d257506001600160e01b031982166302f0233760e21b145b806109ed57506001600160e01b031982166350e4f22360e01b145b80610a0757506001600160e01b0319821662d6442960e11b145b80610a2257506001600160e01b0319821663295e6b7f60e01b145b80610a3d57506001600160e01b0319821663de1eb9a360e01b145b80610a5857506001600160e01b031982166333a8abbb60e11b145b80610a7357506001600160e01b031982166328536d5f60e21b145b80610a8e57506001600160e01b03198216633157228160e01b145b80610aa957506001600160e01b03198216636c346c0960e01b145b15610ad557507f0000000000000000000000000000000000000000000000000000000000000000610f57565b6001600160e01b03198216630343819360e61b1480610b0457506001600160e01b03198216635db6eac760e11b145b15610b3057507f0000000000000000000000000000000000000000000000000000000000000000610f57565b6001600160e01b03198216637abaf27160e11b1480610b5f57506001600160e01b0319821663e31051a160e01b145b80610b7a57506001600160e01b0319821663a11a429360e01b145b80610b9557506001600160e01b03198216630528476560e51b145b80610bb057506001600160e01b0319821663315cb2b960e21b145b80610bcb57506001600160e01b03198216632c90b94d60e21b145b80610be657506001600160e01b031982166309ce3c1960e31b145b80610c0157506001600160e01b031982166354ebde2960e11b145b80610c1c57506001600160e01b031982166398dcbc2360e01b145b80610c3757506001600160e01b031982166333eabd1d60e21b145b80610c5257506001600160e01b0319821663413f2c5f60e01b145b80610c6d57506001600160e01b03198216630d0da86760e21b145b80610c8857506001600160e01b0319821663353abc5d60e01b145b80610ca357506001600160e01b0319821663fa17b5f160e01b145b80610cbe57506001600160e01b0319821663113aa8b160e01b145b80610cd857506001600160e01b031982166247466360e01b145b80610cf357506001600160e01b03198216631b2ce7f360e11b145b80610d0e57506001600160e01b0319821663278f794360e11b145b15610d3a57507f0000000000000000000000000000000000000000000000000000000000000000610f57565b6001600160e01b03198216637d6dbff760e11b1480610d6957506001600160e01b03198216636d7a00eb60e01b145b80610d8457506001600160e01b03198216637f23d4f960e11b145b80610d9f57506001600160e01b0319821663239cec8f60e21b145b80610dba57506001600160e01b031982166312adc47b60e01b145b15610de657507f0000000000000000000000000000000000000000000000000000000000000000610f57565b6001600160e01b03198216636a09a2a360e01b1480610e1557506001600160e01b03198216638355e89560e01b145b80610e3057506001600160e01b0319821663094614df60e01b145b80610e4b57506001600160e01b03198216634beb6d9760e11b145b80610e6657506001600160e01b0319821663c52c43e160e01b145b80610e8157506001600160e01b03198216635953c77b60e01b145b80610e9c57506001600160e01b03198216631f0750c160e31b145b80610eb757506001600160e01b0319821663bac9e8b160e01b145b80610ed257506001600160e01b0319821663aaae47b560e01b145b80610eed57506001600160e01b0319821663416a158760e01b145b80610f0857506001600160e01b03198216631baefc5d60e21b145b15610f3457507f0000000000000000000000000000000000000000000000000000000000000000610f57565b507f00000000000000000000000000000000000000000000000000000000000000005b919050565b3660008037600080366000845af43d6000803e808015610f7b573d6000f35b3d6000fd5b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b6002546001600160a01b031681565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b6001546001600160a01b031681565b60005464010000000090046001600160a01b031681565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161480156111a757506000546301000000900460ff16155b6111b057600080fd5b60008054640100000000600160c01b03191633640100000000021781556040805160a0810182526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081168252602082018490527f00000000000000000000000000000000000000000000000000000000000000001691637abaf27160e11b9190810160028152600860208083019190915260006040928301819052825160a081018452818152918201529081016003815260126020820152600060409182018190529051611296939291908190608590604b90606c906024016114de565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b03199094169390931790925290516112d49190611491565b600060405180830381855af49150503d806000811461130f576040519150601f19603f3d011682016040523d82523d6000602084013e611314565b606091505b505090508061132257600080fd5b50600080546001600160a01b0394851664010000000002640100000000600160c01b0319909116179055600180549284166001600160a01b031993841617905560028054919093169116179055565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b80356001600160a01b0381168114610f5757600080fd5b6000806000606084860312156113e4578283fd5b6113ed846113b9565b92506113fb602085016113b9565b9150611409604085016113b9565b90509250925092565b600060208284031215611423578081fd5b81356001600160e01b03198116811461143a578182fd5b9392505050565b80516001600160a01b0316825260208082015115159083015260408101516006811061146957fe5b604083015260608181015160ff169083015260809081015168ffffffffffffffffff16910152565b60008251815b818110156114b15760208186018101518583015201611497565b818111156114bf5782828501525b509190910192915050565b6001600160a01b0391909116815260200190565b6101e081016114ed828a611441565b6114fa60a0830189611441565b6001600160a01b039690961661014082015293151561016085015260ff9283166101808501529082166101a0840152166101c0909101529291505056fea26469706673582212207f824c00662d660d47153b0150faf459087a6d72d3461a3d52bb1207f95e359f64736f6c63430007060033",
  "deployedSourceMap": "1271:12996:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14127:43;14137:32;14161:7;;-1:-1:-1;;;;;;14161:7:6;14137:23;:32::i;:::-;14127:9;:43::i;:::-;1271:12996;1431:30;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1390:35;;;;;;;;;;;;;:::i;1515:39::-;;;;;;;;;;;;;:::i;1735:40::-;;;;;;;;;;;;;:::i;1035:28:16:-;;;;;;;;;;;;;:::i;1686:43:6:-;;;;;;;;;;;;;:::i;1648:32::-;;;;;;;;;;;;;:::i;1816:33::-;;;;;;;;;;;;;:::i;1603:39::-;;;;;;;;;;;;;:::i;1560:37::-;;;;;;;;;;;;;:::i;1855:42::-;;;;;;;;;;;;;:::i;4969:7964::-;;;;;;;;;;-1:-1:-1;4969:7964:6;;;;;:::i;:::-;;:::i;920:26:16:-;;;;;;;;;;;;;:::i;811:20::-;;;;;;;;;;;;;:::i;1781:29:6:-;;;;;;;;;;;;;:::i;1903:45::-;;;;;;;;;;;;;:::i;3377:1426::-;;;;;;;;;;-1:-1:-1;3377:1426:6;;;;;:::i;:::-;;:::i;1954:37::-;;;;;;;;;;;;;:::i;1467:42::-;;;;;;;;;;;;;:::i;4969:7964::-;5035:7;-1:-1:-1;;;;;;5071:48:6;;-1:-1:-1;;;5071:48:6;;:120;;-1:-1:-1;;;;;;;5135:56:6;;-1:-1:-1;;;5135:56:6;5071:120;:204;;;-1:-1:-1;;;;;;;5207:68:6;;-1:-1:-1;;;5207:68:6;5071:204;:259;;;-1:-1:-1;;;;;;;5291:39:6;;-1:-1:-1;;;5291:39:6;5071:259;5054:7873;;;-1:-1:-1;5362:12:6;5355:19;;5054:7873;-1:-1:-1;;;;;;5408:46:6;;-1:-1:-1;;;5408:46:6;;:115;;-1:-1:-1;;;;;;;5470:53:6;;-1:-1:-1;;;5470:53:6;5408:115;:176;;;-1:-1:-1;;;;;;;5539:45:6;;-1:-1:-1;;;5539:45:6;5408:176;:245;;;-1:-1:-1;;;;;;;5600:53:6;;-1:-1:-1;;;5600:53:6;5408:245;:312;;;-1:-1:-1;;;;;;;5669:51:6;;-1:-1:-1;;;5669:51:6;5408:312;:389;;;-1:-1:-1;;;;;;;5736:61:6;;-1:-1:-1;;;5736:61:6;5408:389;:471;;;-1:-1:-1;;;;;;;5813:66:6;;-1:-1:-1;;;5813:66:6;5408:471;5391:7536;;;-1:-1:-1;5911:20:6;5904:27;;5391:7536;-1:-1:-1;;;;;;5965:52:6;;-1:-1:-1;;;5965:52:6;;:115;;-1:-1:-1;;;;;;;6033:47:6;;-1:-1:-1;;;6033:47:6;5965:115;:169;;;-1:-1:-1;;;;;;;6096:38:6;;-1:-1:-1;;;6096:38:6;5965:169;:228;;;-1:-1:-1;;;;;;;6150:43:6;;-1:-1:-1;;;6150:43:6;5965:228;:286;;;-1:-1:-1;;;;;;;6209:42:6;;-1:-1:-1;;;6209:42:6;5965:286;:352;;;-1:-1:-1;;;;;;;6267:50:6;;-1:-1:-1;;;6267:50:6;5965:352;5948:6979;;;-1:-1:-1;6349:14:6;6342:21;;5948:6979;-1:-1:-1;;;;;;6397:51:6;;-1:-1:-1;;;6397:51:6;;:110;;-1:-1:-1;;;;;;;6464:43:6;;-1:-1:-1;;;6464:43:6;6397:110;:174;;;-1:-1:-1;;;;;;;6523:48:6;;-1:-1:-1;;;6523:48:6;6397:174;:239;;;-1:-1:-1;;;;;;;6587:49:6;;-1:-1:-1;;;6587:49:6;6397:239;:309;;;-1:-1:-1;;;;;;;6652:54:6;;-1:-1:-1;;;6652:54:6;6397:309;:375;;;-1:-1:-1;;;;;;;6722:50:6;;-1:-1:-1;;;6722:50:6;6397:375;:446;;;-1:-1:-1;;;;;;;6788:55:6;;-1:-1:-1;;;6788:55:6;6397:446;:510;;;-1:-1:-1;;;;;;;6859:48:6;;-1:-1:-1;;;6859:48:6;6397:510;:570;;;-1:-1:-1;;;;;;;6923:44:6;;-1:-1:-1;;;6923:44:6;6397:570;:637;;;-1:-1:-1;;;;;;;6983:51:6;;-1:-1:-1;;;6983:51:6;6397:637;:703;;;-1:-1:-1;;;;;;;7050:50:6;;-1:-1:-1;;;7050:50:6;6397:703;6380:6547;;;-1:-1:-1;7132:7:6;7125:14;;6380:6547;-1:-1:-1;;;;;;7173:47:6;;-1:-1:-1;;;7173:47:6;;:116;;-1:-1:-1;;;;;;;7236:53:6;;-1:-1:-1;;;7236:53:6;7173:116;:177;;;-1:-1:-1;;;;;;;7305:45:6;;-1:-1:-1;;;7305:45:6;7173:177;:244;;;-1:-1:-1;;;;;;;7366:51:6;;-1:-1:-1;;;7366:51:6;7173:244;:304;;;-1:-1:-1;;;;;;;7433:44:6;;-1:-1:-1;;;7433:44:6;7173:304;:368;;;-1:-1:-1;;;;;;;7493:48:6;;-1:-1:-1;;;7493:48:6;7173:368;:438;;;-1:-1:-1;;;;;;;7557:54:6;;-1:-1:-1;;;7557:54:6;7173:438;:505;;;-1:-1:-1;;;;;;;7627:51:6;;-1:-1:-1;;;7627:51:6;7173:505;:585;;;-1:-1:-1;;;;;;;7694:64:6;;-1:-1:-1;;;7694:64:6;7173:585;:670;;;-1:-1:-1;;;;;;;7774:69:6;;-1:-1:-1;;;7774:69:6;7173:670;:752;;;-1:-1:-1;;;;;;;7859:66:6;;-1:-1:-1;;;7859:66:6;7173:752;:818;;;-1:-1:-1;;;;;;;7941:50:6;;-1:-1:-1;;;7941:50:6;7173:818;:882;;;-1:-1:-1;;;;;;;8007:48:6;;-1:-1:-1;;;8007:48:6;7173:882;7156:5771;;;-1:-1:-1;8087:14:6;8080:21;;7156:5771;-1:-1:-1;;;;;;8135:52:6;;-1:-1:-1;;;8135:52:6;;:125;;-1:-1:-1;;;;;;;8203:57:6;;-1:-1:-1;;;8203:57:6;8135:125;:204;;;-1:-1:-1;;;;;;;8276:63:6;;-1:-1:-1;;;8276:63:6;8135:204;:288;;;-1:-1:-1;;;;;;;8355:68:6;;-1:-1:-1;;;8355:68:6;8135:288;8118:4809;;;-1:-1:-1;8455:18:6;8448:25;;8118:4809;-1:-1:-1;;;;;;8507:49:6;;-1:-1:-1;;;8507:49:6;;:122;;-1:-1:-1;;;;;;;8572:57:6;;-1:-1:-1;;;8572:57:6;8507:122;:198;;;-1:-1:-1;;;;;;;8645:60:6;;-1:-1:-1;;;8645:60:6;8507:198;:282;;;-1:-1:-1;;;;;;;8721:68:6;;-1:-1:-1;;;8721:68:6;8507:282;8490:4437;;;-1:-1:-1;8821:15:6;8814:22;;8490:4437;-1:-1:-1;;;;;;8870:40:6;;-1:-1:-1;;;8870:40:6;;:104;;-1:-1:-1;;;;;;;8926:48:6;;-1:-1:-1;;;8926:48:6;8870:104;:172;;;-1:-1:-1;;;;;;;8990:52:6;;-1:-1:-1;;;8990:52:6;8870:172;:246;;;-1:-1:-1;;;;;;;9058:58:6;;-1:-1:-1;;;9058:58:6;8870:246;:323;;;-1:-1:-1;;;;;;;9132:61:6;;-1:-1:-1;;;9132:61:6;8870:323;:394;;;-1:-1:-1;;;;;;;9209:55:6;;-1:-1:-1;;;9209:55:6;8870:394;:469;;;-1:-1:-1;;;;;;;9280:59:6;;-1:-1:-1;;;9280:59:6;8870:469;:545;;;-1:-1:-1;;;;;;;9355:60:6;;-1:-1:-1;;;9355:60:6;8870:545;:623;;;-1:-1:-1;;;;;;;9431:62:6;;-1:-1:-1;;;9431:62:6;8870:623;:679;;;-1:-1:-1;;;;;;;9509:40:6;;-1:-1:-1;;;9509:40:6;8870:679;:738;;;-1:-1:-1;;;;;;;9565:43:6;;-1:-1:-1;;;9565:43:6;8870:738;:800;;;-1:-1:-1;;;;;;;9624:46:6;;-1:-1:-1;;;9624:46:6;8870:800;:863;;;-1:-1:-1;;;;;;;9686:47:6;;-1:-1:-1;;;9686:47:6;8870:863;:921;;;-1:-1:-1;;;;;;;9749:42:6;;-1:-1:-1;;;9749:42:6;8870:921;:989;;;-1:-1:-1;;;;;;;9807:52:6;;-1:-1:-1;;;9807:52:6;8870:989;8853:4074;;;-1:-1:-1;9891:12:6;9884:19;;8853:4074;-1:-1:-1;;;;;;9937:47:6;;-1:-1:-1;;;9937:47:6;;:113;;-1:-1:-1;;;;;;;10000:50:6;;-1:-1:-1;;;10000:50:6;9937:113;9920:3007;;;-1:-1:-1;10082:17:6;10075:24;;9920:3007;-1:-1:-1;;;;;;10133:47:6;;-1:-1:-1;;;10133:47:6;;:113;;-1:-1:-1;;;;;;;10196:50:6;;-1:-1:-1;;;10196:50:6;10133:113;:179;;;-1:-1:-1;;;;;;;10262:50:6;;-1:-1:-1;;;10262:50:6;10133:179;:245;;;-1:-1:-1;;;;;;;10328:50:6;;-1:-1:-1;;;10328:50:6;10133:245;:309;;;-1:-1:-1;;;;;;;10394:48:6;;-1:-1:-1;;;10394:48:6;10133:309;:377;;;-1:-1:-1;;;;;;;10458:52:6;;-1:-1:-1;;;10458:52:6;10133:377;:442;;;-1:-1:-1;;;;;;;10526:49:6;;-1:-1:-1;;;10526:49:6;10133:442;:520;;;-1:-1:-1;;;;;;;10591:62:6;;-1:-1:-1;;;10591:62:6;10133:520;:597;;;-1:-1:-1;;;;;;;10669:61:6;;-1:-1:-1;;;10669:61:6;10133:597;:671;;;-1:-1:-1;;;;;;;10746:58:6;;-1:-1:-1;;;10746:58:6;10133:671;:752;;;-1:-1:-1;;;;;;;10820:65:6;;-1:-1:-1;;;10820:65:6;10133:752;:834;;;-1:-1:-1;;;;;;;10901:66:6;;-1:-1:-1;;;10901:66:6;10133:834;:913;;;-1:-1:-1;;;;;;;10983:63:6;;-1:-1:-1;;;10983:63:6;10133:913;:996;;;-1:-1:-1;;;;;;;11062:67:6;;-1:-1:-1;;;11062:67:6;10133:996;:1061;;;-1:-1:-1;;;;;;;11145:49:6;;-1:-1:-1;;;11145:49:6;10133:1061;:1131;;;-1:-1:-1;;;;;;;11210:54:6;;-1:-1:-1;;;11210:54:6;10133:1131;:1186;;;-1:-1:-1;;;;;;;11280:39:6;;-1:-1:-1;;;11280:39:6;10133:1186;:1248;;;-1:-1:-1;;;;;;;11335:46:6;;-1:-1:-1;;;11335:46:6;10133:1248;10116:2811;;;-1:-1:-1;11413:10:6;11406:17;;10116:2811;-1:-1:-1;;;;;;11457:53:6;;-1:-1:-1;;;11457:53:6;;:127;;-1:-1:-1;;;;;;;11526:58:6;;-1:-1:-1;;;11526:58:6;11457:127;:194;;;-1:-1:-1;;;;;;;11600:51:6;;-1:-1:-1;;;11600:51:6;11457:194;:259;;;-1:-1:-1;;;;;;;11667:49:6;;-1:-1:-1;;;11667:49:6;11457:259;:329;;;-1:-1:-1;;;;;;;11732:54:6;;-1:-1:-1;;;11732:54:6;11457:329;11440:1487;;;-1:-1:-1;11818:8:6;11811:15;;11440:1487;-1:-1:-1;;;;;;11860:59:6;;-1:-1:-1;;;11860:59:6;;:141;;-1:-1:-1;;;;;;;11935:66:6;;-1:-1:-1;;;11935:66:6;11860:141;:223;;;-1:-1:-1;;;;;;;12017:66:6;;-1:-1:-1;;;12017:66:6;11860:223;:304;;;-1:-1:-1;;;;;;;12099:65:6;;-1:-1:-1;;;12099:65:6;11860:304;:377;;;-1:-1:-1;;;;;;;12180:57:6;;-1:-1:-1;;;12180:57:6;11860:377;:444;;;-1:-1:-1;;;;;;;12253:51:6;;-1:-1:-1;;;12253:51:6;11860:444;:520;;;-1:-1:-1;;;;;;;12320:60:6;;-1:-1:-1;;;12320:60:6;11860:520;:600;;;-1:-1:-1;;;;;;;12396:64:6;;-1:-1:-1;;;12396:64:6;11860:600;:676;;;-1:-1:-1;;;;;;;12476:60:6;;-1:-1:-1;;;12476:60:6;11860:676;:756;;;-1:-1:-1;;;;;;;12552:64:6;;-1:-1:-1;;;12552:64:6;11860:756;:837;;;-1:-1:-1;;;;;;;12632:65:6;;-1:-1:-1;;;12632:65:6;11860:837;11843:1084;;;-1:-1:-1;12729:17:6;12722:24;;11843:1084;-1:-1:-1;12911:5:6;11843:1084;4969:7964;;;:::o;13113:970::-;13498:14;13495:1;13492;13479:34;13712:1;13709;13693:14;13690:1;13674:14;13667:5;13654:60;13788:16;13785:1;13782;13767:38;13826:6;13901:74;;;;14032:16;14029:1;14022:27;13901:74;13940:16;13937:1;13930:27;1431:30;;;:::o;1390:35::-;;;:::o;1515:39::-;;;:::o;1735:40::-;;;:::o;1035:28:16:-;;;-1:-1:-1;;;;;1035:28:16;;:::o;1686:43:6:-;;;:::o;1648:32::-;;;:::o;1816:33::-;;;:::o;1603:39::-;;;:::o;1560:37::-;;;:::o;1855:42::-;;;:::o;920:26:16:-;;;-1:-1:-1;;;;;920:26:16;;:::o;811:20::-;;;;;;-1:-1:-1;;;;;811:20:16;;:::o;1781:29:6:-;;;:::o;1903:45::-;;;:::o;3377:1426::-;3539:10;-1:-1:-1;;;;;3553:8:6;3539:22;;:41;;;;-1:-1:-1;3566:14:6;;;;;;;3565:15;3539:41;3531:50;;;;;;3715:5;:18;;-1:-1:-1;;;;;;3715:18:6;3723:10;3715:18;;;;;4091:75;;;;;;;;-1:-1:-1;;;;;4104:4:6;4091:75;;;;;;;;;;3943:10;3935:32;;-1:-1:-1;;;4029:40:6;4091:75;;;4117:14;4091:75;;218:1:13;4091:75:6;;;;;;;;-1:-1:-1;4091:75:6;;;;;;;4238:81;;;;;;;;;;;;;;;;;4270:15;4238:81;;660:2:13;4238:81:6;;;;-1:-1:-1;4238:81:6;;;;;;;3985:564;;;;;;-1:-1:-1;;;4400:3:6;;4460:2;;4500:3;;3985:564;;;:::i;:::-;;;;-1:-1:-1;;3985:564:6;;;;;;;;;;;;;;-1:-1:-1;;;;;3985:564:6;-1:-1:-1;;;;;;3985:564:6;;;;;;;;;;3935:628;;;;3985:564;3935:628;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3905:658;;;4581:6;4573:15;;;;;;-1:-1:-1;4599:5:6;:14;;-1:-1:-1;;;;;4599:14:6;;;;;-1:-1:-1;;;;;;4599:14:6;;;;;;-1:-1:-1;4697:26:6;;;;;-1:-1:-1;;;;;;4697:26:6;;;;;;4733:13;:30;;;;;;;;;;;3377:1426::o;1954:37::-;;;:::o;1467:42::-;;;:::o;14:175:69:-;84:20;;-1:-1:-1;;;;;133:31:69;;123:42;;113:2;;179:1;176;169:12;194:350;;;;340:2;328:9;319:7;315:23;311:32;308:2;;;361:6;353;346:22;308:2;389:31;410:9;389:31;:::i;:::-;379:41;;439:40;475:2;464:9;460:18;439:40;:::i;:::-;429:50;;498:40;534:2;523:9;519:18;498:40;:::i;:::-;488:50;;298:246;;;;;:::o;549:306::-;;660:2;648:9;639:7;635:23;631:32;628:2;;;681:6;673;666:22;628:2;712:23;;-1:-1:-1;;;;;;764:32:69;;754:43;;744:2;;816:6;808;801:22;744:2;844:5;618:237;-1:-1:-1;;;618:237:69:o;860:498::-;945:12;;-1:-1:-1;;;;;941:38:69;929:51;;1043:4;1032:16;;;1026:23;1019:31;1012:39;996:14;;;989:63;1098:4;1087:16;;1081:23;1140:1;1123:19;;1113:2;;1146:9;1113:2;1182:4;1173:14;;1166:36;1255:4;1244:16;;;1238:23;1263:4;1234:34;1218:14;;;1211:58;1322:4;1311:16;;;1305:23;1330:20;1301:50;1285:14;;1278:74;919:439::o;1363:430::-;;1530:6;1524:13;1555:3;1567:129;1581:6;1578:1;1575:13;1567:129;;;1679:4;1663:14;;;1659:25;;1653:32;1640:11;;;1633:53;1596:12;1567:129;;;1714:6;1711:1;1708:13;1705:2;;;1749:3;1740:6;1735:3;1731:16;1724:29;1705:2;-1:-1:-1;1771:16:69;;;;;1500:293;-1:-1:-1;;1500:293:69:o;1798:203::-;-1:-1:-1;;;;;1962:32:69;;;;1944:51;;1932:2;1917:18;;1899:102::o;2006:896::-;2465:3;2450:19;;2478:52;2454:9;2512:6;2478:52;:::i;:::-;2539:62;2596:3;2585:9;2581:19;2573:6;2539:62;:::i;:::-;-1:-1:-1;;;;;2638:32:69;;;;2632:3;2617:19;;2610:61;2715:14;;2708:22;2702:3;2687:19;;2680:51;2780:4;2768:17;;;2762:3;2747:19;;2740:46;2823:17;;;2817:3;2802:19;;2795:46;2878:17;2872:3;2857:19;;;2850:46;2432:470;;-1:-1:-1;;2432:470:69:o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "getRouterImplementation(bytes4)": {
        "notice": "Returns the implementation contract for the method signature",
        "params": {
          "sig": "method signature to call"
        },
        "returns": {
          "_0": "implementation address"
        }
      }
    },
    "notice": "Sits behind an upgradeable proxy and routes methods to an appropriate implementation contract. All storage will sit inside the upgradeable proxy and this router will authorize the call and re-route the calls to implementing contracts. This pattern adds an additional hop between the proxy and the ultimate implementation contract, however, it also allows for atomic upgrades of the entire system. Individual implementation contracts will be deployed and then a new Router with the new hardcoded addresses will then be deployed and upgraded into place.",
    "version": 1
  },
  "offset": [
    1271,
    14267
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x114 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6D7CDBBF GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xA1B4D011 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xA1B4D011 EQ PUSH2 0x27A JUMPI DUP1 PUSH4 0xBA6B7FC2 EQ PUSH2 0x28F JUMPI DUP1 PUSH4 0xC0C53B8B EQ PUSH2 0x2A4 JUMPI DUP1 PUSH4 0xD8E310A4 EQ PUSH2 0x2C4 JUMPI DUP1 PUSH4 0xDCC1A738 EQ PUSH2 0x2D9 JUMPI PUSH2 0x114 JUMP JUMPDEST DUP1 PUSH4 0x6D7CDBBF EQ PUSH2 0x206 JUMPI DUP1 PUSH4 0x72D27134 EQ PUSH2 0x21B JUMPI DUP1 PUSH4 0x76E1DF48 EQ PUSH2 0x230 JUMPI DUP1 PUSH4 0x82463367 EQ PUSH2 0x250 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x265 JUMPI PUSH2 0x114 JUMP JUMPDEST DUP1 PUSH4 0x24A3D622 GT PUSH2 0xE7 JUMPI DUP1 PUSH4 0x24A3D622 EQ PUSH2 0x19D JUMPI DUP1 PUSH4 0x2BE75895 EQ PUSH2 0x1B2 JUMPI DUP1 PUSH4 0x2D255471 EQ PUSH2 0x1C7 JUMPI DUP1 PUSH4 0x2D2C5565 EQ PUSH2 0x1DC JUMPI DUP1 PUSH4 0x6009B8E6 EQ PUSH2 0x1F1 JUMPI PUSH2 0x114 JUMP JUMPDEST DUP1 PUSH4 0xC4E7935 EQ PUSH2 0x133 JUMPI DUP1 PUSH4 0x14627834 EQ PUSH2 0x15E JUMPI DUP1 PUSH4 0x15BEEB93 EQ PUSH2 0x173 JUMPI DUP1 PUSH4 0x206109B5 EQ PUSH2 0x188 JUMPI JUMPDEST PUSH2 0x131 PUSH2 0x12C PUSH1 0x0 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH2 0x2EE JUMP JUMPDEST PUSH2 0xF5C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x13F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x148 PUSH2 0xF80 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x155 SWAP2 SWAP1 PUSH2 0x14CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x16A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x148 PUSH2 0xFA4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x17F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x148 PUSH2 0xFC8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x194 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x148 PUSH2 0xFEC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x148 PUSH2 0x1010 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x148 PUSH2 0x101F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x148 PUSH2 0x1043 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x148 PUSH2 0x1067 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x148 PUSH2 0x108B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x212 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x148 PUSH2 0x10AF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x227 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x148 PUSH2 0x10D3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x23C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x148 PUSH2 0x24B CALLDATASIZE PUSH1 0x4 PUSH2 0x1412 JUMP JUMPDEST PUSH2 0x2EE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x25C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x148 PUSH2 0x10F7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x271 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x148 PUSH2 0x1106 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x286 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x148 PUSH2 0x111D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x29B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x148 PUSH2 0x1141 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x131 PUSH2 0x2BF CALLDATASIZE PUSH1 0x4 PUSH2 0x13D0 JUMP JUMPDEST PUSH2 0x1165 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x148 PUSH2 0x1371 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x148 PUSH2 0x1395 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x37351953 PUSH1 0xE1 SHL EQ DUP1 PUSH2 0x31F JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x276B64B PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x33A JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5950D8E9 PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x355 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x541F527 PUSH1 0xE4 SHL EQ JUMPDEST ISZERO PUSH2 0x381 JUMPI POP PUSH32 0x0 PUSH2 0xF57 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x4AE0D101 PUSH1 0xE1 SHL EQ DUP1 PUSH2 0x3B0 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x22860701 PUSH1 0xE1 SHL EQ JUMPDEST DUP1 PUSH2 0x3CB JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x6CE48F01 PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x3E6 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x4CA418AF PUSH1 0xE1 SHL EQ JUMPDEST DUP1 PUSH2 0x401 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0xC025D1A5 PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x41C JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x803C25FB PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x437 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x323E60CB PUSH1 0xE1 SHL EQ JUMPDEST ISZERO PUSH2 0x463 JUMPI POP PUSH32 0x0 PUSH2 0xF57 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x2890FB65 PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x492 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0xB8A69455 PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x4AC JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH3 0x5E665D PUSH1 0xE3 SHL EQ JUMPDEST DUP1 PUSH2 0x4C7 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0xF667F897 PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x4E2 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x66890643 PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x4FD JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x9C97945 PUSH1 0xE4 SHL EQ JUMPDEST ISZERO PUSH2 0x529 JUMPI POP PUSH32 0x0 PUSH2 0xF57 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x557 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH3 0x7EEAC7 PUSH1 0xE1 SHL EQ JUMPDEST DUP1 PUSH2 0x572 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x13849CFD PUSH1 0xE2 SHL EQ JUMPDEST DUP1 PUSH2 0x58D JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0xFAC8F09 PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x5A8 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x81A86855 PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x5C3 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x79212195 PUSH1 0xE1 SHL EQ JUMPDEST DUP1 PUSH2 0x5DE JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x1759616B PUSH1 0xE1 SHL EQ JUMPDEST DUP1 PUSH2 0x5F9 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x7F4D701 PUSH1 0xE3 SHL EQ JUMPDEST DUP1 PUSH2 0x614 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0xE6B43B9 PUSH1 0xE3 SHL EQ JUMPDEST DUP1 PUSH2 0x62F JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0xA22CB465 PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x64A JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0xE985E9C5 PUSH1 0xE0 SHL EQ JUMPDEST ISZERO PUSH2 0x676 JUMPI POP PUSH32 0x0 PUSH2 0xF57 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x6A96E86F PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x6A5 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x7DB31AB9 PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x6C0 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0xA78DBFFF PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x6DB JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x184E0053 PUSH1 0xE1 SHL EQ JUMPDEST DUP1 PUSH2 0x6F6 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x18AE40D7 PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x711 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x44253849 PUSH1 0xE1 SHL EQ JUMPDEST DUP1 PUSH2 0x72C JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5C1D975 PUSH1 0xE3 SHL EQ JUMPDEST DUP1 PUSH2 0x747 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x6D6503D3 PUSH1 0xE1 SHL EQ JUMPDEST DUP1 PUSH2 0x762 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x1A05BCE1 PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x77D JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x3B2987B3 PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x798 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x4CB6B359 PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x7B3 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x31E14C19 PUSH1 0xE1 SHL EQ JUMPDEST DUP1 PUSH2 0x7CE JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x450083DF PUSH1 0xE1 SHL EQ JUMPDEST ISZERO PUSH2 0x7FA JUMPI POP PUSH32 0x0 PUSH2 0xF57 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x2D10E6EB PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x829 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x6633AF39 PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x844 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0xE3E7CB4F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x85F JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x9A600EEB PUSH1 0xE0 SHL EQ JUMPDEST ISZERO PUSH2 0x88B JUMPI POP PUSH32 0x0 PUSH2 0xF57 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x1FF7AEFD PUSH1 0xE2 SHL EQ DUP1 PUSH2 0x8BA JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0xE816469D PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x8D5 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0xFB281D9 PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x8F0 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0xFA37E395 PUSH1 0xE0 SHL EQ JUMPDEST ISZERO PUSH2 0x91C JUMPI POP PUSH32 0x0 PUSH2 0xF57 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x59E23AA3 PUSH1 0xE1 SHL EQ DUP1 PUSH2 0x94B JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x15BD0A31 PUSH1 0xE2 SHL EQ JUMPDEST DUP1 PUSH2 0x966 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x6B6EF5CD PUSH1 0xE1 SHL EQ JUMPDEST DUP1 PUSH2 0x981 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x291AFDF3 PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x99C JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x341305AB PUSH1 0xE2 SHL EQ JUMPDEST DUP1 PUSH2 0x9B7 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0xEE01436B PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x9D2 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x2F02337 PUSH1 0xE2 SHL EQ JUMPDEST DUP1 PUSH2 0x9ED JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x50E4F223 PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0xA07 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH3 0xD64429 PUSH1 0xE1 SHL EQ JUMPDEST DUP1 PUSH2 0xA22 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x295E6B7F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0xA3D JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0xDE1EB9A3 PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0xA58 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x33A8ABBB PUSH1 0xE1 SHL EQ JUMPDEST DUP1 PUSH2 0xA73 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x28536D5F PUSH1 0xE2 SHL EQ JUMPDEST DUP1 PUSH2 0xA8E JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x31572281 PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0xAA9 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x6C346C09 PUSH1 0xE0 SHL EQ JUMPDEST ISZERO PUSH2 0xAD5 JUMPI POP PUSH32 0x0 PUSH2 0xF57 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x3438193 PUSH1 0xE6 SHL EQ DUP1 PUSH2 0xB04 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5DB6EAC7 PUSH1 0xE1 SHL EQ JUMPDEST ISZERO PUSH2 0xB30 JUMPI POP PUSH32 0x0 PUSH2 0xF57 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x7ABAF271 PUSH1 0xE1 SHL EQ DUP1 PUSH2 0xB5F JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0xE31051A1 PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0xB7A JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0xA11A4293 PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0xB95 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5284765 PUSH1 0xE5 SHL EQ JUMPDEST DUP1 PUSH2 0xBB0 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x315CB2B9 PUSH1 0xE2 SHL EQ JUMPDEST DUP1 PUSH2 0xBCB JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x2C90B94D PUSH1 0xE2 SHL EQ JUMPDEST DUP1 PUSH2 0xBE6 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x9CE3C19 PUSH1 0xE3 SHL EQ JUMPDEST DUP1 PUSH2 0xC01 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x54EBDE29 PUSH1 0xE1 SHL EQ JUMPDEST DUP1 PUSH2 0xC1C JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x98DCBC23 PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0xC37 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x33EABD1D PUSH1 0xE2 SHL EQ JUMPDEST DUP1 PUSH2 0xC52 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x413F2C5F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0xC6D JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0xD0DA867 PUSH1 0xE2 SHL EQ JUMPDEST DUP1 PUSH2 0xC88 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x353ABC5D PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0xCA3 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0xFA17B5F1 PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0xCBE JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x113AA8B1 PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0xCD8 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH3 0x474663 PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0xCF3 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x1B2CE7F3 PUSH1 0xE1 SHL EQ JUMPDEST DUP1 PUSH2 0xD0E JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x278F7943 PUSH1 0xE1 SHL EQ JUMPDEST ISZERO PUSH2 0xD3A JUMPI POP PUSH32 0x0 PUSH2 0xF57 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x7D6DBFF7 PUSH1 0xE1 SHL EQ DUP1 PUSH2 0xD69 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x6D7A00EB PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0xD84 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x7F23D4F9 PUSH1 0xE1 SHL EQ JUMPDEST DUP1 PUSH2 0xD9F JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x239CEC8F PUSH1 0xE2 SHL EQ JUMPDEST DUP1 PUSH2 0xDBA JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x12ADC47B PUSH1 0xE0 SHL EQ JUMPDEST ISZERO PUSH2 0xDE6 JUMPI POP PUSH32 0x0 PUSH2 0xF57 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x6A09A2A3 PUSH1 0xE0 SHL EQ DUP1 PUSH2 0xE15 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x8355E895 PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0xE30 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x94614DF PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0xE4B JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x4BEB6D97 PUSH1 0xE1 SHL EQ JUMPDEST DUP1 PUSH2 0xE66 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0xC52C43E1 PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0xE81 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5953C77B PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0xE9C JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x1F0750C1 PUSH1 0xE3 SHL EQ JUMPDEST DUP1 PUSH2 0xEB7 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0xBAC9E8B1 PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0xED2 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0xAAAE47B5 PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0xEED JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x416A1587 PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0xF08 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x1BAEFC5D PUSH1 0xE2 SHL EQ JUMPDEST ISZERO PUSH2 0xF34 JUMPI POP PUSH32 0x0 PUSH2 0xF57 JUMP JUMPDEST POP PUSH32 0x0 JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST CALLDATASIZE PUSH1 0x0 DUP1 CALLDATACOPY PUSH1 0x0 DUP1 CALLDATASIZE PUSH1 0x0 DUP5 GAS DELEGATECALL RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY DUP1 DUP1 ISZERO PUSH2 0xF7B JUMPI RETURNDATASIZE PUSH1 0x0 RETURN JUMPDEST RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH5 0x100000000 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ DUP1 ISZERO PUSH2 0x11A7 JUMPI POP PUSH1 0x0 SLOAD PUSH4 0x1000000 SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x11B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH5 0x100000000 PUSH1 0x1 PUSH1 0xC0 SHL SUB NOT AND CALLER PUSH5 0x100000000 MUL OR DUP2 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP5 SWAP1 MSTORE PUSH32 0x0 AND SWAP2 PUSH4 0x7ABAF271 PUSH1 0xE1 SHL SWAP2 SWAP1 DUP2 ADD PUSH1 0x2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x0 PUSH1 0x40 SWAP3 DUP4 ADD DUP2 SWAP1 MSTORE DUP3 MLOAD PUSH1 0xA0 DUP2 ADD DUP5 MSTORE DUP2 DUP2 MSTORE SWAP2 DUP3 ADD MSTORE SWAP1 DUP2 ADD PUSH1 0x3 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x40 SWAP2 DUP3 ADD DUP2 SWAP1 MSTORE SWAP1 MLOAD PUSH2 0x1296 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 SWAP1 PUSH1 0x85 SWAP1 PUSH1 0x4B SWAP1 PUSH1 0x6C SWAP1 PUSH1 0x24 ADD PUSH2 0x14DE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 MSTORE SWAP1 MLOAD PUSH2 0x12D4 SWAP2 SWAP1 PUSH2 0x1491 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x130F JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1314 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x1322 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND PUSH5 0x100000000 MUL PUSH5 0x100000000 PUSH1 0x1 PUSH1 0xC0 SHL SUB NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE PUSH1 0x1 DUP1 SLOAD SWAP3 DUP5 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP4 DUP5 AND OR SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD SWAP2 SWAP1 SWAP4 AND SWAP2 AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xF57 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x13E4 JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH2 0x13ED DUP5 PUSH2 0x13B9 JUMP JUMPDEST SWAP3 POP PUSH2 0x13FB PUSH1 0x20 DUP6 ADD PUSH2 0x13B9 JUMP JUMPDEST SWAP2 POP PUSH2 0x1409 PUSH1 0x40 DUP6 ADD PUSH2 0x13B9 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1423 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x143A JUMPI DUP2 DUP3 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP3 ADD MLOAD ISZERO ISZERO SWAP1 DUP4 ADD MSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x6 DUP2 LT PUSH2 0x1469 JUMPI INVALID JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP2 DUP2 ADD MLOAD PUSH1 0xFF AND SWAP1 DUP4 ADD MSTORE PUSH1 0x80 SWAP1 DUP2 ADD MLOAD PUSH9 0xFFFFFFFFFFFFFFFFFF AND SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD DUP2 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x14B1 JUMPI PUSH1 0x20 DUP2 DUP7 ADD DUP2 ADD MLOAD DUP6 DUP4 ADD MSTORE ADD PUSH2 0x1497 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x14BF JUMPI DUP3 DUP3 DUP6 ADD MSTORE JUMPDEST POP SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH2 0x1E0 DUP2 ADD PUSH2 0x14ED DUP3 DUP11 PUSH2 0x1441 JUMP JUMPDEST PUSH2 0x14FA PUSH1 0xA0 DUP4 ADD DUP10 PUSH2 0x1441 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP7 SWAP1 SWAP7 AND PUSH2 0x140 DUP3 ADD MSTORE SWAP4 ISZERO ISZERO PUSH2 0x160 DUP6 ADD MSTORE PUSH1 0xFF SWAP3 DUP4 AND PUSH2 0x180 DUP6 ADD MSTORE SWAP1 DUP3 AND PUSH2 0x1A0 DUP5 ADD MSTORE AND PUSH2 0x1C0 SWAP1 SWAP2 ADD MSTORE SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH32 0x824C00662D660D47153B0150FAF459087A6D72D3461A3D52BB1207F95E359F64 PUSH20 0x6F6C634300070600330000000000000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        1271,
        14267
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        1271,
        14267
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        1271,
        14267
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5": {
      "fn": null,
      "offset": [
        1271,
        14267
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        1271,
        14267
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "8": {
      "fn": null,
      "offset": [
        1271,
        14267
      ],
      "op": "LT",
      "path": "6"
    },
    "9": {
      "fn": null,
      "offset": [
        1271,
        14267
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x114"
    },
    "12": {
      "fn": null,
      "offset": [
        1271,
        14267
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "13": {
      "fn": null,
      "offset": [
        1271,
        14267
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        1271,
        14267
      ],
      "op": "CALLDATALOAD",
      "path": "6"
    },
    "16": {
      "fn": null,
      "offset": [
        1271,
        14267
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        1271,
        14267
      ],
      "op": "SHR",
      "path": "6"
    },
    "19": {
      "fn": null,
      "offset": [
        1271,
        14267
      ],
      "op": "DUP1",
      "path": "6"
    },
    "20": {
      "fn": null,
      "offset": [
        1271,
        14267
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x6D7CDBBF"
    },
    "25": {
      "fn": null,
      "offset": [
        1271,
        14267
      ],
      "op": "GT",
      "path": "6"
    },
    "26": {
      "fn": null,
      "offset": [
        1271,
        14267
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xA0"
    },
    "29": {
      "fn": null,
      "offset": [
        1271,
        14267
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "30": {
      "fn": null,
      "offset": [
        1271,
        14267
      ],
      "op": "DUP1",
      "path": "6"
    },
    "31": {
      "fn": null,
      "offset": [
        1271,
        14267
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xA1B4D011"
    },
    "36": {
      "fn": null,
      "offset": [
        1271,
        14267
      ],
      "op": "GT",
      "path": "6"
    },
    "37": {
      "fn": null,
      "offset": [
        1271,
        14267
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x64"
    },
    "40": {
      "fn": null,
      "offset": [
        1271,
        14267
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "41": {
      "fn": null,
      "offset": [
        1271,
        14267
      ],
      "op": "DUP1",
      "path": "6"
    },
    "42": {
      "fn": null,
      "offset": [
        1271,
        14267
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xA1B4D011"
    },
    "47": {
      "fn": null,
      "offset": [
        1271,
        14267
      ],
      "op": "EQ",
      "path": "6"
    },
    "48": {
      "fn": null,
      "offset": [
        1271,
        14267
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x27A"
    },
    "51": {
      "fn": null,
      "offset": [
        1271,
        14267
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "52": {
      "fn": null,
      "offset": [
        1271,
        14267
      ],
      "op": "DUP1",
      "path": "6"
    },
    "53": {
      "fn": null,
      "offset": [
        1271,
        14267
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xBA6B7FC2"
    },
    "58": {
      "fn": null,
      "offset": [
        1271,
        14267
      ],
      "op": "EQ",
      "path": "6"
    },
    "59": {
      "fn": null,
      "offset": [
        1271,
        14267
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x28F"
    },
    "62": {
      "fn": null,
      "offset": [
        1271,
        14267
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "63": {
      "fn": null,
      "offset": [
        1271,
        14267
      ],
      "op": "DUP1",
      "path": "6"
    },
    "64": {
      "fn": null,
      "offset": [
        1271,
        14267
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xC0C53B8B"
    },
    "69": {
      "fn": null,
      "offset": [
        1271,
        14267
      ],
      "op": "EQ",
      "path": "6"
    },
    "70": {
      "fn": null,
      "offset": [
        1271,
        14267
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2A4"
    },
    "73": {
      "fn": null,
      "offset": [
        1271,
        14267
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "74": {
      "fn": null,
      "offset": [
        1271,
        14267
      ],
      "op": "DUP1",
      "path": "6"
    },
    "75": {
      "fn": null,
      "offset": [
        1271,
        14267
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xD8E310A4"
    },
    "80": {
      "fn": null,
      "offset": [
        1271,
        14267
      ],
      "op": "EQ",
      "path": "6"
    },
    "81": {
      "fn": null,
      "offset": [
        1271,
        14267
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2C4"
    },
    "84": {
      "fn": null,
      "offset": [
        1271,
        14267
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "85": {
      "fn": null,
      "offset": [
        1271,
        14267
      ],
      "op": "DUP1",
      "path": "6"
    },
    "86": {
      "fn": null,
      "offset": [
        1271,
        14267
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xDCC1A738"
    },
    "91": {
      "fn": null,
      "offset": [
        1271,
        14267
      ],
      "op": "EQ",
      "path": "6"
    },
    "92": {
      "fn": null,
      "offset": [
        1271,
        14267
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2D9"
    },
    "95": {
      "fn": null,
      "offset": [
        1271,
        14267
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "96": {
      "fn": null,
      "offset": [
        1271,
        14267
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x114"
    },
    "99": {
      "fn": null,
      "offset": [
        1271,
        14267
      ],
      "op": "JUMP",
      "path": "6"
    },
    "100": {
      "fn": null,
      "offset": [
        1271,
        14267
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "101": {
      "fn": null,
      "offset": [
        1271,
        14267
      ],
      "op": "DUP1",
      "path": "6"
    },
    "102": {
      "fn": null,
      "offset": [
        1271,
        14267
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x6D7CDBBF"
    },
    "107": {
      "fn": null,
      "offset": [
        1271,
        14267
      ],
      "op": "EQ",
      "path": "6"
    },
    "108": {
      "fn": null,
      "offset": [
        1271,
        14267
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x206"
    },
    "111": {
      "fn": null,
      "offset": [
        1271,
        14267
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "112": {
      "fn": null,
      "offset": [
        1271,
        14267
      ],
      "op": "DUP1",
      "path": "6"
    },
    "113": {
      "fn": null,
      "offset": [
        1271,
        14267
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x72D27134"
    },
    "118": {
      "fn": null,
      "offset": [
        1271,
        14267
      ],
      "op": "EQ",
      "path": "6"
    },
    "119": {
      "fn": null,
      "offset": [
        1271,
        14267
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x21B"
    },
    "122": {
      "fn": null,
      "offset": [
        1271,
        14267
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "123": {
      "fn": null,
      "offset": [
        1271,
        14267
      ],
      "op": "DUP1",
      "path": "6"
    },
    "124": {
      "fn": null,
      "offset": [
        1271,
        14267
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x76E1DF48"
    },
    "129": {
      "fn": null,
      "offset": [
        1271,
        14267
      ],
      "op": "EQ",
      "path": "6"
    },
    "130": {
      "fn": null,
      "offset": [
        1271,
        14267
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x230"
    },
    "133": {
      "fn": null,
      "offset": [
        1271,
        14267
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "134": {
      "fn": null,
      "offset": [
        1271,
        14267
      ],
      "op": "DUP1",
      "path": "6"
    },
    "135": {
      "fn": null,
      "offset": [
        1271,
        14267
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x82463367"
    },
    "140": {
      "fn": null,
      "offset": [
        1271,
        14267
      ],
      "op": "EQ",
      "path": "6"
    },
    "141": {
      "fn": null,
      "offset": [
        1271,
        14267
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x250"
    },
    "144": {
      "fn": null,
      "offset": [
        1271,
        14267
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "145": {
      "fn": null,
      "offset": [
        1271,
        14267
      ],
      "op": "DUP1",
      "path": "6"
    },
    "146": {
      "fn": null,
      "offset": [
        1271,
        14267
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x8DA5CB5B"
    },
    "151": {
      "fn": null,
      "offset": [
        1271,
        14267
      ],
      "op": "EQ",
      "path": "6"
    },
    "152": {
      "fn": null,
      "offset": [
        1271,
        14267
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x265"
    },
    "155": {
      "fn": null,
      "offset": [
        1271,
        14267
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "156": {
      "fn": null,
      "offset": [
        1271,
        14267
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x114"
    },
    "159": {
      "fn": null,
      "offset": [
        1271,
        14267
      ],
      "op": "JUMP",
      "path": "6"
    },
    "160": {
      "fn": null,
      "offset": [
        1271,
        14267
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "161": {
      "fn": null,
      "offset": [
        1271,
        14267
      ],
      "op": "DUP1",
      "path": "6"
    },
    "162": {
      "fn": null,
      "offset": [
        1271,
        14267
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x24A3D622"
    },
    "167": {
      "fn": null,
      "offset": [
        1271,
        14267
      ],
      "op": "GT",
      "path": "6"
    },
    "168": {
      "fn": null,
      "offset": [
        1271,
        14267
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xE7"
    },
    "171": {
      "fn": null,
      "offset": [
        1271,
        14267
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "172": {
      "fn": null,
      "offset": [
        1271,
        14267
      ],
      "op": "DUP1",
      "path": "6"
    },
    "173": {
      "fn": null,
      "offset": [
        1271,
        14267
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x24A3D622"
    },
    "178": {
      "fn": null,
      "offset": [
        1271,
        14267
      ],
      "op": "EQ",
      "path": "6"
    },
    "179": {
      "fn": null,
      "offset": [
        1271,
        14267
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x19D"
    },
    "182": {
      "fn": null,
      "offset": [
        1271,
        14267
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "183": {
      "fn": null,
      "offset": [
        1271,
        14267
      ],
      "op": "DUP1",
      "path": "6"
    },
    "184": {
      "fn": null,
      "offset": [
        1271,
        14267
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x2BE75895"
    },
    "189": {
      "fn": null,
      "offset": [
        1271,
        14267
      ],
      "op": "EQ",
      "path": "6"
    },
    "190": {
      "fn": null,
      "offset": [
        1271,
        14267
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1B2"
    },
    "193": {
      "fn": null,
      "offset": [
        1271,
        14267
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "194": {
      "fn": null,
      "offset": [
        1271,
        14267
      ],
      "op": "DUP1",
      "path": "6"
    },
    "195": {
      "fn": null,
      "offset": [
        1271,
        14267
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x2D255471"
    },
    "200": {
      "fn": null,
      "offset": [
        1271,
        14267
      ],
      "op": "EQ",
      "path": "6"
    },
    "201": {
      "fn": null,
      "offset": [
        1271,
        14267
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1C7"
    },
    "204": {
      "fn": null,
      "offset": [
        1271,
        14267
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "205": {
      "fn": null,
      "offset": [
        1271,
        14267
      ],
      "op": "DUP1",
      "path": "6"
    },
    "206": {
      "fn": null,
      "offset": [
        1271,
        14267
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x2D2C5565"
    },
    "211": {
      "fn": null,
      "offset": [
        1271,
        14267
      ],
      "op": "EQ",
      "path": "6"
    },
    "212": {
      "fn": null,
      "offset": [
        1271,
        14267
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1DC"
    },
    "215": {
      "fn": null,
      "offset": [
        1271,
        14267
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "216": {
      "fn": null,
      "offset": [
        1271,
        14267
      ],
      "op": "DUP1",
      "path": "6"
    },
    "217": {
      "fn": null,
      "offset": [
        1271,
        14267
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x6009B8E6"
    },
    "222": {
      "fn": null,
      "offset": [
        1271,
        14267
      ],
      "op": "EQ",
      "path": "6"
    },
    "223": {
      "fn": null,
      "offset": [
        1271,
        14267
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1F1"
    },
    "226": {
      "fn": null,
      "offset": [
        1271,
        14267
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "227": {
      "fn": null,
      "offset": [
        1271,
        14267
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x114"
    },
    "230": {
      "fn": null,
      "offset": [
        1271,
        14267
      ],
      "op": "JUMP",
      "path": "6"
    },
    "231": {
      "fn": null,
      "offset": [
        1271,
        14267
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "232": {
      "fn": null,
      "offset": [
        1271,
        14267
      ],
      "op": "DUP1",
      "path": "6"
    },
    "233": {
      "fn": null,
      "offset": [
        1271,
        14267
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xC4E7935"
    },
    "238": {
      "fn": null,
      "offset": [
        1271,
        14267
      ],
      "op": "EQ",
      "path": "6"
    },
    "239": {
      "fn": null,
      "offset": [
        1271,
        14267
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x133"
    },
    "242": {
      "fn": null,
      "offset": [
        1271,
        14267
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "243": {
      "fn": null,
      "offset": [
        1271,
        14267
      ],
      "op": "DUP1",
      "path": "6"
    },
    "244": {
      "fn": null,
      "offset": [
        1271,
        14267
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x14627834"
    },
    "249": {
      "fn": null,
      "offset": [
        1271,
        14267
      ],
      "op": "EQ",
      "path": "6"
    },
    "250": {
      "fn": null,
      "offset": [
        1271,
        14267
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x15E"
    },
    "253": {
      "fn": null,
      "offset": [
        1271,
        14267
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "254": {
      "fn": null,
      "offset": [
        1271,
        14267
      ],
      "op": "DUP1",
      "path": "6"
    },
    "255": {
      "fn": null,
      "offset": [
        1271,
        14267
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x15BEEB93"
    },
    "260": {
      "fn": null,
      "offset": [
        1271,
        14267
      ],
      "op": "EQ",
      "path": "6"
    },
    "261": {
      "fn": null,
      "offset": [
        1271,
        14267
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x173"
    },
    "264": {
      "fn": null,
      "offset": [
        1271,
        14267
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "265": {
      "fn": null,
      "offset": [
        1271,
        14267
      ],
      "op": "DUP1",
      "path": "6"
    },
    "266": {
      "fn": null,
      "offset": [
        1271,
        14267
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x206109B5"
    },
    "271": {
      "fn": null,
      "offset": [
        1271,
        14267
      ],
      "op": "EQ",
      "path": "6"
    },
    "272": {
      "fn": null,
      "offset": [
        1271,
        14267
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x188"
    },
    "275": {
      "fn": null,
      "offset": [
        1271,
        14267
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "276": {
      "fn": null,
      "offset": [
        1271,
        14267
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "277": {
      "fn": "Router.<fallback>",
      "offset": [
        14127,
        14170
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 0,
      "value": "0x131"
    },
    "280": {
      "fn": "Router.<fallback>",
      "offset": [
        14137,
        14169
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x12C"
    },
    "283": {
      "fn": "Router.<fallback>",
      "offset": [
        14161,
        14168
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "285": {
      "fn": "Router.<fallback>",
      "offset": [
        14161,
        14168
      ],
      "op": "CALLDATALOAD",
      "path": "6"
    },
    "286": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "288": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "290": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "292": {
      "op": "SHL"
    },
    "293": {
      "op": "SUB"
    },
    "294": {
      "op": "NOT"
    },
    "295": {
      "fn": "Router.<fallback>",
      "offset": [
        14161,
        14168
      ],
      "op": "AND",
      "path": "6"
    },
    "296": {
      "fn": "Router.<fallback>",
      "offset": [
        14137,
        14160
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2EE"
    },
    "299": {
      "fn": "Router.<fallback>",
      "jump": "i",
      "offset": [
        14137,
        14169
      ],
      "op": "JUMP",
      "path": "6"
    },
    "300": {
      "fn": "Router.<fallback>",
      "offset": [
        14137,
        14169
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "301": {
      "fn": "Router.<fallback>",
      "offset": [
        14127,
        14136
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xF5C"
    },
    "304": {
      "fn": "Router.<fallback>",
      "jump": "i",
      "offset": [
        14127,
        14170
      ],
      "op": "JUMP",
      "path": "6"
    },
    "305": {
      "fn": "Router.<fallback>",
      "offset": [
        14127,
        14170
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "306": {
      "offset": [
        1271,
        14267
      ],
      "op": "STOP",
      "path": "6"
    },
    "307": {
      "offset": [
        1431,
        1461
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "308": {
      "fn": "Router.<fallback>",
      "offset": [
        1431,
        1461
      ],
      "op": "CALLVALUE",
      "path": "6"
    },
    "309": {
      "fn": "Router.<fallback>",
      "offset": [
        1431,
        1461
      ],
      "op": "DUP1",
      "path": "6"
    },
    "310": {
      "fn": "Router.<fallback>",
      "offset": [
        1431,
        1461
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "311": {
      "fn": "Router.<fallback>",
      "offset": [
        1431,
        1461
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x13F"
    },
    "314": {
      "fn": "Router.<fallback>",
      "offset": [
        1431,
        1461
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "315": {
      "fn": "Router.<fallback>",
      "offset": [
        1431,
        1461
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "317": {
      "fn": "Router.<fallback>",
      "offset": [
        1431,
        1461
      ],
      "op": "DUP1",
      "path": "6"
    },
    "318": {
      "fn": "Router.<fallback>",
      "offset": [
        1431,
        1461
      ],
      "op": "REVERT",
      "path": "6"
    },
    "319": {
      "fn": "Router.<fallback>",
      "offset": [
        1431,
        1461
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "320": {
      "fn": "Router.<fallback>",
      "offset": [
        1431,
        1461
      ],
      "op": "POP",
      "path": "6"
    },
    "321": {
      "fn": "Router.<fallback>",
      "offset": [
        1431,
        1461
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x148"
    },
    "324": {
      "fn": "Router.<fallback>",
      "offset": [
        1431,
        1461
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xF80"
    },
    "327": {
      "fn": "Router.<fallback>",
      "jump": "i",
      "offset": [
        1431,
        1461
      ],
      "op": "JUMP",
      "path": "6"
    },
    "328": {
      "fn": "Router.<fallback>",
      "offset": [
        1431,
        1461
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "329": {
      "fn": "Router.<fallback>",
      "offset": [
        1431,
        1461
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "331": {
      "fn": "Router.<fallback>",
      "offset": [
        1431,
        1461
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "332": {
      "fn": "Router.<fallback>",
      "offset": [
        1431,
        1461
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x155"
    },
    "335": {
      "fn": "Router.<fallback>",
      "offset": [
        1431,
        1461
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "336": {
      "fn": "Router.<fallback>",
      "offset": [
        1431,
        1461
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "337": {
      "fn": "Router.<fallback>",
      "offset": [
        1431,
        1461
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x14CA"
    },
    "340": {
      "fn": "Router.<fallback>",
      "jump": "i",
      "offset": [
        1431,
        1461
      ],
      "op": "JUMP",
      "path": "6"
    },
    "341": {
      "fn": "Router.<fallback>",
      "offset": [
        1431,
        1461
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "342": {
      "fn": "Router.<fallback>",
      "offset": [
        1431,
        1461
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "344": {
      "fn": "Router.<fallback>",
      "offset": [
        1431,
        1461
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "345": {
      "fn": "Router.<fallback>",
      "offset": [
        1431,
        1461
      ],
      "op": "DUP1",
      "path": "6"
    },
    "346": {
      "fn": "Router.<fallback>",
      "offset": [
        1431,
        1461
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "347": {
      "fn": "Router.<fallback>",
      "offset": [
        1431,
        1461
      ],
      "op": "SUB",
      "path": "6"
    },
    "348": {
      "fn": "Router.<fallback>",
      "offset": [
        1431,
        1461
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "349": {
      "fn": "Router.<fallback>",
      "offset": [
        1431,
        1461
      ],
      "op": "RETURN",
      "path": "6"
    },
    "350": {
      "offset": [
        1390,
        1425
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "351": {
      "fn": "Router.<fallback>",
      "offset": [
        1390,
        1425
      ],
      "op": "CALLVALUE",
      "path": "6"
    },
    "352": {
      "fn": "Router.<fallback>",
      "offset": [
        1390,
        1425
      ],
      "op": "DUP1",
      "path": "6"
    },
    "353": {
      "fn": "Router.<fallback>",
      "offset": [
        1390,
        1425
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "354": {
      "fn": "Router.<fallback>",
      "offset": [
        1390,
        1425
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x16A"
    },
    "357": {
      "fn": "Router.<fallback>",
      "offset": [
        1390,
        1425
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "358": {
      "fn": "Router.<fallback>",
      "offset": [
        1390,
        1425
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "360": {
      "fn": "Router.<fallback>",
      "offset": [
        1390,
        1425
      ],
      "op": "DUP1",
      "path": "6"
    },
    "361": {
      "fn": "Router.<fallback>",
      "offset": [
        1390,
        1425
      ],
      "op": "REVERT",
      "path": "6"
    },
    "362": {
      "fn": "Router.<fallback>",
      "offset": [
        1390,
        1425
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "363": {
      "fn": "Router.<fallback>",
      "offset": [
        1390,
        1425
      ],
      "op": "POP",
      "path": "6"
    },
    "364": {
      "fn": "Router.<fallback>",
      "offset": [
        1390,
        1425
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x148"
    },
    "367": {
      "fn": "Router.<fallback>",
      "offset": [
        1390,
        1425
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xFA4"
    },
    "370": {
      "fn": "Router.<fallback>",
      "jump": "i",
      "offset": [
        1390,
        1425
      ],
      "op": "JUMP",
      "path": "6"
    },
    "371": {
      "offset": [
        1515,
        1554
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "372": {
      "fn": "Router.<fallback>",
      "offset": [
        1515,
        1554
      ],
      "op": "CALLVALUE",
      "path": "6"
    },
    "373": {
      "fn": "Router.<fallback>",
      "offset": [
        1515,
        1554
      ],
      "op": "DUP1",
      "path": "6"
    },
    "374": {
      "fn": "Router.<fallback>",
      "offset": [
        1515,
        1554
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "375": {
      "fn": "Router.<fallback>",
      "offset": [
        1515,
        1554
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x17F"
    },
    "378": {
      "fn": "Router.<fallback>",
      "offset": [
        1515,
        1554
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "379": {
      "fn": "Router.<fallback>",
      "offset": [
        1515,
        1554
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "381": {
      "fn": "Router.<fallback>",
      "offset": [
        1515,
        1554
      ],
      "op": "DUP1",
      "path": "6"
    },
    "382": {
      "fn": "Router.<fallback>",
      "offset": [
        1515,
        1554
      ],
      "op": "REVERT",
      "path": "6"
    },
    "383": {
      "fn": "Router.<fallback>",
      "offset": [
        1515,
        1554
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "384": {
      "fn": "Router.<fallback>",
      "offset": [
        1515,
        1554
      ],
      "op": "POP",
      "path": "6"
    },
    "385": {
      "fn": "Router.<fallback>",
      "offset": [
        1515,
        1554
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x148"
    },
    "388": {
      "fn": "Router.<fallback>",
      "offset": [
        1515,
        1554
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xFC8"
    },
    "391": {
      "fn": "Router.<fallback>",
      "jump": "i",
      "offset": [
        1515,
        1554
      ],
      "op": "JUMP",
      "path": "6"
    },
    "392": {
      "offset": [
        1735,
        1775
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "393": {
      "fn": "Router.<fallback>",
      "offset": [
        1735,
        1775
      ],
      "op": "CALLVALUE",
      "path": "6"
    },
    "394": {
      "fn": "Router.<fallback>",
      "offset": [
        1735,
        1775
      ],
      "op": "DUP1",
      "path": "6"
    },
    "395": {
      "fn": "Router.<fallback>",
      "offset": [
        1735,
        1775
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "396": {
      "fn": "Router.<fallback>",
      "offset": [
        1735,
        1775
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x194"
    },
    "399": {
      "fn": "Router.<fallback>",
      "offset": [
        1735,
        1775
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "400": {
      "fn": "Router.<fallback>",
      "offset": [
        1735,
        1775
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "402": {
      "fn": "Router.<fallback>",
      "offset": [
        1735,
        1775
      ],
      "op": "DUP1",
      "path": "6"
    },
    "403": {
      "fn": "Router.<fallback>",
      "offset": [
        1735,
        1775
      ],
      "op": "REVERT",
      "path": "6"
    },
    "404": {
      "fn": "Router.<fallback>",
      "offset": [
        1735,
        1775
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "405": {
      "fn": "Router.<fallback>",
      "offset": [
        1735,
        1775
      ],
      "op": "POP",
      "path": "6"
    },
    "406": {
      "fn": "Router.<fallback>",
      "offset": [
        1735,
        1775
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x148"
    },
    "409": {
      "fn": "Router.<fallback>",
      "offset": [
        1735,
        1775
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xFEC"
    },
    "412": {
      "fn": "Router.<fallback>",
      "jump": "i",
      "offset": [
        1735,
        1775
      ],
      "op": "JUMP",
      "path": "6"
    },
    "413": {
      "offset": [
        1035,
        1063
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "414": {
      "fn": "Router.<fallback>",
      "offset": [
        1035,
        1063
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "415": {
      "fn": "Router.<fallback>",
      "offset": [
        1035,
        1063
      ],
      "op": "DUP1",
      "path": "16"
    },
    "416": {
      "fn": "Router.<fallback>",
      "offset": [
        1035,
        1063
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "417": {
      "fn": "Router.<fallback>",
      "offset": [
        1035,
        1063
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1A9"
    },
    "420": {
      "fn": "Router.<fallback>",
      "offset": [
        1035,
        1063
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "421": {
      "fn": "Router.<fallback>",
      "offset": [
        1035,
        1063
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "423": {
      "fn": "Router.<fallback>",
      "offset": [
        1035,
        1063
      ],
      "op": "DUP1",
      "path": "16"
    },
    "424": {
      "fn": "Router.<fallback>",
      "offset": [
        1035,
        1063
      ],
      "op": "REVERT",
      "path": "16"
    },
    "425": {
      "fn": "Router.<fallback>",
      "offset": [
        1035,
        1063
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "426": {
      "fn": "Router.<fallback>",
      "offset": [
        1035,
        1063
      ],
      "op": "POP",
      "path": "16"
    },
    "427": {
      "fn": "Router.<fallback>",
      "offset": [
        1035,
        1063
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x148"
    },
    "430": {
      "fn": "Router.<fallback>",
      "offset": [
        1035,
        1063
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1010"
    },
    "433": {
      "fn": "Router.<fallback>",
      "jump": "i",
      "offset": [
        1035,
        1063
      ],
      "op": "JUMP",
      "path": "16"
    },
    "434": {
      "offset": [
        1686,
        1729
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "435": {
      "fn": "Router.<fallback>",
      "offset": [
        1686,
        1729
      ],
      "op": "CALLVALUE",
      "path": "6"
    },
    "436": {
      "fn": "Router.<fallback>",
      "offset": [
        1686,
        1729
      ],
      "op": "DUP1",
      "path": "6"
    },
    "437": {
      "fn": "Router.<fallback>",
      "offset": [
        1686,
        1729
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "438": {
      "fn": "Router.<fallback>",
      "offset": [
        1686,
        1729
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1BE"
    },
    "441": {
      "fn": "Router.<fallback>",
      "offset": [
        1686,
        1729
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "442": {
      "fn": "Router.<fallback>",
      "offset": [
        1686,
        1729
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "444": {
      "fn": "Router.<fallback>",
      "offset": [
        1686,
        1729
      ],
      "op": "DUP1",
      "path": "6"
    },
    "445": {
      "fn": "Router.<fallback>",
      "offset": [
        1686,
        1729
      ],
      "op": "REVERT",
      "path": "6"
    },
    "446": {
      "fn": "Router.<fallback>",
      "offset": [
        1686,
        1729
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "447": {
      "fn": "Router.<fallback>",
      "offset": [
        1686,
        1729
      ],
      "op": "POP",
      "path": "6"
    },
    "448": {
      "fn": "Router.<fallback>",
      "offset": [
        1686,
        1729
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x148"
    },
    "451": {
      "fn": "Router.<fallback>",
      "offset": [
        1686,
        1729
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x101F"
    },
    "454": {
      "fn": "Router.<fallback>",
      "jump": "i",
      "offset": [
        1686,
        1729
      ],
      "op": "JUMP",
      "path": "6"
    },
    "455": {
      "offset": [
        1648,
        1680
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "456": {
      "fn": "Router.<fallback>",
      "offset": [
        1648,
        1680
      ],
      "op": "CALLVALUE",
      "path": "6"
    },
    "457": {
      "fn": "Router.<fallback>",
      "offset": [
        1648,
        1680
      ],
      "op": "DUP1",
      "path": "6"
    },
    "458": {
      "fn": "Router.<fallback>",
      "offset": [
        1648,
        1680
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "459": {
      "fn": "Router.<fallback>",
      "offset": [
        1648,
        1680
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1D3"
    },
    "462": {
      "fn": "Router.<fallback>",
      "offset": [
        1648,
        1680
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "463": {
      "fn": "Router.<fallback>",
      "offset": [
        1648,
        1680
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "465": {
      "fn": "Router.<fallback>",
      "offset": [
        1648,
        1680
      ],
      "op": "DUP1",
      "path": "6"
    },
    "466": {
      "fn": "Router.<fallback>",
      "offset": [
        1648,
        1680
      ],
      "op": "REVERT",
      "path": "6"
    },
    "467": {
      "fn": "Router.<fallback>",
      "offset": [
        1648,
        1680
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "468": {
      "fn": "Router.<fallback>",
      "offset": [
        1648,
        1680
      ],
      "op": "POP",
      "path": "6"
    },
    "469": {
      "fn": "Router.<fallback>",
      "offset": [
        1648,
        1680
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x148"
    },
    "472": {
      "fn": "Router.<fallback>",
      "offset": [
        1648,
        1680
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1043"
    },
    "475": {
      "fn": "Router.<fallback>",
      "jump": "i",
      "offset": [
        1648,
        1680
      ],
      "op": "JUMP",
      "path": "6"
    },
    "476": {
      "offset": [
        1816,
        1849
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "477": {
      "fn": "Router.<fallback>",
      "offset": [
        1816,
        1849
      ],
      "op": "CALLVALUE",
      "path": "6"
    },
    "478": {
      "fn": "Router.<fallback>",
      "offset": [
        1816,
        1849
      ],
      "op": "DUP1",
      "path": "6"
    },
    "479": {
      "fn": "Router.<fallback>",
      "offset": [
        1816,
        1849
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "480": {
      "fn": "Router.<fallback>",
      "offset": [
        1816,
        1849
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1E8"
    },
    "483": {
      "fn": "Router.<fallback>",
      "offset": [
        1816,
        1849
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "484": {
      "fn": "Router.<fallback>",
      "offset": [
        1816,
        1849
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "486": {
      "fn": "Router.<fallback>",
      "offset": [
        1816,
        1849
      ],
      "op": "DUP1",
      "path": "6"
    },
    "487": {
      "fn": "Router.<fallback>",
      "offset": [
        1816,
        1849
      ],
      "op": "REVERT",
      "path": "6"
    },
    "488": {
      "fn": "Router.<fallback>",
      "offset": [
        1816,
        1849
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "489": {
      "fn": "Router.<fallback>",
      "offset": [
        1816,
        1849
      ],
      "op": "POP",
      "path": "6"
    },
    "490": {
      "fn": "Router.<fallback>",
      "offset": [
        1816,
        1849
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x148"
    },
    "493": {
      "fn": "Router.<fallback>",
      "offset": [
        1816,
        1849
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1067"
    },
    "496": {
      "fn": "Router.<fallback>",
      "jump": "i",
      "offset": [
        1816,
        1849
      ],
      "op": "JUMP",
      "path": "6"
    },
    "497": {
      "offset": [
        1603,
        1642
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "498": {
      "fn": "Router.<fallback>",
      "offset": [
        1603,
        1642
      ],
      "op": "CALLVALUE",
      "path": "6"
    },
    "499": {
      "fn": "Router.<fallback>",
      "offset": [
        1603,
        1642
      ],
      "op": "DUP1",
      "path": "6"
    },
    "500": {
      "fn": "Router.<fallback>",
      "offset": [
        1603,
        1642
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "501": {
      "fn": "Router.<fallback>",
      "offset": [
        1603,
        1642
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1FD"
    },
    "504": {
      "fn": "Router.<fallback>",
      "offset": [
        1603,
        1642
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "505": {
      "fn": "Router.<fallback>",
      "offset": [
        1603,
        1642
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "507": {
      "fn": "Router.<fallback>",
      "offset": [
        1603,
        1642
      ],
      "op": "DUP1",
      "path": "6"
    },
    "508": {
      "fn": "Router.<fallback>",
      "offset": [
        1603,
        1642
      ],
      "op": "REVERT",
      "path": "6"
    },
    "509": {
      "fn": "Router.<fallback>",
      "offset": [
        1603,
        1642
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "510": {
      "fn": "Router.<fallback>",
      "offset": [
        1603,
        1642
      ],
      "op": "POP",
      "path": "6"
    },
    "511": {
      "fn": "Router.<fallback>",
      "offset": [
        1603,
        1642
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x148"
    },
    "514": {
      "fn": "Router.<fallback>",
      "offset": [
        1603,
        1642
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x108B"
    },
    "517": {
      "fn": "Router.<fallback>",
      "jump": "i",
      "offset": [
        1603,
        1642
      ],
      "op": "JUMP",
      "path": "6"
    },
    "518": {
      "offset": [
        1560,
        1597
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "519": {
      "fn": "Router.<fallback>",
      "offset": [
        1560,
        1597
      ],
      "op": "CALLVALUE",
      "path": "6"
    },
    "520": {
      "fn": "Router.<fallback>",
      "offset": [
        1560,
        1597
      ],
      "op": "DUP1",
      "path": "6"
    },
    "521": {
      "fn": "Router.<fallback>",
      "offset": [
        1560,
        1597
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "522": {
      "fn": "Router.<fallback>",
      "offset": [
        1560,
        1597
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x212"
    },
    "525": {
      "fn": "Router.<fallback>",
      "offset": [
        1560,
        1597
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "526": {
      "fn": "Router.<fallback>",
      "offset": [
        1560,
        1597
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "528": {
      "fn": "Router.<fallback>",
      "offset": [
        1560,
        1597
      ],
      "op": "DUP1",
      "path": "6"
    },
    "529": {
      "fn": "Router.<fallback>",
      "offset": [
        1560,
        1597
      ],
      "op": "REVERT",
      "path": "6"
    },
    "530": {
      "fn": "Router.<fallback>",
      "offset": [
        1560,
        1597
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "531": {
      "fn": "Router.<fallback>",
      "offset": [
        1560,
        1597
      ],
      "op": "POP",
      "path": "6"
    },
    "532": {
      "fn": "Router.<fallback>",
      "offset": [
        1560,
        1597
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x148"
    },
    "535": {
      "fn": "Router.<fallback>",
      "offset": [
        1560,
        1597
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x10AF"
    },
    "538": {
      "fn": "Router.<fallback>",
      "jump": "i",
      "offset": [
        1560,
        1597
      ],
      "op": "JUMP",
      "path": "6"
    },
    "539": {
      "offset": [
        1855,
        1897
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "540": {
      "fn": "Router.<fallback>",
      "offset": [
        1855,
        1897
      ],
      "op": "CALLVALUE",
      "path": "6"
    },
    "541": {
      "fn": "Router.<fallback>",
      "offset": [
        1855,
        1897
      ],
      "op": "DUP1",
      "path": "6"
    },
    "542": {
      "fn": "Router.<fallback>",
      "offset": [
        1855,
        1897
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "543": {
      "fn": "Router.<fallback>",
      "offset": [
        1855,
        1897
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x227"
    },
    "546": {
      "fn": "Router.<fallback>",
      "offset": [
        1855,
        1897
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "547": {
      "fn": "Router.<fallback>",
      "offset": [
        1855,
        1897
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "549": {
      "fn": "Router.<fallback>",
      "offset": [
        1855,
        1897
      ],
      "op": "DUP1",
      "path": "6"
    },
    "550": {
      "fn": "Router.<fallback>",
      "offset": [
        1855,
        1897
      ],
      "op": "REVERT",
      "path": "6"
    },
    "551": {
      "fn": "Router.<fallback>",
      "offset": [
        1855,
        1897
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "552": {
      "fn": "Router.<fallback>",
      "offset": [
        1855,
        1897
      ],
      "op": "POP",
      "path": "6"
    },
    "553": {
      "fn": "Router.<fallback>",
      "offset": [
        1855,
        1897
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x148"
    },
    "556": {
      "fn": "Router.<fallback>",
      "offset": [
        1855,
        1897
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x10D3"
    },
    "559": {
      "fn": "Router.<fallback>",
      "jump": "i",
      "offset": [
        1855,
        1897
      ],
      "op": "JUMP",
      "path": "6"
    },
    "560": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        4969,
        12933
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "561": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        4969,
        12933
      ],
      "op": "CALLVALUE",
      "path": "6"
    },
    "562": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        4969,
        12933
      ],
      "op": "DUP1",
      "path": "6"
    },
    "563": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        4969,
        12933
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "564": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        4969,
        12933
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x23C"
    },
    "567": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        4969,
        12933
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "568": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        4969,
        12933
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "570": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        4969,
        12933
      ],
      "op": "DUP1",
      "path": "6"
    },
    "571": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        4969,
        12933
      ],
      "op": "REVERT",
      "path": "6"
    },
    "572": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        4969,
        12933
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "573": {
      "op": "POP"
    },
    "574": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        4969,
        12933
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x148"
    },
    "577": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        4969,
        12933
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x24B"
    },
    "580": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        4969,
        12933
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "581": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        4969,
        12933
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "583": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        4969,
        12933
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1412"
    },
    "586": {
      "fn": "Router.getRouterImplementation",
      "jump": "i",
      "offset": [
        4969,
        12933
      ],
      "op": "JUMP",
      "path": "6"
    },
    "587": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        4969,
        12933
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "588": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        4969,
        12933
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2EE"
    },
    "591": {
      "fn": "Router.getRouterImplementation",
      "jump": "i",
      "offset": [
        4969,
        12933
      ],
      "op": "JUMP",
      "path": "6"
    },
    "592": {
      "offset": [
        920,
        946
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "593": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        920,
        946
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "594": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        920,
        946
      ],
      "op": "DUP1",
      "path": "16"
    },
    "595": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        920,
        946
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "596": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        920,
        946
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x25C"
    },
    "599": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        920,
        946
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "600": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        920,
        946
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "602": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        920,
        946
      ],
      "op": "DUP1",
      "path": "16"
    },
    "603": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        920,
        946
      ],
      "op": "REVERT",
      "path": "16"
    },
    "604": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        920,
        946
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "605": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        920,
        946
      ],
      "op": "POP",
      "path": "16"
    },
    "606": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        920,
        946
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x148"
    },
    "609": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        920,
        946
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x10F7"
    },
    "612": {
      "fn": "Router.getRouterImplementation",
      "jump": "i",
      "offset": [
        920,
        946
      ],
      "op": "JUMP",
      "path": "16"
    },
    "613": {
      "offset": [
        811,
        831
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "614": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        811,
        831
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "615": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        811,
        831
      ],
      "op": "DUP1",
      "path": "16"
    },
    "616": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        811,
        831
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "617": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        811,
        831
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x271"
    },
    "620": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        811,
        831
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "621": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        811,
        831
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "623": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        811,
        831
      ],
      "op": "DUP1",
      "path": "16"
    },
    "624": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        811,
        831
      ],
      "op": "REVERT",
      "path": "16"
    },
    "625": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        811,
        831
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "626": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        811,
        831
      ],
      "op": "POP",
      "path": "16"
    },
    "627": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        811,
        831
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x148"
    },
    "630": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        811,
        831
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1106"
    },
    "633": {
      "fn": "Router.getRouterImplementation",
      "jump": "i",
      "offset": [
        811,
        831
      ],
      "op": "JUMP",
      "path": "16"
    },
    "634": {
      "offset": [
        1781,
        1810
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "635": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        1781,
        1810
      ],
      "op": "CALLVALUE",
      "path": "6"
    },
    "636": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        1781,
        1810
      ],
      "op": "DUP1",
      "path": "6"
    },
    "637": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        1781,
        1810
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "638": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        1781,
        1810
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x286"
    },
    "641": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        1781,
        1810
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "642": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        1781,
        1810
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "644": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        1781,
        1810
      ],
      "op": "DUP1",
      "path": "6"
    },
    "645": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        1781,
        1810
      ],
      "op": "REVERT",
      "path": "6"
    },
    "646": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        1781,
        1810
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "647": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        1781,
        1810
      ],
      "op": "POP",
      "path": "6"
    },
    "648": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        1781,
        1810
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x148"
    },
    "651": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        1781,
        1810
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x111D"
    },
    "654": {
      "fn": "Router.getRouterImplementation",
      "jump": "i",
      "offset": [
        1781,
        1810
      ],
      "op": "JUMP",
      "path": "6"
    },
    "655": {
      "offset": [
        1903,
        1948
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "656": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        1903,
        1948
      ],
      "op": "CALLVALUE",
      "path": "6"
    },
    "657": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        1903,
        1948
      ],
      "op": "DUP1",
      "path": "6"
    },
    "658": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        1903,
        1948
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "659": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        1903,
        1948
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x29B"
    },
    "662": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        1903,
        1948
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "663": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        1903,
        1948
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "665": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        1903,
        1948
      ],
      "op": "DUP1",
      "path": "6"
    },
    "666": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        1903,
        1948
      ],
      "op": "REVERT",
      "path": "6"
    },
    "667": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        1903,
        1948
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "668": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        1903,
        1948
      ],
      "op": "POP",
      "path": "6"
    },
    "669": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        1903,
        1948
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x148"
    },
    "672": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        1903,
        1948
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1141"
    },
    "675": {
      "fn": "Router.getRouterImplementation",
      "jump": "i",
      "offset": [
        1903,
        1948
      ],
      "op": "JUMP",
      "path": "6"
    },
    "676": {
      "fn": "Router.initialize",
      "offset": [
        3377,
        4803
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "677": {
      "fn": "Router.initialize",
      "offset": [
        3377,
        4803
      ],
      "op": "CALLVALUE",
      "path": "6"
    },
    "678": {
      "fn": "Router.initialize",
      "offset": [
        3377,
        4803
      ],
      "op": "DUP1",
      "path": "6"
    },
    "679": {
      "fn": "Router.initialize",
      "offset": [
        3377,
        4803
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "680": {
      "fn": "Router.initialize",
      "offset": [
        3377,
        4803
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2B0"
    },
    "683": {
      "fn": "Router.initialize",
      "offset": [
        3377,
        4803
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "684": {
      "fn": "Router.initialize",
      "offset": [
        3377,
        4803
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "686": {
      "fn": "Router.initialize",
      "offset": [
        3377,
        4803
      ],
      "op": "DUP1",
      "path": "6"
    },
    "687": {
      "fn": "Router.initialize",
      "offset": [
        3377,
        4803
      ],
      "op": "REVERT",
      "path": "6"
    },
    "688": {
      "fn": "Router.initialize",
      "offset": [
        3377,
        4803
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "689": {
      "op": "POP"
    },
    "690": {
      "fn": "Router.initialize",
      "offset": [
        3377,
        4803
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x131"
    },
    "693": {
      "fn": "Router.initialize",
      "offset": [
        3377,
        4803
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2BF"
    },
    "696": {
      "fn": "Router.initialize",
      "offset": [
        3377,
        4803
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "697": {
      "fn": "Router.initialize",
      "offset": [
        3377,
        4803
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "699": {
      "fn": "Router.initialize",
      "offset": [
        3377,
        4803
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x13D0"
    },
    "702": {
      "fn": "Router.initialize",
      "jump": "i",
      "offset": [
        3377,
        4803
      ],
      "op": "JUMP",
      "path": "6"
    },
    "703": {
      "fn": "Router.initialize",
      "offset": [
        3377,
        4803
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "704": {
      "fn": "Router.initialize",
      "offset": [
        3377,
        4803
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1165"
    },
    "707": {
      "fn": "Router.initialize",
      "jump": "i",
      "offset": [
        3377,
        4803
      ],
      "op": "JUMP",
      "path": "6"
    },
    "708": {
      "offset": [
        1954,
        1991
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "709": {
      "fn": "Router.initialize",
      "offset": [
        1954,
        1991
      ],
      "op": "CALLVALUE",
      "path": "6"
    },
    "710": {
      "fn": "Router.initialize",
      "offset": [
        1954,
        1991
      ],
      "op": "DUP1",
      "path": "6"
    },
    "711": {
      "fn": "Router.initialize",
      "offset": [
        1954,
        1991
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "712": {
      "fn": "Router.initialize",
      "offset": [
        1954,
        1991
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2D0"
    },
    "715": {
      "fn": "Router.initialize",
      "offset": [
        1954,
        1991
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "716": {
      "fn": "Router.initialize",
      "offset": [
        1954,
        1991
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "718": {
      "fn": "Router.initialize",
      "offset": [
        1954,
        1991
      ],
      "op": "DUP1",
      "path": "6"
    },
    "719": {
      "fn": "Router.initialize",
      "offset": [
        1954,
        1991
      ],
      "op": "REVERT",
      "path": "6"
    },
    "720": {
      "fn": "Router.initialize",
      "offset": [
        1954,
        1991
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "721": {
      "fn": "Router.initialize",
      "offset": [
        1954,
        1991
      ],
      "op": "POP",
      "path": "6"
    },
    "722": {
      "fn": "Router.initialize",
      "offset": [
        1954,
        1991
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x148"
    },
    "725": {
      "fn": "Router.initialize",
      "offset": [
        1954,
        1991
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1371"
    },
    "728": {
      "fn": "Router.initialize",
      "jump": "i",
      "offset": [
        1954,
        1991
      ],
      "op": "JUMP",
      "path": "6"
    },
    "729": {
      "offset": [
        1467,
        1509
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "730": {
      "fn": "Router.initialize",
      "offset": [
        1467,
        1509
      ],
      "op": "CALLVALUE",
      "path": "6"
    },
    "731": {
      "fn": "Router.initialize",
      "offset": [
        1467,
        1509
      ],
      "op": "DUP1",
      "path": "6"
    },
    "732": {
      "fn": "Router.initialize",
      "offset": [
        1467,
        1509
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "733": {
      "fn": "Router.initialize",
      "offset": [
        1467,
        1509
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2E5"
    },
    "736": {
      "fn": "Router.initialize",
      "offset": [
        1467,
        1509
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "737": {
      "fn": "Router.initialize",
      "offset": [
        1467,
        1509
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "739": {
      "fn": "Router.initialize",
      "offset": [
        1467,
        1509
      ],
      "op": "DUP1",
      "path": "6"
    },
    "740": {
      "fn": "Router.initialize",
      "offset": [
        1467,
        1509
      ],
      "op": "REVERT",
      "path": "6"
    },
    "741": {
      "fn": "Router.initialize",
      "offset": [
        1467,
        1509
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "742": {
      "fn": "Router.initialize",
      "offset": [
        1467,
        1509
      ],
      "op": "POP",
      "path": "6"
    },
    "743": {
      "fn": "Router.initialize",
      "offset": [
        1467,
        1509
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x148"
    },
    "746": {
      "fn": "Router.initialize",
      "offset": [
        1467,
        1509
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1395"
    },
    "749": {
      "fn": "Router.initialize",
      "jump": "i",
      "offset": [
        1467,
        1509
      ],
      "op": "JUMP",
      "path": "6"
    },
    "750": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        4969,
        12933
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "751": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5035,
        5042
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "753": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "755": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "757": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "759": {
      "op": "SHL"
    },
    "760": {
      "op": "SUB"
    },
    "761": {
      "op": "NOT"
    },
    "762": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5071,
        5119
      ],
      "op": "DUP3",
      "path": "6"
    },
    "763": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5071,
        5119
      ],
      "op": "AND",
      "path": "6"
    },
    "764": {
      "op": "PUSH4",
      "value": "0x37351953"
    },
    "769": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "771": {
      "op": "SHL"
    },
    "772": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5071,
        5119
      ],
      "op": "EQ",
      "path": "6"
    },
    "773": {
      "branch": 20,
      "fn": "Router.getRouterImplementation",
      "offset": [
        5071,
        5119
      ],
      "op": "DUP1",
      "path": "6"
    },
    "774": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5071,
        5191
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x31F"
    },
    "777": {
      "branch": 20,
      "fn": "Router.getRouterImplementation",
      "offset": [
        5071,
        5191
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "778": {
      "op": "POP"
    },
    "779": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "781": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "783": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "785": {
      "op": "SHL"
    },
    "786": {
      "op": "SUB"
    },
    "787": {
      "op": "NOT"
    },
    "788": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5135,
        5191
      ],
      "op": "DUP3",
      "path": "6"
    },
    "789": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5135,
        5191
      ],
      "op": "AND",
      "path": "6"
    },
    "790": {
      "op": "PUSH4",
      "value": "0x276B64B"
    },
    "795": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "797": {
      "op": "SHL"
    },
    "798": {
      "branch": 21,
      "fn": "Router.getRouterImplementation",
      "offset": [
        5135,
        5191
      ],
      "op": "EQ",
      "path": "6"
    },
    "799": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5071,
        5191
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "800": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5071,
        5275
      ],
      "op": "DUP1",
      "path": "6"
    },
    "801": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5071,
        5275
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x33A"
    },
    "804": {
      "branch": 21,
      "fn": "Router.getRouterImplementation",
      "offset": [
        5071,
        5275
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "805": {
      "op": "POP"
    },
    "806": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "808": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "810": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "812": {
      "op": "SHL"
    },
    "813": {
      "op": "SUB"
    },
    "814": {
      "op": "NOT"
    },
    "815": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5207,
        5275
      ],
      "op": "DUP3",
      "path": "6"
    },
    "816": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5207,
        5275
      ],
      "op": "AND",
      "path": "6"
    },
    "817": {
      "op": "PUSH4",
      "value": "0x5950D8E9"
    },
    "822": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "824": {
      "op": "SHL"
    },
    "825": {
      "branch": 22,
      "fn": "Router.getRouterImplementation",
      "offset": [
        5207,
        5275
      ],
      "op": "EQ",
      "path": "6"
    },
    "826": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5071,
        5275
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "827": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5071,
        5330
      ],
      "op": "DUP1",
      "path": "6"
    },
    "828": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5071,
        5330
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x355"
    },
    "831": {
      "branch": 22,
      "fn": "Router.getRouterImplementation",
      "offset": [
        5071,
        5330
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "832": {
      "op": "POP"
    },
    "833": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "835": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "837": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "839": {
      "op": "SHL"
    },
    "840": {
      "op": "SUB"
    },
    "841": {
      "op": "NOT"
    },
    "842": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5291,
        5330
      ],
      "op": "DUP3",
      "path": "6"
    },
    "843": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5291,
        5330
      ],
      "op": "AND",
      "path": "6"
    },
    "844": {
      "op": "PUSH4",
      "value": "0x541F527"
    },
    "849": {
      "op": "PUSH1",
      "value": "0xE4"
    },
    "851": {
      "op": "SHL"
    },
    "852": {
      "branch": 23,
      "fn": "Router.getRouterImplementation",
      "offset": [
        5291,
        5330
      ],
      "op": "EQ",
      "path": "6"
    },
    "853": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5071,
        5330
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "854": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5054,
        12927
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "855": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5054,
        12927
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x381"
    },
    "858": {
      "branch": 23,
      "fn": "Router.getRouterImplementation",
      "offset": [
        5054,
        12927
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "859": {
      "op": "POP"
    },
    "860": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5362,
        5374
      ],
      "op": "PUSH32",
      "path": "6",
      "statement": 1,
      "value": "0x0"
    },
    "893": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5355,
        5374
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xF57"
    },
    "896": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5355,
        5374
      ],
      "op": "JUMP",
      "path": "6"
    },
    "897": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5054,
        12927
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "898": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "900": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "902": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "904": {
      "op": "SHL"
    },
    "905": {
      "op": "SUB"
    },
    "906": {
      "op": "NOT"
    },
    "907": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5408,
        5454
      ],
      "op": "DUP3",
      "path": "6"
    },
    "908": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5408,
        5454
      ],
      "op": "AND",
      "path": "6"
    },
    "909": {
      "op": "PUSH4",
      "value": "0x4AE0D101"
    },
    "914": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "916": {
      "op": "SHL"
    },
    "917": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5408,
        5454
      ],
      "op": "EQ",
      "path": "6"
    },
    "918": {
      "branch": 24,
      "fn": "Router.getRouterImplementation",
      "offset": [
        5408,
        5454
      ],
      "op": "DUP1",
      "path": "6"
    },
    "919": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5408,
        5523
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3B0"
    },
    "922": {
      "branch": 24,
      "fn": "Router.getRouterImplementation",
      "offset": [
        5408,
        5523
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "923": {
      "op": "POP"
    },
    "924": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "926": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "928": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "930": {
      "op": "SHL"
    },
    "931": {
      "op": "SUB"
    },
    "932": {
      "op": "NOT"
    },
    "933": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5470,
        5523
      ],
      "op": "DUP3",
      "path": "6"
    },
    "934": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5470,
        5523
      ],
      "op": "AND",
      "path": "6"
    },
    "935": {
      "op": "PUSH4",
      "value": "0x22860701"
    },
    "940": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "942": {
      "op": "SHL"
    },
    "943": {
      "branch": 25,
      "fn": "Router.getRouterImplementation",
      "offset": [
        5470,
        5523
      ],
      "op": "EQ",
      "path": "6"
    },
    "944": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5408,
        5523
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "945": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5408,
        5584
      ],
      "op": "DUP1",
      "path": "6"
    },
    "946": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5408,
        5584
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3CB"
    },
    "949": {
      "branch": 25,
      "fn": "Router.getRouterImplementation",
      "offset": [
        5408,
        5584
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "950": {
      "op": "POP"
    },
    "951": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "953": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "955": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "957": {
      "op": "SHL"
    },
    "958": {
      "op": "SUB"
    },
    "959": {
      "op": "NOT"
    },
    "960": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5539,
        5584
      ],
      "op": "DUP3",
      "path": "6"
    },
    "961": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5539,
        5584
      ],
      "op": "AND",
      "path": "6"
    },
    "962": {
      "op": "PUSH4",
      "value": "0x6CE48F01"
    },
    "967": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "969": {
      "op": "SHL"
    },
    "970": {
      "branch": 26,
      "fn": "Router.getRouterImplementation",
      "offset": [
        5539,
        5584
      ],
      "op": "EQ",
      "path": "6"
    },
    "971": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5408,
        5584
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "972": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5408,
        5653
      ],
      "op": "DUP1",
      "path": "6"
    },
    "973": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5408,
        5653
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3E6"
    },
    "976": {
      "branch": 26,
      "fn": "Router.getRouterImplementation",
      "offset": [
        5408,
        5653
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "977": {
      "op": "POP"
    },
    "978": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "980": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "982": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "984": {
      "op": "SHL"
    },
    "985": {
      "op": "SUB"
    },
    "986": {
      "op": "NOT"
    },
    "987": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5600,
        5653
      ],
      "op": "DUP3",
      "path": "6"
    },
    "988": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5600,
        5653
      ],
      "op": "AND",
      "path": "6"
    },
    "989": {
      "op": "PUSH4",
      "value": "0x4CA418AF"
    },
    "994": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "996": {
      "op": "SHL"
    },
    "997": {
      "branch": 27,
      "fn": "Router.getRouterImplementation",
      "offset": [
        5600,
        5653
      ],
      "op": "EQ",
      "path": "6"
    },
    "998": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5408,
        5653
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "999": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5408,
        5720
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1000": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5408,
        5720
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x401"
    },
    "1003": {
      "branch": 27,
      "fn": "Router.getRouterImplementation",
      "offset": [
        5408,
        5720
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1004": {
      "op": "POP"
    },
    "1005": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1007": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1009": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1011": {
      "op": "SHL"
    },
    "1012": {
      "op": "SUB"
    },
    "1013": {
      "op": "NOT"
    },
    "1014": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5669,
        5720
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1015": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5669,
        5720
      ],
      "op": "AND",
      "path": "6"
    },
    "1016": {
      "op": "PUSH4",
      "value": "0xC025D1A5"
    },
    "1021": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1023": {
      "op": "SHL"
    },
    "1024": {
      "branch": 28,
      "fn": "Router.getRouterImplementation",
      "offset": [
        5669,
        5720
      ],
      "op": "EQ",
      "path": "6"
    },
    "1025": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5408,
        5720
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1026": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5408,
        5797
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1027": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5408,
        5797
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x41C"
    },
    "1030": {
      "branch": 28,
      "fn": "Router.getRouterImplementation",
      "offset": [
        5408,
        5797
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1031": {
      "op": "POP"
    },
    "1032": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1034": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1036": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1038": {
      "op": "SHL"
    },
    "1039": {
      "op": "SUB"
    },
    "1040": {
      "op": "NOT"
    },
    "1041": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5736,
        5797
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1042": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5736,
        5797
      ],
      "op": "AND",
      "path": "6"
    },
    "1043": {
      "op": "PUSH4",
      "value": "0x803C25FB"
    },
    "1048": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1050": {
      "op": "SHL"
    },
    "1051": {
      "branch": 29,
      "fn": "Router.getRouterImplementation",
      "offset": [
        5736,
        5797
      ],
      "op": "EQ",
      "path": "6"
    },
    "1052": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5408,
        5797
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1053": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5408,
        5879
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1054": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5408,
        5879
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x437"
    },
    "1057": {
      "branch": 29,
      "fn": "Router.getRouterImplementation",
      "offset": [
        5408,
        5879
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1058": {
      "op": "POP"
    },
    "1059": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1061": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1063": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1065": {
      "op": "SHL"
    },
    "1066": {
      "op": "SUB"
    },
    "1067": {
      "op": "NOT"
    },
    "1068": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5813,
        5879
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1069": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5813,
        5879
      ],
      "op": "AND",
      "path": "6"
    },
    "1070": {
      "op": "PUSH4",
      "value": "0x323E60CB"
    },
    "1075": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "1077": {
      "op": "SHL"
    },
    "1078": {
      "branch": 30,
      "fn": "Router.getRouterImplementation",
      "offset": [
        5813,
        5879
      ],
      "op": "EQ",
      "path": "6"
    },
    "1079": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5408,
        5879
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1080": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5391,
        12927
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1081": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5391,
        12927
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x463"
    },
    "1084": {
      "branch": 30,
      "fn": "Router.getRouterImplementation",
      "offset": [
        5391,
        12927
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1085": {
      "op": "POP"
    },
    "1086": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5911,
        5931
      ],
      "op": "PUSH32",
      "path": "6",
      "statement": 2,
      "value": "0x0"
    },
    "1119": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5904,
        5931
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xF57"
    },
    "1122": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5904,
        5931
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1123": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5391,
        12927
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1124": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1126": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1128": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1130": {
      "op": "SHL"
    },
    "1131": {
      "op": "SUB"
    },
    "1132": {
      "op": "NOT"
    },
    "1133": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5965,
        6017
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1134": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5965,
        6017
      ],
      "op": "AND",
      "path": "6"
    },
    "1135": {
      "op": "PUSH4",
      "value": "0x2890FB65"
    },
    "1140": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1142": {
      "op": "SHL"
    },
    "1143": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5965,
        6017
      ],
      "op": "EQ",
      "path": "6"
    },
    "1144": {
      "branch": 31,
      "fn": "Router.getRouterImplementation",
      "offset": [
        5965,
        6017
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1145": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5965,
        6080
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x492"
    },
    "1148": {
      "branch": 31,
      "fn": "Router.getRouterImplementation",
      "offset": [
        5965,
        6080
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1149": {
      "op": "POP"
    },
    "1150": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1152": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1154": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1156": {
      "op": "SHL"
    },
    "1157": {
      "op": "SUB"
    },
    "1158": {
      "op": "NOT"
    },
    "1159": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6033,
        6080
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1160": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6033,
        6080
      ],
      "op": "AND",
      "path": "6"
    },
    "1161": {
      "op": "PUSH4",
      "value": "0xB8A69455"
    },
    "1166": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1168": {
      "op": "SHL"
    },
    "1169": {
      "branch": 32,
      "fn": "Router.getRouterImplementation",
      "offset": [
        6033,
        6080
      ],
      "op": "EQ",
      "path": "6"
    },
    "1170": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5965,
        6080
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1171": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5965,
        6134
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1172": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5965,
        6134
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x4AC"
    },
    "1175": {
      "branch": 32,
      "fn": "Router.getRouterImplementation",
      "offset": [
        5965,
        6134
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1176": {
      "op": "POP"
    },
    "1177": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1179": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1181": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1183": {
      "op": "SHL"
    },
    "1184": {
      "op": "SUB"
    },
    "1185": {
      "op": "NOT"
    },
    "1186": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6096,
        6134
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1187": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6096,
        6134
      ],
      "op": "AND",
      "path": "6"
    },
    "1188": {
      "op": "PUSH3",
      "value": "0x5E665D"
    },
    "1192": {
      "op": "PUSH1",
      "value": "0xE3"
    },
    "1194": {
      "op": "SHL"
    },
    "1195": {
      "branch": 33,
      "fn": "Router.getRouterImplementation",
      "offset": [
        6096,
        6134
      ],
      "op": "EQ",
      "path": "6"
    },
    "1196": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5965,
        6134
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1197": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5965,
        6193
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1198": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5965,
        6193
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x4C7"
    },
    "1201": {
      "branch": 33,
      "fn": "Router.getRouterImplementation",
      "offset": [
        5965,
        6193
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1202": {
      "op": "POP"
    },
    "1203": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1205": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1207": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1209": {
      "op": "SHL"
    },
    "1210": {
      "op": "SUB"
    },
    "1211": {
      "op": "NOT"
    },
    "1212": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6150,
        6193
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1213": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6150,
        6193
      ],
      "op": "AND",
      "path": "6"
    },
    "1214": {
      "op": "PUSH4",
      "value": "0xF667F897"
    },
    "1219": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1221": {
      "op": "SHL"
    },
    "1222": {
      "branch": 34,
      "fn": "Router.getRouterImplementation",
      "offset": [
        6150,
        6193
      ],
      "op": "EQ",
      "path": "6"
    },
    "1223": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5965,
        6193
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1224": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5965,
        6251
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1225": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5965,
        6251
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x4E2"
    },
    "1228": {
      "branch": 34,
      "fn": "Router.getRouterImplementation",
      "offset": [
        5965,
        6251
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1229": {
      "op": "POP"
    },
    "1230": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1232": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1234": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1236": {
      "op": "SHL"
    },
    "1237": {
      "op": "SUB"
    },
    "1238": {
      "op": "NOT"
    },
    "1239": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6209,
        6251
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1240": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6209,
        6251
      ],
      "op": "AND",
      "path": "6"
    },
    "1241": {
      "op": "PUSH4",
      "value": "0x66890643"
    },
    "1246": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1248": {
      "op": "SHL"
    },
    "1249": {
      "branch": 35,
      "fn": "Router.getRouterImplementation",
      "offset": [
        6209,
        6251
      ],
      "op": "EQ",
      "path": "6"
    },
    "1250": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5965,
        6251
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1251": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5965,
        6317
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1252": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5965,
        6317
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x4FD"
    },
    "1255": {
      "branch": 35,
      "fn": "Router.getRouterImplementation",
      "offset": [
        5965,
        6317
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1256": {
      "op": "POP"
    },
    "1257": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1259": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1261": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1263": {
      "op": "SHL"
    },
    "1264": {
      "op": "SUB"
    },
    "1265": {
      "op": "NOT"
    },
    "1266": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6267,
        6317
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1267": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6267,
        6317
      ],
      "op": "AND",
      "path": "6"
    },
    "1268": {
      "op": "PUSH4",
      "value": "0x9C97945"
    },
    "1273": {
      "op": "PUSH1",
      "value": "0xE4"
    },
    "1275": {
      "op": "SHL"
    },
    "1276": {
      "branch": 36,
      "fn": "Router.getRouterImplementation",
      "offset": [
        6267,
        6317
      ],
      "op": "EQ",
      "path": "6"
    },
    "1277": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5965,
        6317
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1278": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5948,
        12927
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1279": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5948,
        12927
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x529"
    },
    "1282": {
      "branch": 36,
      "fn": "Router.getRouterImplementation",
      "offset": [
        5948,
        12927
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1283": {
      "op": "POP"
    },
    "1284": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6349,
        6363
      ],
      "op": "PUSH32",
      "path": "6",
      "statement": 3,
      "value": "0x0"
    },
    "1317": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6342,
        6363
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xF57"
    },
    "1320": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6342,
        6363
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1321": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        5948,
        12927
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1322": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1324": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1326": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1328": {
      "op": "SHL"
    },
    "1329": {
      "op": "SUB"
    },
    "1330": {
      "op": "NOT"
    },
    "1331": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6397,
        6448
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1332": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6397,
        6448
      ],
      "op": "AND",
      "path": "6"
    },
    "1333": {
      "op": "PUSH4",
      "value": "0x1FFC9A7"
    },
    "1338": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1340": {
      "op": "SHL"
    },
    "1341": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6397,
        6448
      ],
      "op": "EQ",
      "path": "6"
    },
    "1342": {
      "branch": 37,
      "fn": "Router.getRouterImplementation",
      "offset": [
        6397,
        6448
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1343": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6397,
        6507
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x557"
    },
    "1346": {
      "branch": 37,
      "fn": "Router.getRouterImplementation",
      "offset": [
        6397,
        6507
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1347": {
      "op": "POP"
    },
    "1348": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1350": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1352": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1354": {
      "op": "SHL"
    },
    "1355": {
      "op": "SUB"
    },
    "1356": {
      "op": "NOT"
    },
    "1357": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6464,
        6507
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1358": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6464,
        6507
      ],
      "op": "AND",
      "path": "6"
    },
    "1359": {
      "op": "PUSH3",
      "value": "0x7EEAC7"
    },
    "1363": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "1365": {
      "op": "SHL"
    },
    "1366": {
      "branch": 38,
      "fn": "Router.getRouterImplementation",
      "offset": [
        6464,
        6507
      ],
      "op": "EQ",
      "path": "6"
    },
    "1367": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6397,
        6507
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1368": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6397,
        6571
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1369": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6397,
        6571
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x572"
    },
    "1372": {
      "branch": 38,
      "fn": "Router.getRouterImplementation",
      "offset": [
        6397,
        6571
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1373": {
      "op": "POP"
    },
    "1374": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1376": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1378": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1380": {
      "op": "SHL"
    },
    "1381": {
      "op": "SUB"
    },
    "1382": {
      "op": "NOT"
    },
    "1383": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6523,
        6571
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1384": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6523,
        6571
      ],
      "op": "AND",
      "path": "6"
    },
    "1385": {
      "op": "PUSH4",
      "value": "0x13849CFD"
    },
    "1390": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "1392": {
      "op": "SHL"
    },
    "1393": {
      "branch": 39,
      "fn": "Router.getRouterImplementation",
      "offset": [
        6523,
        6571
      ],
      "op": "EQ",
      "path": "6"
    },
    "1394": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6397,
        6571
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1395": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6397,
        6636
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1396": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6397,
        6636
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x58D"
    },
    "1399": {
      "branch": 39,
      "fn": "Router.getRouterImplementation",
      "offset": [
        6397,
        6636
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1400": {
      "op": "POP"
    },
    "1401": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1403": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1405": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1407": {
      "op": "SHL"
    },
    "1408": {
      "op": "SUB"
    },
    "1409": {
      "op": "NOT"
    },
    "1410": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6587,
        6636
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1411": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6587,
        6636
      ],
      "op": "AND",
      "path": "6"
    },
    "1412": {
      "op": "PUSH4",
      "value": "0xFAC8F09"
    },
    "1417": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1419": {
      "op": "SHL"
    },
    "1420": {
      "branch": 40,
      "fn": "Router.getRouterImplementation",
      "offset": [
        6587,
        6636
      ],
      "op": "EQ",
      "path": "6"
    },
    "1421": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6397,
        6636
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1422": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6397,
        6706
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1423": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6397,
        6706
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x5A8"
    },
    "1426": {
      "branch": 40,
      "fn": "Router.getRouterImplementation",
      "offset": [
        6397,
        6706
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1427": {
      "op": "POP"
    },
    "1428": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1430": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1432": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1434": {
      "op": "SHL"
    },
    "1435": {
      "op": "SUB"
    },
    "1436": {
      "op": "NOT"
    },
    "1437": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6652,
        6706
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1438": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6652,
        6706
      ],
      "op": "AND",
      "path": "6"
    },
    "1439": {
      "op": "PUSH4",
      "value": "0x81A86855"
    },
    "1444": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1446": {
      "op": "SHL"
    },
    "1447": {
      "branch": 41,
      "fn": "Router.getRouterImplementation",
      "offset": [
        6652,
        6706
      ],
      "op": "EQ",
      "path": "6"
    },
    "1448": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6397,
        6706
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1449": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6397,
        6772
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1450": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6397,
        6772
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x5C3"
    },
    "1453": {
      "branch": 41,
      "fn": "Router.getRouterImplementation",
      "offset": [
        6397,
        6772
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1454": {
      "op": "POP"
    },
    "1455": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1457": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1459": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1461": {
      "op": "SHL"
    },
    "1462": {
      "op": "SUB"
    },
    "1463": {
      "op": "NOT"
    },
    "1464": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6722,
        6772
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1465": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6722,
        6772
      ],
      "op": "AND",
      "path": "6"
    },
    "1466": {
      "op": "PUSH4",
      "value": "0x79212195"
    },
    "1471": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "1473": {
      "op": "SHL"
    },
    "1474": {
      "branch": 42,
      "fn": "Router.getRouterImplementation",
      "offset": [
        6722,
        6772
      ],
      "op": "EQ",
      "path": "6"
    },
    "1475": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6397,
        6772
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1476": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6397,
        6843
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1477": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6397,
        6843
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x5DE"
    },
    "1480": {
      "branch": 42,
      "fn": "Router.getRouterImplementation",
      "offset": [
        6397,
        6843
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1481": {
      "op": "POP"
    },
    "1482": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1484": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1486": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1488": {
      "op": "SHL"
    },
    "1489": {
      "op": "SUB"
    },
    "1490": {
      "op": "NOT"
    },
    "1491": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6788,
        6843
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1492": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6788,
        6843
      ],
      "op": "AND",
      "path": "6"
    },
    "1493": {
      "op": "PUSH4",
      "value": "0x1759616B"
    },
    "1498": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "1500": {
      "op": "SHL"
    },
    "1501": {
      "branch": 43,
      "fn": "Router.getRouterImplementation",
      "offset": [
        6788,
        6843
      ],
      "op": "EQ",
      "path": "6"
    },
    "1502": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6397,
        6843
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1503": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6397,
        6907
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1504": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6397,
        6907
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x5F9"
    },
    "1507": {
      "branch": 43,
      "fn": "Router.getRouterImplementation",
      "offset": [
        6397,
        6907
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1508": {
      "op": "POP"
    },
    "1509": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1511": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1513": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1515": {
      "op": "SHL"
    },
    "1516": {
      "op": "SUB"
    },
    "1517": {
      "op": "NOT"
    },
    "1518": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6859,
        6907
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1519": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6859,
        6907
      ],
      "op": "AND",
      "path": "6"
    },
    "1520": {
      "op": "PUSH4",
      "value": "0x7F4D701"
    },
    "1525": {
      "op": "PUSH1",
      "value": "0xE3"
    },
    "1527": {
      "op": "SHL"
    },
    "1528": {
      "branch": 44,
      "fn": "Router.getRouterImplementation",
      "offset": [
        6859,
        6907
      ],
      "op": "EQ",
      "path": "6"
    },
    "1529": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6397,
        6907
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1530": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6397,
        6967
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1531": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6397,
        6967
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x614"
    },
    "1534": {
      "branch": 44,
      "fn": "Router.getRouterImplementation",
      "offset": [
        6397,
        6967
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1535": {
      "op": "POP"
    },
    "1536": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1538": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1540": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1542": {
      "op": "SHL"
    },
    "1543": {
      "op": "SUB"
    },
    "1544": {
      "op": "NOT"
    },
    "1545": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6923,
        6967
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1546": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6923,
        6967
      ],
      "op": "AND",
      "path": "6"
    },
    "1547": {
      "op": "PUSH4",
      "value": "0xE6B43B9"
    },
    "1552": {
      "op": "PUSH1",
      "value": "0xE3"
    },
    "1554": {
      "op": "SHL"
    },
    "1555": {
      "branch": 45,
      "fn": "Router.getRouterImplementation",
      "offset": [
        6923,
        6967
      ],
      "op": "EQ",
      "path": "6"
    },
    "1556": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6397,
        6967
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1557": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6397,
        7034
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1558": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6397,
        7034
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x62F"
    },
    "1561": {
      "branch": 45,
      "fn": "Router.getRouterImplementation",
      "offset": [
        6397,
        7034
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1562": {
      "op": "POP"
    },
    "1563": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1565": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1567": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1569": {
      "op": "SHL"
    },
    "1570": {
      "op": "SUB"
    },
    "1571": {
      "op": "NOT"
    },
    "1572": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6983,
        7034
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1573": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6983,
        7034
      ],
      "op": "AND",
      "path": "6"
    },
    "1574": {
      "op": "PUSH4",
      "value": "0xA22CB465"
    },
    "1579": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1581": {
      "op": "SHL"
    },
    "1582": {
      "branch": 46,
      "fn": "Router.getRouterImplementation",
      "offset": [
        6983,
        7034
      ],
      "op": "EQ",
      "path": "6"
    },
    "1583": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6397,
        7034
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1584": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6397,
        7100
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1585": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6397,
        7100
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x64A"
    },
    "1588": {
      "branch": 46,
      "fn": "Router.getRouterImplementation",
      "offset": [
        6397,
        7100
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1589": {
      "op": "POP"
    },
    "1590": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1592": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1594": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1596": {
      "op": "SHL"
    },
    "1597": {
      "op": "SUB"
    },
    "1598": {
      "op": "NOT"
    },
    "1599": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7050,
        7100
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1600": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7050,
        7100
      ],
      "op": "AND",
      "path": "6"
    },
    "1601": {
      "op": "PUSH4",
      "value": "0xE985E9C5"
    },
    "1606": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1608": {
      "op": "SHL"
    },
    "1609": {
      "branch": 47,
      "fn": "Router.getRouterImplementation",
      "offset": [
        7050,
        7100
      ],
      "op": "EQ",
      "path": "6"
    },
    "1610": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6397,
        7100
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1611": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6380,
        12927
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1612": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6380,
        12927
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x676"
    },
    "1615": {
      "branch": 47,
      "fn": "Router.getRouterImplementation",
      "offset": [
        6380,
        12927
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1616": {
      "op": "POP"
    },
    "1617": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7132,
        7139
      ],
      "op": "PUSH32",
      "path": "6",
      "statement": 4,
      "value": "0x0"
    },
    "1650": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7125,
        7139
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xF57"
    },
    "1653": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7125,
        7139
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1654": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        6380,
        12927
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1655": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1657": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1659": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1661": {
      "op": "SHL"
    },
    "1662": {
      "op": "SUB"
    },
    "1663": {
      "op": "NOT"
    },
    "1664": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7173,
        7220
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1665": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7173,
        7220
      ],
      "op": "AND",
      "path": "6"
    },
    "1666": {
      "op": "PUSH4",
      "value": "0x6A96E86F"
    },
    "1671": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1673": {
      "op": "SHL"
    },
    "1674": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7173,
        7220
      ],
      "op": "EQ",
      "path": "6"
    },
    "1675": {
      "branch": 48,
      "fn": "Router.getRouterImplementation",
      "offset": [
        7173,
        7220
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1676": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7173,
        7289
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x6A5"
    },
    "1679": {
      "branch": 48,
      "fn": "Router.getRouterImplementation",
      "offset": [
        7173,
        7289
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1680": {
      "op": "POP"
    },
    "1681": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1683": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1685": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1687": {
      "op": "SHL"
    },
    "1688": {
      "op": "SUB"
    },
    "1689": {
      "op": "NOT"
    },
    "1690": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7236,
        7289
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1691": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7236,
        7289
      ],
      "op": "AND",
      "path": "6"
    },
    "1692": {
      "op": "PUSH4",
      "value": "0x7DB31AB9"
    },
    "1697": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1699": {
      "op": "SHL"
    },
    "1700": {
      "branch": 49,
      "fn": "Router.getRouterImplementation",
      "offset": [
        7236,
        7289
      ],
      "op": "EQ",
      "path": "6"
    },
    "1701": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7173,
        7289
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1702": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7173,
        7350
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1703": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7173,
        7350
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x6C0"
    },
    "1706": {
      "branch": 49,
      "fn": "Router.getRouterImplementation",
      "offset": [
        7173,
        7350
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1707": {
      "op": "POP"
    },
    "1708": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1710": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1712": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1714": {
      "op": "SHL"
    },
    "1715": {
      "op": "SUB"
    },
    "1716": {
      "op": "NOT"
    },
    "1717": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7305,
        7350
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1718": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7305,
        7350
      ],
      "op": "AND",
      "path": "6"
    },
    "1719": {
      "op": "PUSH4",
      "value": "0xA78DBFFF"
    },
    "1724": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1726": {
      "op": "SHL"
    },
    "1727": {
      "branch": 50,
      "fn": "Router.getRouterImplementation",
      "offset": [
        7305,
        7350
      ],
      "op": "EQ",
      "path": "6"
    },
    "1728": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7173,
        7350
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1729": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7173,
        7417
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1730": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7173,
        7417
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x6DB"
    },
    "1733": {
      "branch": 50,
      "fn": "Router.getRouterImplementation",
      "offset": [
        7173,
        7417
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1734": {
      "op": "POP"
    },
    "1735": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1737": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1739": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1741": {
      "op": "SHL"
    },
    "1742": {
      "op": "SUB"
    },
    "1743": {
      "op": "NOT"
    },
    "1744": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7366,
        7417
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1745": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7366,
        7417
      ],
      "op": "AND",
      "path": "6"
    },
    "1746": {
      "op": "PUSH4",
      "value": "0x184E0053"
    },
    "1751": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "1753": {
      "op": "SHL"
    },
    "1754": {
      "branch": 51,
      "fn": "Router.getRouterImplementation",
      "offset": [
        7366,
        7417
      ],
      "op": "EQ",
      "path": "6"
    },
    "1755": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7173,
        7417
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1756": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7173,
        7477
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1757": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7173,
        7477
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x6F6"
    },
    "1760": {
      "branch": 51,
      "fn": "Router.getRouterImplementation",
      "offset": [
        7173,
        7477
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1761": {
      "op": "POP"
    },
    "1762": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1764": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1766": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1768": {
      "op": "SHL"
    },
    "1769": {
      "op": "SUB"
    },
    "1770": {
      "op": "NOT"
    },
    "1771": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7433,
        7477
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1772": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7433,
        7477
      ],
      "op": "AND",
      "path": "6"
    },
    "1773": {
      "op": "PUSH4",
      "value": "0x18AE40D7"
    },
    "1778": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1780": {
      "op": "SHL"
    },
    "1781": {
      "branch": 52,
      "fn": "Router.getRouterImplementation",
      "offset": [
        7433,
        7477
      ],
      "op": "EQ",
      "path": "6"
    },
    "1782": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7173,
        7477
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1783": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7173,
        7541
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1784": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7173,
        7541
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x711"
    },
    "1787": {
      "branch": 52,
      "fn": "Router.getRouterImplementation",
      "offset": [
        7173,
        7541
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1788": {
      "op": "POP"
    },
    "1789": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1791": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1793": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1795": {
      "op": "SHL"
    },
    "1796": {
      "op": "SUB"
    },
    "1797": {
      "op": "NOT"
    },
    "1798": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7493,
        7541
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1799": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7493,
        7541
      ],
      "op": "AND",
      "path": "6"
    },
    "1800": {
      "op": "PUSH4",
      "value": "0x44253849"
    },
    "1805": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "1807": {
      "op": "SHL"
    },
    "1808": {
      "branch": 53,
      "fn": "Router.getRouterImplementation",
      "offset": [
        7493,
        7541
      ],
      "op": "EQ",
      "path": "6"
    },
    "1809": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7173,
        7541
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1810": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7173,
        7611
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1811": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7173,
        7611
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x72C"
    },
    "1814": {
      "branch": 53,
      "fn": "Router.getRouterImplementation",
      "offset": [
        7173,
        7611
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1815": {
      "op": "POP"
    },
    "1816": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1818": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1820": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1822": {
      "op": "SHL"
    },
    "1823": {
      "op": "SUB"
    },
    "1824": {
      "op": "NOT"
    },
    "1825": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7557,
        7611
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1826": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7557,
        7611
      ],
      "op": "AND",
      "path": "6"
    },
    "1827": {
      "op": "PUSH4",
      "value": "0x5C1D975"
    },
    "1832": {
      "op": "PUSH1",
      "value": "0xE3"
    },
    "1834": {
      "op": "SHL"
    },
    "1835": {
      "branch": 54,
      "fn": "Router.getRouterImplementation",
      "offset": [
        7557,
        7611
      ],
      "op": "EQ",
      "path": "6"
    },
    "1836": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7173,
        7611
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1837": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7173,
        7678
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1838": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7173,
        7678
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x747"
    },
    "1841": {
      "branch": 54,
      "fn": "Router.getRouterImplementation",
      "offset": [
        7173,
        7678
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1842": {
      "op": "POP"
    },
    "1843": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1845": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1847": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1849": {
      "op": "SHL"
    },
    "1850": {
      "op": "SUB"
    },
    "1851": {
      "op": "NOT"
    },
    "1852": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7627,
        7678
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1853": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7627,
        7678
      ],
      "op": "AND",
      "path": "6"
    },
    "1854": {
      "op": "PUSH4",
      "value": "0x6D6503D3"
    },
    "1859": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "1861": {
      "op": "SHL"
    },
    "1862": {
      "branch": 55,
      "fn": "Router.getRouterImplementation",
      "offset": [
        7627,
        7678
      ],
      "op": "EQ",
      "path": "6"
    },
    "1863": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7173,
        7678
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1864": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7173,
        7758
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1865": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7173,
        7758
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x762"
    },
    "1868": {
      "branch": 55,
      "fn": "Router.getRouterImplementation",
      "offset": [
        7173,
        7758
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1869": {
      "op": "POP"
    },
    "1870": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1872": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1874": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1876": {
      "op": "SHL"
    },
    "1877": {
      "op": "SUB"
    },
    "1878": {
      "op": "NOT"
    },
    "1879": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7694,
        7758
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1880": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7694,
        7758
      ],
      "op": "AND",
      "path": "6"
    },
    "1881": {
      "op": "PUSH4",
      "value": "0x1A05BCE1"
    },
    "1886": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1888": {
      "op": "SHL"
    },
    "1889": {
      "branch": 56,
      "fn": "Router.getRouterImplementation",
      "offset": [
        7694,
        7758
      ],
      "op": "EQ",
      "path": "6"
    },
    "1890": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7173,
        7758
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1891": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7173,
        7843
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1892": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7173,
        7843
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x77D"
    },
    "1895": {
      "branch": 56,
      "fn": "Router.getRouterImplementation",
      "offset": [
        7173,
        7843
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1896": {
      "op": "POP"
    },
    "1897": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1899": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1901": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1903": {
      "op": "SHL"
    },
    "1904": {
      "op": "SUB"
    },
    "1905": {
      "op": "NOT"
    },
    "1906": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7774,
        7843
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1907": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7774,
        7843
      ],
      "op": "AND",
      "path": "6"
    },
    "1908": {
      "op": "PUSH4",
      "value": "0x3B2987B3"
    },
    "1913": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1915": {
      "op": "SHL"
    },
    "1916": {
      "branch": 57,
      "fn": "Router.getRouterImplementation",
      "offset": [
        7774,
        7843
      ],
      "op": "EQ",
      "path": "6"
    },
    "1917": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7173,
        7843
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1918": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7173,
        7925
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1919": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7173,
        7925
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x798"
    },
    "1922": {
      "branch": 57,
      "fn": "Router.getRouterImplementation",
      "offset": [
        7173,
        7925
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1923": {
      "op": "POP"
    },
    "1924": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1926": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1928": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1930": {
      "op": "SHL"
    },
    "1931": {
      "op": "SUB"
    },
    "1932": {
      "op": "NOT"
    },
    "1933": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7859,
        7925
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1934": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7859,
        7925
      ],
      "op": "AND",
      "path": "6"
    },
    "1935": {
      "op": "PUSH4",
      "value": "0x4CB6B359"
    },
    "1940": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1942": {
      "op": "SHL"
    },
    "1943": {
      "branch": 58,
      "fn": "Router.getRouterImplementation",
      "offset": [
        7859,
        7925
      ],
      "op": "EQ",
      "path": "6"
    },
    "1944": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7173,
        7925
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1945": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7173,
        7991
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1946": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7173,
        7991
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x7B3"
    },
    "1949": {
      "branch": 58,
      "fn": "Router.getRouterImplementation",
      "offset": [
        7173,
        7991
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1950": {
      "op": "POP"
    },
    "1951": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1953": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1955": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1957": {
      "op": "SHL"
    },
    "1958": {
      "op": "SUB"
    },
    "1959": {
      "op": "NOT"
    },
    "1960": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7941,
        7991
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1961": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7941,
        7991
      ],
      "op": "AND",
      "path": "6"
    },
    "1962": {
      "op": "PUSH4",
      "value": "0x31E14C19"
    },
    "1967": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "1969": {
      "op": "SHL"
    },
    "1970": {
      "branch": 59,
      "fn": "Router.getRouterImplementation",
      "offset": [
        7941,
        7991
      ],
      "op": "EQ",
      "path": "6"
    },
    "1971": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7173,
        7991
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1972": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7173,
        8055
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1973": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7173,
        8055
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x7CE"
    },
    "1976": {
      "branch": 59,
      "fn": "Router.getRouterImplementation",
      "offset": [
        7173,
        8055
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1977": {
      "op": "POP"
    },
    "1978": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1980": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1982": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1984": {
      "op": "SHL"
    },
    "1985": {
      "op": "SUB"
    },
    "1986": {
      "op": "NOT"
    },
    "1987": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8007,
        8055
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1988": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8007,
        8055
      ],
      "op": "AND",
      "path": "6"
    },
    "1989": {
      "op": "PUSH4",
      "value": "0x450083DF"
    },
    "1994": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "1996": {
      "op": "SHL"
    },
    "1997": {
      "branch": 60,
      "fn": "Router.getRouterImplementation",
      "offset": [
        8007,
        8055
      ],
      "op": "EQ",
      "path": "6"
    },
    "1998": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7173,
        8055
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1999": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7156,
        12927
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "2000": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7156,
        12927
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x7FA"
    },
    "2003": {
      "branch": 60,
      "fn": "Router.getRouterImplementation",
      "offset": [
        7156,
        12927
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2004": {
      "op": "POP"
    },
    "2005": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8087,
        8101
      ],
      "op": "PUSH32",
      "path": "6",
      "statement": 5,
      "value": "0x0"
    },
    "2038": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8080,
        8101
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xF57"
    },
    "2041": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8080,
        8101
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2042": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        7156,
        12927
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2043": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2045": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2047": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2049": {
      "op": "SHL"
    },
    "2050": {
      "op": "SUB"
    },
    "2051": {
      "op": "NOT"
    },
    "2052": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8135,
        8187
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2053": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8135,
        8187
      ],
      "op": "AND",
      "path": "6"
    },
    "2054": {
      "op": "PUSH4",
      "value": "0x2D10E6EB"
    },
    "2059": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2061": {
      "op": "SHL"
    },
    "2062": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8135,
        8187
      ],
      "op": "EQ",
      "path": "6"
    },
    "2063": {
      "branch": 61,
      "fn": "Router.getRouterImplementation",
      "offset": [
        8135,
        8187
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2064": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8135,
        8260
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x829"
    },
    "2067": {
      "branch": 61,
      "fn": "Router.getRouterImplementation",
      "offset": [
        8135,
        8260
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2068": {
      "op": "POP"
    },
    "2069": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2071": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2073": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2075": {
      "op": "SHL"
    },
    "2076": {
      "op": "SUB"
    },
    "2077": {
      "op": "NOT"
    },
    "2078": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8203,
        8260
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2079": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8203,
        8260
      ],
      "op": "AND",
      "path": "6"
    },
    "2080": {
      "op": "PUSH4",
      "value": "0x6633AF39"
    },
    "2085": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2087": {
      "op": "SHL"
    },
    "2088": {
      "branch": 62,
      "fn": "Router.getRouterImplementation",
      "offset": [
        8203,
        8260
      ],
      "op": "EQ",
      "path": "6"
    },
    "2089": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8135,
        8260
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2090": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8135,
        8339
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2091": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8135,
        8339
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x844"
    },
    "2094": {
      "branch": 62,
      "fn": "Router.getRouterImplementation",
      "offset": [
        8135,
        8339
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2095": {
      "op": "POP"
    },
    "2096": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2098": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2100": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2102": {
      "op": "SHL"
    },
    "2103": {
      "op": "SUB"
    },
    "2104": {
      "op": "NOT"
    },
    "2105": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8276,
        8339
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2106": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8276,
        8339
      ],
      "op": "AND",
      "path": "6"
    },
    "2107": {
      "op": "PUSH4",
      "value": "0xE3E7CB4F"
    },
    "2112": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2114": {
      "op": "SHL"
    },
    "2115": {
      "branch": 63,
      "fn": "Router.getRouterImplementation",
      "offset": [
        8276,
        8339
      ],
      "op": "EQ",
      "path": "6"
    },
    "2116": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8135,
        8339
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2117": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8135,
        8423
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2118": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8135,
        8423
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x85F"
    },
    "2121": {
      "branch": 63,
      "fn": "Router.getRouterImplementation",
      "offset": [
        8135,
        8423
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2122": {
      "op": "POP"
    },
    "2123": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2125": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2127": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2129": {
      "op": "SHL"
    },
    "2130": {
      "op": "SUB"
    },
    "2131": {
      "op": "NOT"
    },
    "2132": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8355,
        8423
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2133": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8355,
        8423
      ],
      "op": "AND",
      "path": "6"
    },
    "2134": {
      "op": "PUSH4",
      "value": "0x9A600EEB"
    },
    "2139": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2141": {
      "op": "SHL"
    },
    "2142": {
      "branch": 64,
      "fn": "Router.getRouterImplementation",
      "offset": [
        8355,
        8423
      ],
      "op": "EQ",
      "path": "6"
    },
    "2143": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8135,
        8423
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2144": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8118,
        12927
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "2145": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8118,
        12927
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x88B"
    },
    "2148": {
      "branch": 64,
      "fn": "Router.getRouterImplementation",
      "offset": [
        8118,
        12927
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2149": {
      "op": "POP"
    },
    "2150": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8455,
        8473
      ],
      "op": "PUSH32",
      "path": "6",
      "statement": 6,
      "value": "0x0"
    },
    "2183": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8448,
        8473
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xF57"
    },
    "2186": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8448,
        8473
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2187": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8118,
        12927
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2188": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2190": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2192": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2194": {
      "op": "SHL"
    },
    "2195": {
      "op": "SUB"
    },
    "2196": {
      "op": "NOT"
    },
    "2197": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8507,
        8556
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2198": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8507,
        8556
      ],
      "op": "AND",
      "path": "6"
    },
    "2199": {
      "op": "PUSH4",
      "value": "0x1FF7AEFD"
    },
    "2204": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "2206": {
      "op": "SHL"
    },
    "2207": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8507,
        8556
      ],
      "op": "EQ",
      "path": "6"
    },
    "2208": {
      "branch": 65,
      "fn": "Router.getRouterImplementation",
      "offset": [
        8507,
        8556
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2209": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8507,
        8629
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x8BA"
    },
    "2212": {
      "branch": 65,
      "fn": "Router.getRouterImplementation",
      "offset": [
        8507,
        8629
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2213": {
      "op": "POP"
    },
    "2214": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2216": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2218": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2220": {
      "op": "SHL"
    },
    "2221": {
      "op": "SUB"
    },
    "2222": {
      "op": "NOT"
    },
    "2223": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8572,
        8629
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2224": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8572,
        8629
      ],
      "op": "AND",
      "path": "6"
    },
    "2225": {
      "op": "PUSH4",
      "value": "0xE816469D"
    },
    "2230": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2232": {
      "op": "SHL"
    },
    "2233": {
      "branch": 66,
      "fn": "Router.getRouterImplementation",
      "offset": [
        8572,
        8629
      ],
      "op": "EQ",
      "path": "6"
    },
    "2234": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8507,
        8629
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2235": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8507,
        8705
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2236": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8507,
        8705
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x8D5"
    },
    "2239": {
      "branch": 66,
      "fn": "Router.getRouterImplementation",
      "offset": [
        8507,
        8705
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2240": {
      "op": "POP"
    },
    "2241": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2243": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2245": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2247": {
      "op": "SHL"
    },
    "2248": {
      "op": "SUB"
    },
    "2249": {
      "op": "NOT"
    },
    "2250": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8645,
        8705
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2251": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8645,
        8705
      ],
      "op": "AND",
      "path": "6"
    },
    "2252": {
      "op": "PUSH4",
      "value": "0xFB281D9"
    },
    "2257": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2259": {
      "op": "SHL"
    },
    "2260": {
      "branch": 67,
      "fn": "Router.getRouterImplementation",
      "offset": [
        8645,
        8705
      ],
      "op": "EQ",
      "path": "6"
    },
    "2261": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8507,
        8705
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2262": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8507,
        8789
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2263": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8507,
        8789
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x8F0"
    },
    "2266": {
      "branch": 67,
      "fn": "Router.getRouterImplementation",
      "offset": [
        8507,
        8789
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2267": {
      "op": "POP"
    },
    "2268": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2270": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2272": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2274": {
      "op": "SHL"
    },
    "2275": {
      "op": "SUB"
    },
    "2276": {
      "op": "NOT"
    },
    "2277": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8721,
        8789
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2278": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8721,
        8789
      ],
      "op": "AND",
      "path": "6"
    },
    "2279": {
      "op": "PUSH4",
      "value": "0xFA37E395"
    },
    "2284": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2286": {
      "op": "SHL"
    },
    "2287": {
      "branch": 68,
      "fn": "Router.getRouterImplementation",
      "offset": [
        8721,
        8789
      ],
      "op": "EQ",
      "path": "6"
    },
    "2288": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8507,
        8789
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2289": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8490,
        12927
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "2290": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8490,
        12927
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x91C"
    },
    "2293": {
      "branch": 68,
      "fn": "Router.getRouterImplementation",
      "offset": [
        8490,
        12927
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2294": {
      "op": "POP"
    },
    "2295": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8821,
        8836
      ],
      "op": "PUSH32",
      "path": "6",
      "statement": 7,
      "value": "0x0"
    },
    "2328": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8814,
        8836
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xF57"
    },
    "2331": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8814,
        8836
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2332": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8490,
        12927
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2333": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2335": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2337": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2339": {
      "op": "SHL"
    },
    "2340": {
      "op": "SUB"
    },
    "2341": {
      "op": "NOT"
    },
    "2342": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8870,
        8910
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2343": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8870,
        8910
      ],
      "op": "AND",
      "path": "6"
    },
    "2344": {
      "op": "PUSH4",
      "value": "0x59E23AA3"
    },
    "2349": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "2351": {
      "op": "SHL"
    },
    "2352": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8870,
        8910
      ],
      "op": "EQ",
      "path": "6"
    },
    "2353": {
      "branch": 69,
      "fn": "Router.getRouterImplementation",
      "offset": [
        8870,
        8910
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2354": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8870,
        8974
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x94B"
    },
    "2357": {
      "branch": 69,
      "fn": "Router.getRouterImplementation",
      "offset": [
        8870,
        8974
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2358": {
      "op": "POP"
    },
    "2359": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2361": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2363": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2365": {
      "op": "SHL"
    },
    "2366": {
      "op": "SUB"
    },
    "2367": {
      "op": "NOT"
    },
    "2368": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8926,
        8974
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2369": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8926,
        8974
      ],
      "op": "AND",
      "path": "6"
    },
    "2370": {
      "op": "PUSH4",
      "value": "0x15BD0A31"
    },
    "2375": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "2377": {
      "op": "SHL"
    },
    "2378": {
      "branch": 70,
      "fn": "Router.getRouterImplementation",
      "offset": [
        8926,
        8974
      ],
      "op": "EQ",
      "path": "6"
    },
    "2379": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8870,
        8974
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2380": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8870,
        9042
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2381": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8870,
        9042
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x966"
    },
    "2384": {
      "branch": 70,
      "fn": "Router.getRouterImplementation",
      "offset": [
        8870,
        9042
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2385": {
      "op": "POP"
    },
    "2386": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2388": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2390": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2392": {
      "op": "SHL"
    },
    "2393": {
      "op": "SUB"
    },
    "2394": {
      "op": "NOT"
    },
    "2395": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8990,
        9042
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2396": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8990,
        9042
      ],
      "op": "AND",
      "path": "6"
    },
    "2397": {
      "op": "PUSH4",
      "value": "0x6B6EF5CD"
    },
    "2402": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "2404": {
      "op": "SHL"
    },
    "2405": {
      "branch": 71,
      "fn": "Router.getRouterImplementation",
      "offset": [
        8990,
        9042
      ],
      "op": "EQ",
      "path": "6"
    },
    "2406": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8870,
        9042
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2407": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8870,
        9116
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2408": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8870,
        9116
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x981"
    },
    "2411": {
      "branch": 71,
      "fn": "Router.getRouterImplementation",
      "offset": [
        8870,
        9116
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2412": {
      "op": "POP"
    },
    "2413": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2415": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2417": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2419": {
      "op": "SHL"
    },
    "2420": {
      "op": "SUB"
    },
    "2421": {
      "op": "NOT"
    },
    "2422": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        9058,
        9116
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2423": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        9058,
        9116
      ],
      "op": "AND",
      "path": "6"
    },
    "2424": {
      "op": "PUSH4",
      "value": "0x291AFDF3"
    },
    "2429": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2431": {
      "op": "SHL"
    },
    "2432": {
      "branch": 72,
      "fn": "Router.getRouterImplementation",
      "offset": [
        9058,
        9116
      ],
      "op": "EQ",
      "path": "6"
    },
    "2433": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8870,
        9116
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2434": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8870,
        9193
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2435": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8870,
        9193
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x99C"
    },
    "2438": {
      "branch": 72,
      "fn": "Router.getRouterImplementation",
      "offset": [
        8870,
        9193
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2439": {
      "op": "POP"
    },
    "2440": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2442": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2444": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2446": {
      "op": "SHL"
    },
    "2447": {
      "op": "SUB"
    },
    "2448": {
      "op": "NOT"
    },
    "2449": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        9132,
        9193
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2450": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        9132,
        9193
      ],
      "op": "AND",
      "path": "6"
    },
    "2451": {
      "op": "PUSH4",
      "value": "0x341305AB"
    },
    "2456": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "2458": {
      "op": "SHL"
    },
    "2459": {
      "branch": 73,
      "fn": "Router.getRouterImplementation",
      "offset": [
        9132,
        9193
      ],
      "op": "EQ",
      "path": "6"
    },
    "2460": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8870,
        9193
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2461": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8870,
        9264
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2462": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8870,
        9264
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x9B7"
    },
    "2465": {
      "branch": 73,
      "fn": "Router.getRouterImplementation",
      "offset": [
        8870,
        9264
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2466": {
      "op": "POP"
    },
    "2467": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2469": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2471": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2473": {
      "op": "SHL"
    },
    "2474": {
      "op": "SUB"
    },
    "2475": {
      "op": "NOT"
    },
    "2476": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        9209,
        9264
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2477": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        9209,
        9264
      ],
      "op": "AND",
      "path": "6"
    },
    "2478": {
      "op": "PUSH4",
      "value": "0xEE01436B"
    },
    "2483": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2485": {
      "op": "SHL"
    },
    "2486": {
      "branch": 74,
      "fn": "Router.getRouterImplementation",
      "offset": [
        9209,
        9264
      ],
      "op": "EQ",
      "path": "6"
    },
    "2487": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8870,
        9264
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2488": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8870,
        9339
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2489": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8870,
        9339
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x9D2"
    },
    "2492": {
      "branch": 74,
      "fn": "Router.getRouterImplementation",
      "offset": [
        8870,
        9339
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2493": {
      "op": "POP"
    },
    "2494": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2496": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2498": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2500": {
      "op": "SHL"
    },
    "2501": {
      "op": "SUB"
    },
    "2502": {
      "op": "NOT"
    },
    "2503": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        9280,
        9339
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2504": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        9280,
        9339
      ],
      "op": "AND",
      "path": "6"
    },
    "2505": {
      "op": "PUSH4",
      "value": "0x2F02337"
    },
    "2510": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "2512": {
      "op": "SHL"
    },
    "2513": {
      "branch": 75,
      "fn": "Router.getRouterImplementation",
      "offset": [
        9280,
        9339
      ],
      "op": "EQ",
      "path": "6"
    },
    "2514": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8870,
        9339
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2515": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8870,
        9415
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2516": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8870,
        9415
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x9ED"
    },
    "2519": {
      "branch": 75,
      "fn": "Router.getRouterImplementation",
      "offset": [
        8870,
        9415
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2520": {
      "op": "POP"
    },
    "2521": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2523": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2525": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2527": {
      "op": "SHL"
    },
    "2528": {
      "op": "SUB"
    },
    "2529": {
      "op": "NOT"
    },
    "2530": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        9355,
        9415
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2531": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        9355,
        9415
      ],
      "op": "AND",
      "path": "6"
    },
    "2532": {
      "op": "PUSH4",
      "value": "0x50E4F223"
    },
    "2537": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2539": {
      "op": "SHL"
    },
    "2540": {
      "branch": 76,
      "fn": "Router.getRouterImplementation",
      "offset": [
        9355,
        9415
      ],
      "op": "EQ",
      "path": "6"
    },
    "2541": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8870,
        9415
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2542": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8870,
        9493
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2543": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8870,
        9493
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xA07"
    },
    "2546": {
      "branch": 76,
      "fn": "Router.getRouterImplementation",
      "offset": [
        8870,
        9493
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2547": {
      "op": "POP"
    },
    "2548": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2550": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2552": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2554": {
      "op": "SHL"
    },
    "2555": {
      "op": "SUB"
    },
    "2556": {
      "op": "NOT"
    },
    "2557": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        9431,
        9493
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2558": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        9431,
        9493
      ],
      "op": "AND",
      "path": "6"
    },
    "2559": {
      "op": "PUSH3",
      "value": "0xD64429"
    },
    "2563": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "2565": {
      "op": "SHL"
    },
    "2566": {
      "branch": 77,
      "fn": "Router.getRouterImplementation",
      "offset": [
        9431,
        9493
      ],
      "op": "EQ",
      "path": "6"
    },
    "2567": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8870,
        9493
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2568": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8870,
        9549
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2569": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8870,
        9549
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xA22"
    },
    "2572": {
      "branch": 77,
      "fn": "Router.getRouterImplementation",
      "offset": [
        8870,
        9549
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2573": {
      "op": "POP"
    },
    "2574": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2576": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2578": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2580": {
      "op": "SHL"
    },
    "2581": {
      "op": "SUB"
    },
    "2582": {
      "op": "NOT"
    },
    "2583": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        9509,
        9549
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2584": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        9509,
        9549
      ],
      "op": "AND",
      "path": "6"
    },
    "2585": {
      "op": "PUSH4",
      "value": "0x295E6B7F"
    },
    "2590": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2592": {
      "op": "SHL"
    },
    "2593": {
      "branch": 78,
      "fn": "Router.getRouterImplementation",
      "offset": [
        9509,
        9549
      ],
      "op": "EQ",
      "path": "6"
    },
    "2594": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8870,
        9549
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2595": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8870,
        9608
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2596": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8870,
        9608
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xA3D"
    },
    "2599": {
      "branch": 78,
      "fn": "Router.getRouterImplementation",
      "offset": [
        8870,
        9608
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2600": {
      "op": "POP"
    },
    "2601": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2603": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2605": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2607": {
      "op": "SHL"
    },
    "2608": {
      "op": "SUB"
    },
    "2609": {
      "op": "NOT"
    },
    "2610": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        9565,
        9608
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2611": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        9565,
        9608
      ],
      "op": "AND",
      "path": "6"
    },
    "2612": {
      "op": "PUSH4",
      "value": "0xDE1EB9A3"
    },
    "2617": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2619": {
      "op": "SHL"
    },
    "2620": {
      "branch": 79,
      "fn": "Router.getRouterImplementation",
      "offset": [
        9565,
        9608
      ],
      "op": "EQ",
      "path": "6"
    },
    "2621": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8870,
        9608
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2622": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8870,
        9670
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2623": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8870,
        9670
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xA58"
    },
    "2626": {
      "branch": 79,
      "fn": "Router.getRouterImplementation",
      "offset": [
        8870,
        9670
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2627": {
      "op": "POP"
    },
    "2628": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2630": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2632": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2634": {
      "op": "SHL"
    },
    "2635": {
      "op": "SUB"
    },
    "2636": {
      "op": "NOT"
    },
    "2637": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        9624,
        9670
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2638": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        9624,
        9670
      ],
      "op": "AND",
      "path": "6"
    },
    "2639": {
      "op": "PUSH4",
      "value": "0x33A8ABBB"
    },
    "2644": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "2646": {
      "op": "SHL"
    },
    "2647": {
      "branch": 80,
      "fn": "Router.getRouterImplementation",
      "offset": [
        9624,
        9670
      ],
      "op": "EQ",
      "path": "6"
    },
    "2648": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8870,
        9670
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2649": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8870,
        9733
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2650": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8870,
        9733
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xA73"
    },
    "2653": {
      "branch": 80,
      "fn": "Router.getRouterImplementation",
      "offset": [
        8870,
        9733
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2654": {
      "op": "POP"
    },
    "2655": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2657": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2659": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2661": {
      "op": "SHL"
    },
    "2662": {
      "op": "SUB"
    },
    "2663": {
      "op": "NOT"
    },
    "2664": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        9686,
        9733
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2665": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        9686,
        9733
      ],
      "op": "AND",
      "path": "6"
    },
    "2666": {
      "op": "PUSH4",
      "value": "0x28536D5F"
    },
    "2671": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "2673": {
      "op": "SHL"
    },
    "2674": {
      "branch": 81,
      "fn": "Router.getRouterImplementation",
      "offset": [
        9686,
        9733
      ],
      "op": "EQ",
      "path": "6"
    },
    "2675": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8870,
        9733
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2676": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8870,
        9791
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2677": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8870,
        9791
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xA8E"
    },
    "2680": {
      "branch": 81,
      "fn": "Router.getRouterImplementation",
      "offset": [
        8870,
        9791
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2681": {
      "op": "POP"
    },
    "2682": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2684": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2686": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2688": {
      "op": "SHL"
    },
    "2689": {
      "op": "SUB"
    },
    "2690": {
      "op": "NOT"
    },
    "2691": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        9749,
        9791
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2692": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        9749,
        9791
      ],
      "op": "AND",
      "path": "6"
    },
    "2693": {
      "op": "PUSH4",
      "value": "0x31572281"
    },
    "2698": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2700": {
      "op": "SHL"
    },
    "2701": {
      "branch": 82,
      "fn": "Router.getRouterImplementation",
      "offset": [
        9749,
        9791
      ],
      "op": "EQ",
      "path": "6"
    },
    "2702": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8870,
        9791
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2703": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8870,
        9859
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2704": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8870,
        9859
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xAA9"
    },
    "2707": {
      "branch": 82,
      "fn": "Router.getRouterImplementation",
      "offset": [
        8870,
        9859
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2708": {
      "op": "POP"
    },
    "2709": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2711": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2713": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2715": {
      "op": "SHL"
    },
    "2716": {
      "op": "SUB"
    },
    "2717": {
      "op": "NOT"
    },
    "2718": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        9807,
        9859
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2719": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        9807,
        9859
      ],
      "op": "AND",
      "path": "6"
    },
    "2720": {
      "op": "PUSH4",
      "value": "0x6C346C09"
    },
    "2725": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2727": {
      "op": "SHL"
    },
    "2728": {
      "branch": 83,
      "fn": "Router.getRouterImplementation",
      "offset": [
        9807,
        9859
      ],
      "op": "EQ",
      "path": "6"
    },
    "2729": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8870,
        9859
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2730": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8853,
        12927
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "2731": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8853,
        12927
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xAD5"
    },
    "2734": {
      "branch": 83,
      "fn": "Router.getRouterImplementation",
      "offset": [
        8853,
        12927
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2735": {
      "op": "POP"
    },
    "2736": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        9891,
        9903
      ],
      "op": "PUSH32",
      "path": "6",
      "statement": 8,
      "value": "0x0"
    },
    "2769": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        9884,
        9903
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xF57"
    },
    "2772": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        9884,
        9903
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2773": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        8853,
        12927
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2774": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2776": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2778": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2780": {
      "op": "SHL"
    },
    "2781": {
      "op": "SUB"
    },
    "2782": {
      "op": "NOT"
    },
    "2783": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        9937,
        9984
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2784": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        9937,
        9984
      ],
      "op": "AND",
      "path": "6"
    },
    "2785": {
      "op": "PUSH4",
      "value": "0x3438193"
    },
    "2790": {
      "op": "PUSH1",
      "value": "0xE6"
    },
    "2792": {
      "op": "SHL"
    },
    "2793": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        9937,
        9984
      ],
      "op": "EQ",
      "path": "6"
    },
    "2794": {
      "branch": 84,
      "fn": "Router.getRouterImplementation",
      "offset": [
        9937,
        9984
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2795": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        9937,
        10050
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xB04"
    },
    "2798": {
      "branch": 84,
      "fn": "Router.getRouterImplementation",
      "offset": [
        9937,
        10050
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2799": {
      "op": "POP"
    },
    "2800": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2802": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2804": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2806": {
      "op": "SHL"
    },
    "2807": {
      "op": "SUB"
    },
    "2808": {
      "op": "NOT"
    },
    "2809": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10000,
        10050
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2810": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10000,
        10050
      ],
      "op": "AND",
      "path": "6"
    },
    "2811": {
      "op": "PUSH4",
      "value": "0x5DB6EAC7"
    },
    "2816": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "2818": {
      "op": "SHL"
    },
    "2819": {
      "branch": 85,
      "fn": "Router.getRouterImplementation",
      "offset": [
        10000,
        10050
      ],
      "op": "EQ",
      "path": "6"
    },
    "2820": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        9937,
        10050
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2821": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        9920,
        12927
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "2822": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        9920,
        12927
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xB30"
    },
    "2825": {
      "branch": 85,
      "fn": "Router.getRouterImplementation",
      "offset": [
        9920,
        12927
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2826": {
      "op": "POP"
    },
    "2827": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10082,
        10099
      ],
      "op": "PUSH32",
      "path": "6",
      "statement": 9,
      "value": "0x0"
    },
    "2860": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10075,
        10099
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xF57"
    },
    "2863": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10075,
        10099
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2864": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        9920,
        12927
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2865": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2867": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2869": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2871": {
      "op": "SHL"
    },
    "2872": {
      "op": "SUB"
    },
    "2873": {
      "op": "NOT"
    },
    "2874": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10133,
        10180
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2875": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10133,
        10180
      ],
      "op": "AND",
      "path": "6"
    },
    "2876": {
      "op": "PUSH4",
      "value": "0x7ABAF271"
    },
    "2881": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "2883": {
      "op": "SHL"
    },
    "2884": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10133,
        10180
      ],
      "op": "EQ",
      "path": "6"
    },
    "2885": {
      "branch": 86,
      "fn": "Router.getRouterImplementation",
      "offset": [
        10133,
        10180
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2886": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10133,
        10246
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xB5F"
    },
    "2889": {
      "branch": 86,
      "fn": "Router.getRouterImplementation",
      "offset": [
        10133,
        10246
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2890": {
      "op": "POP"
    },
    "2891": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2893": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2895": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2897": {
      "op": "SHL"
    },
    "2898": {
      "op": "SUB"
    },
    "2899": {
      "op": "NOT"
    },
    "2900": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10196,
        10246
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2901": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10196,
        10246
      ],
      "op": "AND",
      "path": "6"
    },
    "2902": {
      "op": "PUSH4",
      "value": "0xE31051A1"
    },
    "2907": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2909": {
      "op": "SHL"
    },
    "2910": {
      "branch": 87,
      "fn": "Router.getRouterImplementation",
      "offset": [
        10196,
        10246
      ],
      "op": "EQ",
      "path": "6"
    },
    "2911": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10133,
        10246
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2912": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10133,
        10312
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2913": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10133,
        10312
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xB7A"
    },
    "2916": {
      "branch": 87,
      "fn": "Router.getRouterImplementation",
      "offset": [
        10133,
        10312
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2917": {
      "op": "POP"
    },
    "2918": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2920": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2922": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2924": {
      "op": "SHL"
    },
    "2925": {
      "op": "SUB"
    },
    "2926": {
      "op": "NOT"
    },
    "2927": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10262,
        10312
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2928": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10262,
        10312
      ],
      "op": "AND",
      "path": "6"
    },
    "2929": {
      "op": "PUSH4",
      "value": "0xA11A4293"
    },
    "2934": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2936": {
      "op": "SHL"
    },
    "2937": {
      "branch": 88,
      "fn": "Router.getRouterImplementation",
      "offset": [
        10262,
        10312
      ],
      "op": "EQ",
      "path": "6"
    },
    "2938": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10133,
        10312
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2939": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10133,
        10378
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2940": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10133,
        10378
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xB95"
    },
    "2943": {
      "branch": 88,
      "fn": "Router.getRouterImplementation",
      "offset": [
        10133,
        10378
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2944": {
      "op": "POP"
    },
    "2945": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2947": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2949": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2951": {
      "op": "SHL"
    },
    "2952": {
      "op": "SUB"
    },
    "2953": {
      "op": "NOT"
    },
    "2954": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10328,
        10378
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2955": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10328,
        10378
      ],
      "op": "AND",
      "path": "6"
    },
    "2956": {
      "op": "PUSH4",
      "value": "0x5284765"
    },
    "2961": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2963": {
      "op": "SHL"
    },
    "2964": {
      "branch": 89,
      "fn": "Router.getRouterImplementation",
      "offset": [
        10328,
        10378
      ],
      "op": "EQ",
      "path": "6"
    },
    "2965": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10133,
        10378
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2966": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10133,
        10442
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2967": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10133,
        10442
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xBB0"
    },
    "2970": {
      "branch": 89,
      "fn": "Router.getRouterImplementation",
      "offset": [
        10133,
        10442
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2971": {
      "op": "POP"
    },
    "2972": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2974": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2976": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2978": {
      "op": "SHL"
    },
    "2979": {
      "op": "SUB"
    },
    "2980": {
      "op": "NOT"
    },
    "2981": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10394,
        10442
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2982": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10394,
        10442
      ],
      "op": "AND",
      "path": "6"
    },
    "2983": {
      "op": "PUSH4",
      "value": "0x315CB2B9"
    },
    "2988": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "2990": {
      "op": "SHL"
    },
    "2991": {
      "branch": 90,
      "fn": "Router.getRouterImplementation",
      "offset": [
        10394,
        10442
      ],
      "op": "EQ",
      "path": "6"
    },
    "2992": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10133,
        10442
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2993": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10133,
        10510
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2994": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10133,
        10510
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xBCB"
    },
    "2997": {
      "branch": 90,
      "fn": "Router.getRouterImplementation",
      "offset": [
        10133,
        10510
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2998": {
      "op": "POP"
    },
    "2999": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3001": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3003": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3005": {
      "op": "SHL"
    },
    "3006": {
      "op": "SUB"
    },
    "3007": {
      "op": "NOT"
    },
    "3008": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10458,
        10510
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3009": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10458,
        10510
      ],
      "op": "AND",
      "path": "6"
    },
    "3010": {
      "op": "PUSH4",
      "value": "0x2C90B94D"
    },
    "3015": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "3017": {
      "op": "SHL"
    },
    "3018": {
      "branch": 91,
      "fn": "Router.getRouterImplementation",
      "offset": [
        10458,
        10510
      ],
      "op": "EQ",
      "path": "6"
    },
    "3019": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10133,
        10510
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3020": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10133,
        10575
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3021": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10133,
        10575
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xBE6"
    },
    "3024": {
      "branch": 91,
      "fn": "Router.getRouterImplementation",
      "offset": [
        10133,
        10575
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "3025": {
      "op": "POP"
    },
    "3026": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3028": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3030": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3032": {
      "op": "SHL"
    },
    "3033": {
      "op": "SUB"
    },
    "3034": {
      "op": "NOT"
    },
    "3035": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10526,
        10575
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3036": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10526,
        10575
      ],
      "op": "AND",
      "path": "6"
    },
    "3037": {
      "op": "PUSH4",
      "value": "0x9CE3C19"
    },
    "3042": {
      "op": "PUSH1",
      "value": "0xE3"
    },
    "3044": {
      "op": "SHL"
    },
    "3045": {
      "branch": 92,
      "fn": "Router.getRouterImplementation",
      "offset": [
        10526,
        10575
      ],
      "op": "EQ",
      "path": "6"
    },
    "3046": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10133,
        10575
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3047": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10133,
        10653
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3048": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10133,
        10653
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xC01"
    },
    "3051": {
      "branch": 92,
      "fn": "Router.getRouterImplementation",
      "offset": [
        10133,
        10653
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "3052": {
      "op": "POP"
    },
    "3053": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3055": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3057": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3059": {
      "op": "SHL"
    },
    "3060": {
      "op": "SUB"
    },
    "3061": {
      "op": "NOT"
    },
    "3062": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10591,
        10653
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3063": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10591,
        10653
      ],
      "op": "AND",
      "path": "6"
    },
    "3064": {
      "op": "PUSH4",
      "value": "0x54EBDE29"
    },
    "3069": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "3071": {
      "op": "SHL"
    },
    "3072": {
      "branch": 93,
      "fn": "Router.getRouterImplementation",
      "offset": [
        10591,
        10653
      ],
      "op": "EQ",
      "path": "6"
    },
    "3073": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10133,
        10653
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3074": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10133,
        10730
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3075": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10133,
        10730
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xC1C"
    },
    "3078": {
      "branch": 93,
      "fn": "Router.getRouterImplementation",
      "offset": [
        10133,
        10730
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "3079": {
      "op": "POP"
    },
    "3080": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3082": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3084": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3086": {
      "op": "SHL"
    },
    "3087": {
      "op": "SUB"
    },
    "3088": {
      "op": "NOT"
    },
    "3089": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10669,
        10730
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3090": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10669,
        10730
      ],
      "op": "AND",
      "path": "6"
    },
    "3091": {
      "op": "PUSH4",
      "value": "0x98DCBC23"
    },
    "3096": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3098": {
      "op": "SHL"
    },
    "3099": {
      "branch": 94,
      "fn": "Router.getRouterImplementation",
      "offset": [
        10669,
        10730
      ],
      "op": "EQ",
      "path": "6"
    },
    "3100": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10133,
        10730
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3101": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10133,
        10804
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3102": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10133,
        10804
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xC37"
    },
    "3105": {
      "branch": 94,
      "fn": "Router.getRouterImplementation",
      "offset": [
        10133,
        10804
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "3106": {
      "op": "POP"
    },
    "3107": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3109": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3111": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3113": {
      "op": "SHL"
    },
    "3114": {
      "op": "SUB"
    },
    "3115": {
      "op": "NOT"
    },
    "3116": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10746,
        10804
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3117": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10746,
        10804
      ],
      "op": "AND",
      "path": "6"
    },
    "3118": {
      "op": "PUSH4",
      "value": "0x33EABD1D"
    },
    "3123": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "3125": {
      "op": "SHL"
    },
    "3126": {
      "branch": 95,
      "fn": "Router.getRouterImplementation",
      "offset": [
        10746,
        10804
      ],
      "op": "EQ",
      "path": "6"
    },
    "3127": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10133,
        10804
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3128": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10133,
        10885
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3129": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10133,
        10885
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xC52"
    },
    "3132": {
      "branch": 95,
      "fn": "Router.getRouterImplementation",
      "offset": [
        10133,
        10885
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "3133": {
      "op": "POP"
    },
    "3134": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3136": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3138": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3140": {
      "op": "SHL"
    },
    "3141": {
      "op": "SUB"
    },
    "3142": {
      "op": "NOT"
    },
    "3143": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10820,
        10885
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3144": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10820,
        10885
      ],
      "op": "AND",
      "path": "6"
    },
    "3145": {
      "op": "PUSH4",
      "value": "0x413F2C5F"
    },
    "3150": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3152": {
      "op": "SHL"
    },
    "3153": {
      "branch": 96,
      "fn": "Router.getRouterImplementation",
      "offset": [
        10820,
        10885
      ],
      "op": "EQ",
      "path": "6"
    },
    "3154": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10133,
        10885
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3155": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10133,
        10967
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3156": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10133,
        10967
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xC6D"
    },
    "3159": {
      "branch": 96,
      "fn": "Router.getRouterImplementation",
      "offset": [
        10133,
        10967
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "3160": {
      "op": "POP"
    },
    "3161": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3163": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3165": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3167": {
      "op": "SHL"
    },
    "3168": {
      "op": "SUB"
    },
    "3169": {
      "op": "NOT"
    },
    "3170": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10901,
        10967
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3171": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10901,
        10967
      ],
      "op": "AND",
      "path": "6"
    },
    "3172": {
      "op": "PUSH4",
      "value": "0xD0DA867"
    },
    "3177": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "3179": {
      "op": "SHL"
    },
    "3180": {
      "branch": 97,
      "fn": "Router.getRouterImplementation",
      "offset": [
        10901,
        10967
      ],
      "op": "EQ",
      "path": "6"
    },
    "3181": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10133,
        10967
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3182": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10133,
        11046
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3183": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10133,
        11046
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xC88"
    },
    "3186": {
      "branch": 97,
      "fn": "Router.getRouterImplementation",
      "offset": [
        10133,
        11046
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "3187": {
      "op": "POP"
    },
    "3188": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3190": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3192": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3194": {
      "op": "SHL"
    },
    "3195": {
      "op": "SUB"
    },
    "3196": {
      "op": "NOT"
    },
    "3197": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10983,
        11046
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3198": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10983,
        11046
      ],
      "op": "AND",
      "path": "6"
    },
    "3199": {
      "op": "PUSH4",
      "value": "0x353ABC5D"
    },
    "3204": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3206": {
      "op": "SHL"
    },
    "3207": {
      "branch": 98,
      "fn": "Router.getRouterImplementation",
      "offset": [
        10983,
        11046
      ],
      "op": "EQ",
      "path": "6"
    },
    "3208": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10133,
        11046
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3209": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10133,
        11129
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3210": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10133,
        11129
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xCA3"
    },
    "3213": {
      "branch": 98,
      "fn": "Router.getRouterImplementation",
      "offset": [
        10133,
        11129
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "3214": {
      "op": "POP"
    },
    "3215": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3217": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3219": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3221": {
      "op": "SHL"
    },
    "3222": {
      "op": "SUB"
    },
    "3223": {
      "op": "NOT"
    },
    "3224": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11062,
        11129
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3225": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11062,
        11129
      ],
      "op": "AND",
      "path": "6"
    },
    "3226": {
      "op": "PUSH4",
      "value": "0xFA17B5F1"
    },
    "3231": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3233": {
      "op": "SHL"
    },
    "3234": {
      "branch": 99,
      "fn": "Router.getRouterImplementation",
      "offset": [
        11062,
        11129
      ],
      "op": "EQ",
      "path": "6"
    },
    "3235": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10133,
        11129
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3236": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10133,
        11194
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3237": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10133,
        11194
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xCBE"
    },
    "3240": {
      "branch": 99,
      "fn": "Router.getRouterImplementation",
      "offset": [
        10133,
        11194
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "3241": {
      "op": "POP"
    },
    "3242": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3244": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3246": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3248": {
      "op": "SHL"
    },
    "3249": {
      "op": "SUB"
    },
    "3250": {
      "op": "NOT"
    },
    "3251": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11145,
        11194
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3252": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11145,
        11194
      ],
      "op": "AND",
      "path": "6"
    },
    "3253": {
      "op": "PUSH4",
      "value": "0x113AA8B1"
    },
    "3258": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3260": {
      "op": "SHL"
    },
    "3261": {
      "branch": 100,
      "fn": "Router.getRouterImplementation",
      "offset": [
        11145,
        11194
      ],
      "op": "EQ",
      "path": "6"
    },
    "3262": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10133,
        11194
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3263": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10133,
        11264
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3264": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10133,
        11264
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xCD8"
    },
    "3267": {
      "branch": 100,
      "fn": "Router.getRouterImplementation",
      "offset": [
        10133,
        11264
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "3268": {
      "op": "POP"
    },
    "3269": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3271": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3273": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3275": {
      "op": "SHL"
    },
    "3276": {
      "op": "SUB"
    },
    "3277": {
      "op": "NOT"
    },
    "3278": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11210,
        11264
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3279": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11210,
        11264
      ],
      "op": "AND",
      "path": "6"
    },
    "3280": {
      "op": "PUSH3",
      "value": "0x474663"
    },
    "3284": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3286": {
      "op": "SHL"
    },
    "3287": {
      "branch": 101,
      "fn": "Router.getRouterImplementation",
      "offset": [
        11210,
        11264
      ],
      "op": "EQ",
      "path": "6"
    },
    "3288": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10133,
        11264
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3289": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10133,
        11319
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3290": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10133,
        11319
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xCF3"
    },
    "3293": {
      "branch": 101,
      "fn": "Router.getRouterImplementation",
      "offset": [
        10133,
        11319
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "3294": {
      "op": "POP"
    },
    "3295": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3297": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3299": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3301": {
      "op": "SHL"
    },
    "3302": {
      "op": "SUB"
    },
    "3303": {
      "op": "NOT"
    },
    "3304": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11280,
        11319
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3305": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11280,
        11319
      ],
      "op": "AND",
      "path": "6"
    },
    "3306": {
      "op": "PUSH4",
      "value": "0x1B2CE7F3"
    },
    "3311": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "3313": {
      "op": "SHL"
    },
    "3314": {
      "branch": 102,
      "fn": "Router.getRouterImplementation",
      "offset": [
        11280,
        11319
      ],
      "op": "EQ",
      "path": "6"
    },
    "3315": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10133,
        11319
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3316": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10133,
        11381
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3317": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10133,
        11381
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xD0E"
    },
    "3320": {
      "branch": 102,
      "fn": "Router.getRouterImplementation",
      "offset": [
        10133,
        11381
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "3321": {
      "op": "POP"
    },
    "3322": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3324": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3326": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3328": {
      "op": "SHL"
    },
    "3329": {
      "op": "SUB"
    },
    "3330": {
      "op": "NOT"
    },
    "3331": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11335,
        11381
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3332": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11335,
        11381
      ],
      "op": "AND",
      "path": "6"
    },
    "3333": {
      "op": "PUSH4",
      "value": "0x278F7943"
    },
    "3338": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "3340": {
      "op": "SHL"
    },
    "3341": {
      "branch": 103,
      "fn": "Router.getRouterImplementation",
      "offset": [
        11335,
        11381
      ],
      "op": "EQ",
      "path": "6"
    },
    "3342": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10133,
        11381
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3343": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10116,
        12927
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "3344": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10116,
        12927
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xD3A"
    },
    "3347": {
      "branch": 103,
      "fn": "Router.getRouterImplementation",
      "offset": [
        10116,
        12927
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "3348": {
      "op": "POP"
    },
    "3349": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11413,
        11423
      ],
      "op": "PUSH32",
      "path": "6",
      "statement": 10,
      "value": "0x0"
    },
    "3382": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11406,
        11423
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xF57"
    },
    "3385": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11406,
        11423
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3386": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        10116,
        12927
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3387": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3389": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3391": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3393": {
      "op": "SHL"
    },
    "3394": {
      "op": "SUB"
    },
    "3395": {
      "op": "NOT"
    },
    "3396": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11457,
        11510
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3397": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11457,
        11510
      ],
      "op": "AND",
      "path": "6"
    },
    "3398": {
      "op": "PUSH4",
      "value": "0x7D6DBFF7"
    },
    "3403": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "3405": {
      "op": "SHL"
    },
    "3406": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11457,
        11510
      ],
      "op": "EQ",
      "path": "6"
    },
    "3407": {
      "branch": 104,
      "fn": "Router.getRouterImplementation",
      "offset": [
        11457,
        11510
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3408": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11457,
        11584
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xD69"
    },
    "3411": {
      "branch": 104,
      "fn": "Router.getRouterImplementation",
      "offset": [
        11457,
        11584
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "3412": {
      "op": "POP"
    },
    "3413": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3415": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3417": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3419": {
      "op": "SHL"
    },
    "3420": {
      "op": "SUB"
    },
    "3421": {
      "op": "NOT"
    },
    "3422": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11526,
        11584
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3423": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11526,
        11584
      ],
      "op": "AND",
      "path": "6"
    },
    "3424": {
      "op": "PUSH4",
      "value": "0x6D7A00EB"
    },
    "3429": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3431": {
      "op": "SHL"
    },
    "3432": {
      "branch": 105,
      "fn": "Router.getRouterImplementation",
      "offset": [
        11526,
        11584
      ],
      "op": "EQ",
      "path": "6"
    },
    "3433": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11457,
        11584
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3434": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11457,
        11651
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3435": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11457,
        11651
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xD84"
    },
    "3438": {
      "branch": 105,
      "fn": "Router.getRouterImplementation",
      "offset": [
        11457,
        11651
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "3439": {
      "op": "POP"
    },
    "3440": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3442": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3444": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3446": {
      "op": "SHL"
    },
    "3447": {
      "op": "SUB"
    },
    "3448": {
      "op": "NOT"
    },
    "3449": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11600,
        11651
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3450": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11600,
        11651
      ],
      "op": "AND",
      "path": "6"
    },
    "3451": {
      "op": "PUSH4",
      "value": "0x7F23D4F9"
    },
    "3456": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "3458": {
      "op": "SHL"
    },
    "3459": {
      "branch": 106,
      "fn": "Router.getRouterImplementation",
      "offset": [
        11600,
        11651
      ],
      "op": "EQ",
      "path": "6"
    },
    "3460": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11457,
        11651
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3461": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11457,
        11716
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3462": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11457,
        11716
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xD9F"
    },
    "3465": {
      "branch": 106,
      "fn": "Router.getRouterImplementation",
      "offset": [
        11457,
        11716
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "3466": {
      "op": "POP"
    },
    "3467": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3469": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3471": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3473": {
      "op": "SHL"
    },
    "3474": {
      "op": "SUB"
    },
    "3475": {
      "op": "NOT"
    },
    "3476": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11667,
        11716
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3477": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11667,
        11716
      ],
      "op": "AND",
      "path": "6"
    },
    "3478": {
      "op": "PUSH4",
      "value": "0x239CEC8F"
    },
    "3483": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "3485": {
      "op": "SHL"
    },
    "3486": {
      "branch": 107,
      "fn": "Router.getRouterImplementation",
      "offset": [
        11667,
        11716
      ],
      "op": "EQ",
      "path": "6"
    },
    "3487": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11457,
        11716
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3488": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11457,
        11786
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3489": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11457,
        11786
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xDBA"
    },
    "3492": {
      "branch": 107,
      "fn": "Router.getRouterImplementation",
      "offset": [
        11457,
        11786
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "3493": {
      "op": "POP"
    },
    "3494": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3496": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3498": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3500": {
      "op": "SHL"
    },
    "3501": {
      "op": "SUB"
    },
    "3502": {
      "op": "NOT"
    },
    "3503": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11732,
        11786
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3504": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11732,
        11786
      ],
      "op": "AND",
      "path": "6"
    },
    "3505": {
      "op": "PUSH4",
      "value": "0x12ADC47B"
    },
    "3510": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3512": {
      "op": "SHL"
    },
    "3513": {
      "branch": 108,
      "fn": "Router.getRouterImplementation",
      "offset": [
        11732,
        11786
      ],
      "op": "EQ",
      "path": "6"
    },
    "3514": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11457,
        11786
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3515": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11440,
        12927
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "3516": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11440,
        12927
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xDE6"
    },
    "3519": {
      "branch": 108,
      "fn": "Router.getRouterImplementation",
      "offset": [
        11440,
        12927
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "3520": {
      "op": "POP"
    },
    "3521": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11818,
        11826
      ],
      "op": "PUSH32",
      "path": "6",
      "statement": 11,
      "value": "0x0"
    },
    "3554": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11811,
        11826
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xF57"
    },
    "3557": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11811,
        11826
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3558": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11440,
        12927
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3559": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3561": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3563": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3565": {
      "op": "SHL"
    },
    "3566": {
      "op": "SUB"
    },
    "3567": {
      "op": "NOT"
    },
    "3568": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11860,
        11919
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3569": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11860,
        11919
      ],
      "op": "AND",
      "path": "6"
    },
    "3570": {
      "op": "PUSH4",
      "value": "0x6A09A2A3"
    },
    "3575": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3577": {
      "op": "SHL"
    },
    "3578": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11860,
        11919
      ],
      "op": "EQ",
      "path": "6"
    },
    "3579": {
      "branch": 109,
      "fn": "Router.getRouterImplementation",
      "offset": [
        11860,
        11919
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3580": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11860,
        12001
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xE15"
    },
    "3583": {
      "branch": 109,
      "fn": "Router.getRouterImplementation",
      "offset": [
        11860,
        12001
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "3584": {
      "op": "POP"
    },
    "3585": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3587": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3589": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3591": {
      "op": "SHL"
    },
    "3592": {
      "op": "SUB"
    },
    "3593": {
      "op": "NOT"
    },
    "3594": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11935,
        12001
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3595": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11935,
        12001
      ],
      "op": "AND",
      "path": "6"
    },
    "3596": {
      "op": "PUSH4",
      "value": "0x8355E895"
    },
    "3601": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3603": {
      "op": "SHL"
    },
    "3604": {
      "branch": 110,
      "fn": "Router.getRouterImplementation",
      "offset": [
        11935,
        12001
      ],
      "op": "EQ",
      "path": "6"
    },
    "3605": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11860,
        12001
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3606": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11860,
        12083
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3607": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11860,
        12083
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xE30"
    },
    "3610": {
      "branch": 110,
      "fn": "Router.getRouterImplementation",
      "offset": [
        11860,
        12083
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "3611": {
      "op": "POP"
    },
    "3612": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3614": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3616": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3618": {
      "op": "SHL"
    },
    "3619": {
      "op": "SUB"
    },
    "3620": {
      "op": "NOT"
    },
    "3621": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        12017,
        12083
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3622": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        12017,
        12083
      ],
      "op": "AND",
      "path": "6"
    },
    "3623": {
      "op": "PUSH4",
      "value": "0x94614DF"
    },
    "3628": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3630": {
      "op": "SHL"
    },
    "3631": {
      "branch": 111,
      "fn": "Router.getRouterImplementation",
      "offset": [
        12017,
        12083
      ],
      "op": "EQ",
      "path": "6"
    },
    "3632": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11860,
        12083
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3633": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11860,
        12164
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3634": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11860,
        12164
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xE4B"
    },
    "3637": {
      "branch": 111,
      "fn": "Router.getRouterImplementation",
      "offset": [
        11860,
        12164
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "3638": {
      "op": "POP"
    },
    "3639": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3641": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3643": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3645": {
      "op": "SHL"
    },
    "3646": {
      "op": "SUB"
    },
    "3647": {
      "op": "NOT"
    },
    "3648": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        12099,
        12164
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3649": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        12099,
        12164
      ],
      "op": "AND",
      "path": "6"
    },
    "3650": {
      "op": "PUSH4",
      "value": "0x4BEB6D97"
    },
    "3655": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "3657": {
      "op": "SHL"
    },
    "3658": {
      "branch": 112,
      "fn": "Router.getRouterImplementation",
      "offset": [
        12099,
        12164
      ],
      "op": "EQ",
      "path": "6"
    },
    "3659": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11860,
        12164
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3660": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11860,
        12237
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3661": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11860,
        12237
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xE66"
    },
    "3664": {
      "branch": 112,
      "fn": "Router.getRouterImplementation",
      "offset": [
        11860,
        12237
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "3665": {
      "op": "POP"
    },
    "3666": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3668": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3670": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3672": {
      "op": "SHL"
    },
    "3673": {
      "op": "SUB"
    },
    "3674": {
      "op": "NOT"
    },
    "3675": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        12180,
        12237
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3676": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        12180,
        12237
      ],
      "op": "AND",
      "path": "6"
    },
    "3677": {
      "op": "PUSH4",
      "value": "0xC52C43E1"
    },
    "3682": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3684": {
      "op": "SHL"
    },
    "3685": {
      "branch": 113,
      "fn": "Router.getRouterImplementation",
      "offset": [
        12180,
        12237
      ],
      "op": "EQ",
      "path": "6"
    },
    "3686": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11860,
        12237
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3687": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11860,
        12304
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3688": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11860,
        12304
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xE81"
    },
    "3691": {
      "branch": 113,
      "fn": "Router.getRouterImplementation",
      "offset": [
        11860,
        12304
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "3692": {
      "op": "POP"
    },
    "3693": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3695": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3697": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3699": {
      "op": "SHL"
    },
    "3700": {
      "op": "SUB"
    },
    "3701": {
      "op": "NOT"
    },
    "3702": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        12253,
        12304
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3703": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        12253,
        12304
      ],
      "op": "AND",
      "path": "6"
    },
    "3704": {
      "op": "PUSH4",
      "value": "0x5953C77B"
    },
    "3709": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3711": {
      "op": "SHL"
    },
    "3712": {
      "branch": 114,
      "fn": "Router.getRouterImplementation",
      "offset": [
        12253,
        12304
      ],
      "op": "EQ",
      "path": "6"
    },
    "3713": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11860,
        12304
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3714": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11860,
        12380
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3715": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11860,
        12380
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xE9C"
    },
    "3718": {
      "branch": 114,
      "fn": "Router.getRouterImplementation",
      "offset": [
        11860,
        12380
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "3719": {
      "op": "POP"
    },
    "3720": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3722": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3724": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3726": {
      "op": "SHL"
    },
    "3727": {
      "op": "SUB"
    },
    "3728": {
      "op": "NOT"
    },
    "3729": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        12320,
        12380
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3730": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        12320,
        12380
      ],
      "op": "AND",
      "path": "6"
    },
    "3731": {
      "op": "PUSH4",
      "value": "0x1F0750C1"
    },
    "3736": {
      "op": "PUSH1",
      "value": "0xE3"
    },
    "3738": {
      "op": "SHL"
    },
    "3739": {
      "branch": 115,
      "fn": "Router.getRouterImplementation",
      "offset": [
        12320,
        12380
      ],
      "op": "EQ",
      "path": "6"
    },
    "3740": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11860,
        12380
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3741": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11860,
        12460
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3742": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11860,
        12460
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xEB7"
    },
    "3745": {
      "branch": 115,
      "fn": "Router.getRouterImplementation",
      "offset": [
        11860,
        12460
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "3746": {
      "op": "POP"
    },
    "3747": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3749": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3751": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3753": {
      "op": "SHL"
    },
    "3754": {
      "op": "SUB"
    },
    "3755": {
      "op": "NOT"
    },
    "3756": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        12396,
        12460
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3757": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        12396,
        12460
      ],
      "op": "AND",
      "path": "6"
    },
    "3758": {
      "op": "PUSH4",
      "value": "0xBAC9E8B1"
    },
    "3763": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3765": {
      "op": "SHL"
    },
    "3766": {
      "branch": 116,
      "fn": "Router.getRouterImplementation",
      "offset": [
        12396,
        12460
      ],
      "op": "EQ",
      "path": "6"
    },
    "3767": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11860,
        12460
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3768": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11860,
        12536
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3769": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11860,
        12536
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xED2"
    },
    "3772": {
      "branch": 116,
      "fn": "Router.getRouterImplementation",
      "offset": [
        11860,
        12536
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "3773": {
      "op": "POP"
    },
    "3774": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3776": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3778": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3780": {
      "op": "SHL"
    },
    "3781": {
      "op": "SUB"
    },
    "3782": {
      "op": "NOT"
    },
    "3783": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        12476,
        12536
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3784": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        12476,
        12536
      ],
      "op": "AND",
      "path": "6"
    },
    "3785": {
      "op": "PUSH4",
      "value": "0xAAAE47B5"
    },
    "3790": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3792": {
      "op": "SHL"
    },
    "3793": {
      "branch": 117,
      "fn": "Router.getRouterImplementation",
      "offset": [
        12476,
        12536
      ],
      "op": "EQ",
      "path": "6"
    },
    "3794": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11860,
        12536
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3795": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11860,
        12616
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3796": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11860,
        12616
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xEED"
    },
    "3799": {
      "branch": 117,
      "fn": "Router.getRouterImplementation",
      "offset": [
        11860,
        12616
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "3800": {
      "op": "POP"
    },
    "3801": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3803": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3805": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3807": {
      "op": "SHL"
    },
    "3808": {
      "op": "SUB"
    },
    "3809": {
      "op": "NOT"
    },
    "3810": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        12552,
        12616
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3811": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        12552,
        12616
      ],
      "op": "AND",
      "path": "6"
    },
    "3812": {
      "op": "PUSH4",
      "value": "0x416A1587"
    },
    "3817": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3819": {
      "op": "SHL"
    },
    "3820": {
      "branch": 118,
      "fn": "Router.getRouterImplementation",
      "offset": [
        12552,
        12616
      ],
      "op": "EQ",
      "path": "6"
    },
    "3821": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11860,
        12616
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3822": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11860,
        12697
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3823": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11860,
        12697
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xF08"
    },
    "3826": {
      "branch": 118,
      "fn": "Router.getRouterImplementation",
      "offset": [
        11860,
        12697
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "3827": {
      "op": "POP"
    },
    "3828": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3830": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3832": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3834": {
      "op": "SHL"
    },
    "3835": {
      "op": "SUB"
    },
    "3836": {
      "op": "NOT"
    },
    "3837": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        12632,
        12697
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3838": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        12632,
        12697
      ],
      "op": "AND",
      "path": "6"
    },
    "3839": {
      "op": "PUSH4",
      "value": "0x1BAEFC5D"
    },
    "3844": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "3846": {
      "op": "SHL"
    },
    "3847": {
      "branch": 119,
      "fn": "Router.getRouterImplementation",
      "offset": [
        12632,
        12697
      ],
      "op": "EQ",
      "path": "6"
    },
    "3848": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11860,
        12697
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3849": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11843,
        12927
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "3850": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11843,
        12927
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xF34"
    },
    "3853": {
      "branch": 119,
      "fn": "Router.getRouterImplementation",
      "offset": [
        11843,
        12927
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "3854": {
      "op": "POP"
    },
    "3855": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        12729,
        12746
      ],
      "op": "PUSH32",
      "path": "6",
      "statement": 12,
      "value": "0x0"
    },
    "3888": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        12722,
        12746
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xF57"
    },
    "3891": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        12722,
        12746
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3892": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11843,
        12927
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3893": {
      "op": "POP"
    },
    "3894": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        12911,
        12916
      ],
      "op": "PUSH32",
      "path": "6",
      "statement": 13,
      "value": "0x0"
    },
    "3927": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        11843,
        12927
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3928": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        4969,
        12933
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3929": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        4969,
        12933
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3930": {
      "fn": "Router.getRouterImplementation",
      "offset": [
        4969,
        12933
      ],
      "op": "POP",
      "path": "6"
    },
    "3931": {
      "fn": "Router.getRouterImplementation",
      "jump": "o",
      "offset": [
        4969,
        12933
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3932": {
      "fn": "Router._delegate",
      "offset": [
        13113,
        14083
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3933": {
      "fn": "Router._delegate",
      "offset": [
        13498,
        13512
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "3934": {
      "fn": "Router._delegate",
      "offset": [
        13495,
        13496
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3936": {
      "fn": "Router._delegate",
      "offset": [
        13492,
        13493
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3937": {
      "fn": "Router._delegate",
      "offset": [
        13479,
        13513
      ],
      "op": "CALLDATACOPY",
      "path": "6"
    },
    "3938": {
      "fn": "Router._delegate",
      "offset": [
        13712,
        13713
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3940": {
      "fn": "Router._delegate",
      "offset": [
        13709,
        13710
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3941": {
      "fn": "Router._delegate",
      "offset": [
        13693,
        13707
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "3942": {
      "fn": "Router._delegate",
      "offset": [
        13690,
        13691
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3944": {
      "fn": "Router._delegate",
      "offset": [
        13674,
        13688
      ],
      "op": "DUP5",
      "path": "6"
    },
    "3945": {
      "fn": "Router._delegate",
      "offset": [
        13667,
        13672
      ],
      "op": "GAS",
      "path": "6"
    },
    "3946": {
      "fn": "Router._delegate",
      "offset": [
        13654,
        13714
      ],
      "op": "DELEGATECALL",
      "path": "6"
    },
    "3947": {
      "fn": "Router._delegate",
      "offset": [
        13788,
        13804
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "3948": {
      "fn": "Router._delegate",
      "offset": [
        13785,
        13786
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3950": {
      "fn": "Router._delegate",
      "offset": [
        13782,
        13783
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3951": {
      "fn": "Router._delegate",
      "offset": [
        13767,
        13805
      ],
      "op": "RETURNDATACOPY",
      "path": "6"
    },
    "3952": {
      "fn": "Router._delegate",
      "offset": [
        13826,
        13832
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3953": {
      "fn": "Router._delegate",
      "offset": [
        13901,
        13975
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3954": {
      "fn": "Router._delegate",
      "offset": [
        13901,
        13975
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "3955": {
      "fn": "Router._delegate",
      "offset": [
        13901,
        13975
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xF7B"
    },
    "3958": {
      "fn": "Router._delegate",
      "offset": [
        13901,
        13975
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "3959": {
      "fn": "Router._delegate",
      "offset": [
        14032,
        14048
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "3960": {
      "fn": "Router._delegate",
      "offset": [
        14029,
        14030
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3962": {
      "fn": "Router._delegate",
      "offset": [
        14022,
        14049
      ],
      "op": "RETURN",
      "path": "6"
    },
    "3963": {
      "fn": "Router._delegate",
      "offset": [
        13901,
        13975
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3964": {
      "fn": "Router._delegate",
      "offset": [
        13940,
        13956
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "3965": {
      "fn": "Router._delegate",
      "offset": [
        13937,
        13938
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3967": {
      "fn": "Router._delegate",
      "offset": [
        13930,
        13957
      ],
      "op": "REVERT",
      "path": "6"
    },
    "3968": {
      "offset": [
        1431,
        1461
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3969": {
      "fn": "Router._delegate",
      "offset": [
        1431,
        1461
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0x0"
    },
    "4002": {
      "fn": "Router._delegate",
      "offset": [
        1431,
        1461
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4003": {
      "fn": "Router._delegate",
      "jump": "o",
      "offset": [
        1431,
        1461
      ],
      "op": "JUMP",
      "path": "6"
    },
    "4004": {
      "offset": [
        1390,
        1425
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4005": {
      "fn": "Router._delegate",
      "offset": [
        1390,
        1425
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0x0"
    },
    "4038": {
      "fn": "Router._delegate",
      "offset": [
        1390,
        1425
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4039": {
      "fn": "Router._delegate",
      "jump": "o",
      "offset": [
        1390,
        1425
      ],
      "op": "JUMP",
      "path": "6"
    },
    "4040": {
      "offset": [
        1515,
        1554
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4041": {
      "fn": "Router._delegate",
      "offset": [
        1515,
        1554
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0x0"
    },
    "4074": {
      "fn": "Router._delegate",
      "offset": [
        1515,
        1554
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4075": {
      "fn": "Router._delegate",
      "jump": "o",
      "offset": [
        1515,
        1554
      ],
      "op": "JUMP",
      "path": "6"
    },
    "4076": {
      "offset": [
        1735,
        1775
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4077": {
      "fn": "Router._delegate",
      "offset": [
        1735,
        1775
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0x0"
    },
    "4110": {
      "fn": "Router._delegate",
      "offset": [
        1735,
        1775
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4111": {
      "fn": "Router._delegate",
      "jump": "o",
      "offset": [
        1735,
        1775
      ],
      "op": "JUMP",
      "path": "6"
    },
    "4112": {
      "offset": [
        1035,
        1063
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4113": {
      "fn": "Router._delegate",
      "offset": [
        1035,
        1063
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x2"
    },
    "4115": {
      "fn": "Router._delegate",
      "offset": [
        1035,
        1063
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "4116": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4118": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4120": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4122": {
      "op": "SHL"
    },
    "4123": {
      "op": "SUB"
    },
    "4124": {
      "offset": [
        1035,
        1063
      ],
      "op": "AND",
      "path": "16"
    },
    "4125": {
      "fn": "Router._delegate",
      "offset": [
        1035,
        1063
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4126": {
      "fn": "Router._delegate",
      "jump": "o",
      "offset": [
        1035,
        1063
      ],
      "op": "JUMP",
      "path": "16"
    },
    "4127": {
      "offset": [
        1686,
        1729
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4128": {
      "fn": "Router._delegate",
      "offset": [
        1686,
        1729
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0x0"
    },
    "4161": {
      "fn": "Router._delegate",
      "offset": [
        1686,
        1729
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4162": {
      "fn": "Router._delegate",
      "jump": "o",
      "offset": [
        1686,
        1729
      ],
      "op": "JUMP",
      "path": "6"
    },
    "4163": {
      "offset": [
        1648,
        1680
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4164": {
      "fn": "Router._delegate",
      "offset": [
        1648,
        1680
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0x0"
    },
    "4197": {
      "fn": "Router._delegate",
      "offset": [
        1648,
        1680
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4198": {
      "fn": "Router._delegate",
      "jump": "o",
      "offset": [
        1648,
        1680
      ],
      "op": "JUMP",
      "path": "6"
    },
    "4199": {
      "offset": [
        1816,
        1849
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4200": {
      "fn": "Router._delegate",
      "offset": [
        1816,
        1849
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0x0"
    },
    "4233": {
      "fn": "Router._delegate",
      "offset": [
        1816,
        1849
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4234": {
      "fn": "Router._delegate",
      "jump": "o",
      "offset": [
        1816,
        1849
      ],
      "op": "JUMP",
      "path": "6"
    },
    "4235": {
      "offset": [
        1603,
        1642
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4236": {
      "fn": "Router._delegate",
      "offset": [
        1603,
        1642
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0x0"
    },
    "4269": {
      "fn": "Router._delegate",
      "offset": [
        1603,
        1642
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4270": {
      "fn": "Router._delegate",
      "jump": "o",
      "offset": [
        1603,
        1642
      ],
      "op": "JUMP",
      "path": "6"
    },
    "4271": {
      "offset": [
        1560,
        1597
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4272": {
      "fn": "Router._delegate",
      "offset": [
        1560,
        1597
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0x0"
    },
    "4305": {
      "fn": "Router._delegate",
      "offset": [
        1560,
        1597
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4306": {
      "fn": "Router._delegate",
      "jump": "o",
      "offset": [
        1560,
        1597
      ],
      "op": "JUMP",
      "path": "6"
    },
    "4307": {
      "offset": [
        1855,
        1897
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4308": {
      "fn": "Router._delegate",
      "offset": [
        1855,
        1897
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0x0"
    },
    "4341": {
      "fn": "Router._delegate",
      "offset": [
        1855,
        1897
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4342": {
      "fn": "Router._delegate",
      "jump": "o",
      "offset": [
        1855,
        1897
      ],
      "op": "JUMP",
      "path": "6"
    },
    "4343": {
      "offset": [
        920,
        946
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4344": {
      "fn": "Router._delegate",
      "offset": [
        920,
        946
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "4346": {
      "fn": "Router._delegate",
      "offset": [
        920,
        946
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "4347": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4349": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4351": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4353": {
      "op": "SHL"
    },
    "4354": {
      "op": "SUB"
    },
    "4355": {
      "offset": [
        920,
        946
      ],
      "op": "AND",
      "path": "16"
    },
    "4356": {
      "fn": "Router._delegate",
      "offset": [
        920,
        946
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4357": {
      "fn": "Router._delegate",
      "jump": "o",
      "offset": [
        920,
        946
      ],
      "op": "JUMP",
      "path": "16"
    },
    "4358": {
      "offset": [
        811,
        831
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4359": {
      "fn": "Router._delegate",
      "offset": [
        811,
        831
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "4361": {
      "fn": "Router._delegate",
      "offset": [
        811,
        831
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "4362": {
      "fn": "Router._delegate",
      "offset": [
        811,
        831
      ],
      "op": "PUSH5",
      "path": "16",
      "value": "0x100000000"
    },
    "4368": {
      "fn": "Router._delegate",
      "offset": [
        811,
        831
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4369": {
      "fn": "Router._delegate",
      "offset": [
        811,
        831
      ],
      "op": "DIV",
      "path": "16"
    },
    "4370": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4372": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4374": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4376": {
      "op": "SHL"
    },
    "4377": {
      "op": "SUB"
    },
    "4378": {
      "offset": [
        811,
        831
      ],
      "op": "AND",
      "path": "16"
    },
    "4379": {
      "fn": "Router._delegate",
      "offset": [
        811,
        831
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4380": {
      "fn": "Router._delegate",
      "jump": "o",
      "offset": [
        811,
        831
      ],
      "op": "JUMP",
      "path": "16"
    },
    "4381": {
      "offset": [
        1781,
        1810
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4382": {
      "fn": "Router._delegate",
      "offset": [
        1781,
        1810
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0x0"
    },
    "4415": {
      "fn": "Router._delegate",
      "offset": [
        1781,
        1810
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4416": {
      "fn": "Router._delegate",
      "jump": "o",
      "offset": [
        1781,
        1810
      ],
      "op": "JUMP",
      "path": "6"
    },
    "4417": {
      "offset": [
        1903,
        1948
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4418": {
      "fn": "Router._delegate",
      "offset": [
        1903,
        1948
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0x0"
    },
    "4451": {
      "fn": "Router._delegate",
      "offset": [
        1903,
        1948
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4452": {
      "fn": "Router._delegate",
      "jump": "o",
      "offset": [
        1903,
        1948
      ],
      "op": "JUMP",
      "path": "6"
    },
    "4453": {
      "fn": "Router.initialize",
      "offset": [
        3377,
        4803
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4454": {
      "fn": "Router.initialize",
      "offset": [
        3539,
        3549
      ],
      "op": "CALLER",
      "path": "6",
      "statement": 14
    },
    "4455": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4457": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4459": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4461": {
      "op": "SHL"
    },
    "4462": {
      "op": "SUB"
    },
    "4463": {
      "fn": "Router.initialize",
      "offset": [
        3553,
        3561
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0x0"
    },
    "4496": {
      "fn": "Router.initialize",
      "offset": [
        3539,
        3561
      ],
      "op": "AND",
      "path": "6"
    },
    "4497": {
      "branch": 120,
      "fn": "Router.initialize",
      "offset": [
        3539,
        3561
      ],
      "op": "EQ",
      "path": "6"
    },
    "4498": {
      "fn": "Router.initialize",
      "offset": [
        3539,
        3580
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4499": {
      "fn": "Router.initialize",
      "offset": [
        3539,
        3580
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "4500": {
      "fn": "Router.initialize",
      "offset": [
        3539,
        3580
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x11A7"
    },
    "4503": {
      "branch": 120,
      "fn": "Router.initialize",
      "offset": [
        3539,
        3580
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "4504": {
      "op": "POP"
    },
    "4505": {
      "fn": "Router.initialize",
      "offset": [
        3566,
        3580
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "4507": {
      "fn": "Router.initialize",
      "offset": [
        3566,
        3580
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "4508": {
      "fn": "Router.initialize",
      "offset": [
        3566,
        3580
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x1000000"
    },
    "4513": {
      "fn": "Router.initialize",
      "offset": [
        3566,
        3580
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4514": {
      "fn": "Router.initialize",
      "offset": [
        3566,
        3580
      ],
      "op": "DIV",
      "path": "6"
    },
    "4515": {
      "fn": "Router.initialize",
      "offset": [
        3566,
        3580
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xFF"
    },
    "4517": {
      "branch": 121,
      "fn": "Router.initialize",
      "offset": [
        3566,
        3580
      ],
      "op": "AND",
      "path": "6"
    },
    "4518": {
      "fn": "Router.initialize",
      "offset": [
        3565,
        3580
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "4519": {
      "fn": "Router.initialize",
      "offset": [
        3539,
        3580
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4520": {
      "fn": "Router.initialize",
      "offset": [
        3531,
        3581
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x11B0"
    },
    "4523": {
      "branch": 121,
      "fn": "Router.initialize",
      "offset": [
        3531,
        3581
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "4524": {
      "fn": "Router.initialize",
      "offset": [
        3531,
        3581
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "4526": {
      "fn": "Router.initialize",
      "offset": [
        3531,
        3581
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4527": {
      "fn": "Router.initialize",
      "offset": [
        3531,
        3581
      ],
      "op": "REVERT",
      "path": "6"
    },
    "4528": {
      "fn": "Router.initialize",
      "offset": [
        3531,
        3581
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4529": {
      "fn": "Router.initialize",
      "offset": [
        3715,
        3720
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 15,
      "value": "0x0"
    },
    "4531": {
      "fn": "Router.initialize",
      "offset": [
        3715,
        3733
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4532": {
      "fn": "Router.initialize",
      "offset": [
        3715,
        3733
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "4533": {
      "op": "PUSH5",
      "value": "0x100000000"
    },
    "4539": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4541": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "4543": {
      "op": "SHL"
    },
    "4544": {
      "op": "SUB"
    },
    "4545": {
      "op": "NOT"
    },
    "4546": {
      "fn": "Router.initialize",
      "offset": [
        3715,
        3733
      ],
      "op": "AND",
      "path": "6"
    },
    "4547": {
      "fn": "Router.initialize",
      "offset": [
        3723,
        3733
      ],
      "op": "CALLER",
      "path": "6"
    },
    "4548": {
      "fn": "Router.initialize",
      "offset": [
        3715,
        3733
      ],
      "op": "PUSH5",
      "path": "6",
      "value": "0x100000000"
    },
    "4554": {
      "fn": "Router.initialize",
      "offset": [
        3715,
        3733
      ],
      "op": "MUL",
      "path": "6"
    },
    "4555": {
      "fn": "Router.initialize",
      "offset": [
        3715,
        3733
      ],
      "op": "OR",
      "path": "6"
    },
    "4556": {
      "fn": "Router.initialize",
      "offset": [
        3715,
        3733
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4557": {
      "fn": "Router.initialize",
      "offset": [
        3715,
        3733
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "4558": {
      "fn": "Router.initialize",
      "offset": [
        4091,
        4166
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4560": {
      "fn": "Router.initialize",
      "offset": [
        4091,
        4166
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4561": {
      "fn": "Router.initialize",
      "offset": [
        4091,
        4166
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "4562": {
      "fn": "Router.initialize",
      "offset": [
        4091,
        4166
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xA0"
    },
    "4564": {
      "fn": "Router.initialize",
      "offset": [
        4091,
        4166
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4565": {
      "fn": "Router.initialize",
      "offset": [
        4091,
        4166
      ],
      "op": "ADD",
      "path": "6"
    },
    "4566": {
      "fn": "Router.initialize",
      "offset": [
        4091,
        4166
      ],
      "op": "DUP3",
      "path": "6"
    },
    "4567": {
      "fn": "Router.initialize",
      "offset": [
        4091,
        4166
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4568": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4570": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4572": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4574": {
      "op": "SHL"
    },
    "4575": {
      "op": "SUB"
    },
    "4576": {
      "fn": "Router.initialize",
      "offset": [
        4104,
        4108
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0x0"
    },
    "4609": {
      "fn": "Router.initialize",
      "offset": [
        4091,
        4166
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4610": {
      "fn": "Router.initialize",
      "offset": [
        4091,
        4166
      ],
      "op": "AND",
      "path": "6"
    },
    "4611": {
      "fn": "Router.initialize",
      "offset": [
        4091,
        4166
      ],
      "op": "DUP3",
      "path": "6"
    },
    "4612": {
      "fn": "Router.initialize",
      "offset": [
        4091,
        4166
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4613": {
      "fn": "Router.initialize",
      "offset": [
        4091,
        4166
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "4615": {
      "fn": "Router.initialize",
      "offset": [
        4091,
        4166
      ],
      "op": "DUP3",
      "path": "6"
    },
    "4616": {
      "fn": "Router.initialize",
      "offset": [
        4091,
        4166
      ],
      "op": "ADD",
      "path": "6"
    },
    "4617": {
      "fn": "Router.initialize",
      "offset": [
        4091,
        4166
      ],
      "op": "DUP5",
      "path": "6"
    },
    "4618": {
      "fn": "Router.initialize",
      "offset": [
        4091,
        4166
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4619": {
      "fn": "Router.initialize",
      "offset": [
        4091,
        4166
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4620": {
      "fn": "Router.initialize",
      "offset": [
        3943,
        3953
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0x0"
    },
    "4653": {
      "fn": "Router.initialize",
      "offset": [
        3935,
        3967
      ],
      "op": "AND",
      "path": "6"
    },
    "4654": {
      "fn": "Router.initialize",
      "offset": [
        3935,
        3967
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "4655": {
      "op": "PUSH4",
      "value": "0x7ABAF271"
    },
    "4660": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "4662": {
      "op": "SHL"
    },
    "4663": {
      "fn": "Router.initialize",
      "offset": [
        4029,
        4069
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "4664": {
      "fn": "Router.initialize",
      "offset": [
        4091,
        4166
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4665": {
      "fn": "Router.initialize",
      "offset": [
        4091,
        4166
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4666": {
      "fn": "Router.initialize",
      "offset": [
        4091,
        4166
      ],
      "op": "ADD",
      "path": "6"
    },
    "4667": {
      "fn": "Router.initialize",
      "offset": [
        4117,
        4131
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2"
    },
    "4669": {
      "fn": "Router.initialize",
      "offset": [
        4091,
        4166
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4670": {
      "fn": "Router.initialize",
      "offset": [
        4091,
        4166
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4671": {
      "offset": [
        218,
        219
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x8"
    },
    "4673": {
      "fn": "Router.initialize",
      "offset": [
        4091,
        4166
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "4675": {
      "fn": "Router.initialize",
      "offset": [
        4091,
        4166
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4676": {
      "fn": "Router.initialize",
      "offset": [
        4091,
        4166
      ],
      "op": "DUP4",
      "path": "6"
    },
    "4677": {
      "fn": "Router.initialize",
      "offset": [
        4091,
        4166
      ],
      "op": "ADD",
      "path": "6"
    },
    "4678": {
      "fn": "Router.initialize",
      "offset": [
        4091,
        4166
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "4679": {
      "fn": "Router.initialize",
      "offset": [
        4091,
        4166
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4680": {
      "fn": "Router.initialize",
      "offset": [
        4091,
        4166
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "4681": {
      "fn": "Router.initialize",
      "offset": [
        4091,
        4166
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4682": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4684": {
      "fn": "Router.initialize",
      "offset": [
        4091,
        4166
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4686": {
      "fn": "Router.initialize",
      "offset": [
        4091,
        4166
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "4687": {
      "fn": "Router.initialize",
      "offset": [
        4091,
        4166
      ],
      "op": "DUP4",
      "path": "6"
    },
    "4688": {
      "fn": "Router.initialize",
      "offset": [
        4091,
        4166
      ],
      "op": "ADD",
      "path": "6"
    },
    "4689": {
      "fn": "Router.initialize",
      "offset": [
        4091,
        4166
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4690": {
      "fn": "Router.initialize",
      "offset": [
        4091,
        4166
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4691": {
      "fn": "Router.initialize",
      "offset": [
        4091,
        4166
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4692": {
      "fn": "Router.initialize",
      "offset": [
        4238,
        4319
      ],
      "op": "DUP3",
      "path": "6"
    },
    "4693": {
      "fn": "Router.initialize",
      "offset": [
        4238,
        4319
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "4694": {
      "fn": "Router.initialize",
      "offset": [
        4238,
        4319
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xA0"
    },
    "4696": {
      "fn": "Router.initialize",
      "offset": [
        4238,
        4319
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4697": {
      "fn": "Router.initialize",
      "offset": [
        4238,
        4319
      ],
      "op": "ADD",
      "path": "6"
    },
    "4698": {
      "fn": "Router.initialize",
      "offset": [
        4238,
        4319
      ],
      "op": "DUP5",
      "path": "6"
    },
    "4699": {
      "fn": "Router.initialize",
      "offset": [
        4238,
        4319
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4700": {
      "fn": "Router.initialize",
      "offset": [
        4238,
        4319
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4701": {
      "fn": "Router.initialize",
      "offset": [
        4238,
        4319
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4702": {
      "fn": "Router.initialize",
      "offset": [
        4238,
        4319
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4703": {
      "fn": "Router.initialize",
      "offset": [
        4238,
        4319
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "4704": {
      "fn": "Router.initialize",
      "offset": [
        4238,
        4319
      ],
      "op": "DUP3",
      "path": "6"
    },
    "4705": {
      "fn": "Router.initialize",
      "offset": [
        4238,
        4319
      ],
      "op": "ADD",
      "path": "6"
    },
    "4706": {
      "fn": "Router.initialize",
      "offset": [
        4238,
        4319
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4707": {
      "fn": "Router.initialize",
      "offset": [
        4238,
        4319
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4708": {
      "fn": "Router.initialize",
      "offset": [
        4238,
        4319
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4709": {
      "fn": "Router.initialize",
      "offset": [
        4238,
        4319
      ],
      "op": "ADD",
      "path": "6"
    },
    "4710": {
      "fn": "Router.initialize",
      "offset": [
        4270,
        4285
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x3"
    },
    "4712": {
      "fn": "Router.initialize",
      "offset": [
        4238,
        4319
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4713": {
      "fn": "Router.initialize",
      "offset": [
        4238,
        4319
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4714": {
      "offset": [
        660,
        662
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x12"
    },
    "4716": {
      "fn": "Router.initialize",
      "offset": [
        4238,
        4319
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "4718": {
      "fn": "Router.initialize",
      "offset": [
        4238,
        4319
      ],
      "op": "DUP3",
      "path": "6"
    },
    "4719": {
      "fn": "Router.initialize",
      "offset": [
        4238,
        4319
      ],
      "op": "ADD",
      "path": "6"
    },
    "4720": {
      "fn": "Router.initialize",
      "offset": [
        4238,
        4319
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4721": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4723": {
      "fn": "Router.initialize",
      "offset": [
        4238,
        4319
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4725": {
      "fn": "Router.initialize",
      "offset": [
        4238,
        4319
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "4726": {
      "fn": "Router.initialize",
      "offset": [
        4238,
        4319
      ],
      "op": "DUP3",
      "path": "6"
    },
    "4727": {
      "fn": "Router.initialize",
      "offset": [
        4238,
        4319
      ],
      "op": "ADD",
      "path": "6"
    },
    "4728": {
      "fn": "Router.initialize",
      "offset": [
        4238,
        4319
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4729": {
      "fn": "Router.initialize",
      "offset": [
        4238,
        4319
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4730": {
      "fn": "Router.initialize",
      "offset": [
        4238,
        4319
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4731": {
      "fn": "Router.initialize",
      "offset": [
        3985,
        4549
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4732": {
      "fn": "Router.initialize",
      "offset": [
        3985,
        4549
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "4733": {
      "fn": "Router.initialize",
      "offset": [
        3985,
        4549
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1296"
    },
    "4736": {
      "fn": "Router.initialize",
      "offset": [
        3985,
        4549
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "4737": {
      "fn": "Router.initialize",
      "offset": [
        3985,
        4549
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "4738": {
      "fn": "Router.initialize",
      "offset": [
        3985,
        4549
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "4739": {
      "op": "SWAP1"
    },
    "4740": {
      "op": "DUP2"
    },
    "4741": {
      "op": "SWAP1"
    },
    "4742": {
      "fn": "Router.initialize",
      "offset": [
        4400,
        4403
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x85"
    },
    "4744": {
      "fn": "Router.initialize",
      "offset": [
        4400,
        4403
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4745": {
      "fn": "Router.initialize",
      "offset": [
        4460,
        4462
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4B"
    },
    "4747": {
      "fn": "Router.initialize",
      "offset": [
        4460,
        4462
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4748": {
      "fn": "Router.initialize",
      "offset": [
        4500,
        4503
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x6C"
    },
    "4750": {
      "fn": "Router.initialize",
      "offset": [
        4500,
        4503
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4751": {
      "fn": "Router.initialize",
      "offset": [
        3985,
        4549
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x24"
    },
    "4753": {
      "fn": "Router.initialize",
      "offset": [
        3985,
        4549
      ],
      "op": "ADD",
      "path": "6"
    },
    "4754": {
      "fn": "Router.initialize",
      "offset": [
        3985,
        4549
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x14DE"
    },
    "4757": {
      "fn": "Router.initialize",
      "jump": "i",
      "offset": [
        3985,
        4549
      ],
      "op": "JUMP",
      "path": "6"
    },
    "4758": {
      "fn": "Router.initialize",
      "offset": [
        3985,
        4549
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4759": {
      "fn": "Router.initialize",
      "offset": [
        3985,
        4549
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4761": {
      "fn": "Router.initialize",
      "offset": [
        3985,
        4549
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4762": {
      "fn": "Router.initialize",
      "offset": [
        3985,
        4549
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "4763": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4765": {
      "op": "NOT"
    },
    "4766": {
      "fn": "Router.initialize",
      "offset": [
        3985,
        4549
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4767": {
      "fn": "Router.initialize",
      "offset": [
        3985,
        4549
      ],
      "op": "DUP5",
      "path": "6"
    },
    "4768": {
      "fn": "Router.initialize",
      "offset": [
        3985,
        4549
      ],
      "op": "SUB",
      "path": "6"
    },
    "4769": {
      "fn": "Router.initialize",
      "offset": [
        3985,
        4549
      ],
      "op": "ADD",
      "path": "6"
    },
    "4770": {
      "fn": "Router.initialize",
      "offset": [
        3985,
        4549
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4771": {
      "fn": "Router.initialize",
      "offset": [
        3985,
        4549
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4772": {
      "fn": "Router.initialize",
      "offset": [
        3985,
        4549
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "4773": {
      "fn": "Router.initialize",
      "offset": [
        3985,
        4549
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4774": {
      "fn": "Router.initialize",
      "offset": [
        3985,
        4549
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4775": {
      "fn": "Router.initialize",
      "offset": [
        3985,
        4549
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "4777": {
      "fn": "Router.initialize",
      "offset": [
        3985,
        4549
      ],
      "op": "DUP3",
      "path": "6"
    },
    "4778": {
      "fn": "Router.initialize",
      "offset": [
        3985,
        4549
      ],
      "op": "ADD",
      "path": "6"
    },
    "4779": {
      "fn": "Router.initialize",
      "offset": [
        3985,
        4549
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4780": {
      "fn": "Router.initialize",
      "offset": [
        3985,
        4549
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "4781": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4783": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4785": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4787": {
      "op": "SHL"
    },
    "4788": {
      "op": "SUB"
    },
    "4789": {
      "fn": "Router.initialize",
      "offset": [
        3985,
        4549
      ],
      "op": "AND",
      "path": "6"
    },
    "4790": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4792": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4794": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4796": {
      "op": "SHL"
    },
    "4797": {
      "op": "SUB"
    },
    "4798": {
      "op": "NOT"
    },
    "4799": {
      "fn": "Router.initialize",
      "offset": [
        3985,
        4549
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4800": {
      "fn": "Router.initialize",
      "offset": [
        3985,
        4549
      ],
      "op": "SWAP5",
      "path": "6"
    },
    "4801": {
      "fn": "Router.initialize",
      "offset": [
        3985,
        4549
      ],
      "op": "AND",
      "path": "6"
    },
    "4802": {
      "fn": "Router.initialize",
      "offset": [
        3985,
        4549
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "4803": {
      "fn": "Router.initialize",
      "offset": [
        3985,
        4549
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4804": {
      "fn": "Router.initialize",
      "offset": [
        3985,
        4549
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "4805": {
      "fn": "Router.initialize",
      "offset": [
        3985,
        4549
      ],
      "op": "OR",
      "path": "6"
    },
    "4806": {
      "fn": "Router.initialize",
      "offset": [
        3985,
        4549
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4807": {
      "fn": "Router.initialize",
      "offset": [
        3985,
        4549
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "4808": {
      "fn": "Router.initialize",
      "offset": [
        3985,
        4549
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4809": {
      "fn": "Router.initialize",
      "offset": [
        3935,
        4563
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4810": {
      "fn": "Router.initialize",
      "offset": [
        3935,
        4563
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "4811": {
      "fn": "Router.initialize",
      "offset": [
        3935,
        4563
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x12D4"
    },
    "4814": {
      "fn": "Router.initialize",
      "offset": [
        3935,
        4563
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "4815": {
      "fn": "Router.initialize",
      "offset": [
        3985,
        4549
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4816": {
      "fn": "Router.initialize",
      "offset": [
        3935,
        4563
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1491"
    },
    "4819": {
      "fn": "Router.initialize",
      "jump": "i",
      "offset": [
        3935,
        4563
      ],
      "op": "JUMP",
      "path": "6"
    },
    "4820": {
      "fn": "Router.initialize",
      "offset": [
        3935,
        4563
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4821": {
      "fn": "Router.initialize",
      "offset": [
        3935,
        4563
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "4823": {
      "fn": "Router.initialize",
      "offset": [
        3935,
        4563
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4825": {
      "fn": "Router.initialize",
      "offset": [
        3935,
        4563
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "4826": {
      "fn": "Router.initialize",
      "offset": [
        3935,
        4563
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4827": {
      "fn": "Router.initialize",
      "offset": [
        3935,
        4563
      ],
      "op": "DUP4",
      "path": "6"
    },
    "4828": {
      "fn": "Router.initialize",
      "offset": [
        3935,
        4563
      ],
      "op": "SUB",
      "path": "6"
    },
    "4829": {
      "fn": "Router.initialize",
      "offset": [
        3935,
        4563
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4830": {
      "fn": "Router.initialize",
      "offset": [
        3935,
        4563
      ],
      "op": "DUP6",
      "path": "6"
    },
    "4831": {
      "fn": "Router.initialize",
      "offset": [
        3935,
        4563
      ],
      "op": "GAS",
      "path": "6"
    },
    "4832": {
      "fn": "Router.initialize",
      "offset": [
        3935,
        4563
      ],
      "op": "DELEGATECALL",
      "path": "6"
    },
    "4833": {
      "fn": "Router.initialize",
      "offset": [
        3935,
        4563
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "4834": {
      "fn": "Router.initialize",
      "offset": [
        3935,
        4563
      ],
      "op": "POP",
      "path": "6"
    },
    "4835": {
      "fn": "Router.initialize",
      "offset": [
        3935,
        4563
      ],
      "op": "POP",
      "path": "6"
    },
    "4836": {
      "fn": "Router.initialize",
      "offset": [
        3935,
        4563
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "4837": {
      "fn": "Router.initialize",
      "offset": [
        3935,
        4563
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4838": {
      "fn": "Router.initialize",
      "offset": [
        3935,
        4563
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "4840": {
      "fn": "Router.initialize",
      "offset": [
        3935,
        4563
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4841": {
      "fn": "Router.initialize",
      "offset": [
        3935,
        4563
      ],
      "op": "EQ",
      "path": "6"
    },
    "4842": {
      "fn": "Router.initialize",
      "offset": [
        3935,
        4563
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x130F"
    },
    "4845": {
      "fn": "Router.initialize",
      "offset": [
        3935,
        4563
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "4846": {
      "fn": "Router.initialize",
      "offset": [
        3935,
        4563
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4848": {
      "fn": "Router.initialize",
      "offset": [
        3935,
        4563
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "4849": {
      "fn": "Router.initialize",
      "offset": [
        3935,
        4563
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "4850": {
      "fn": "Router.initialize",
      "offset": [
        3935,
        4563
      ],
      "op": "POP",
      "path": "6"
    },
    "4851": {
      "fn": "Router.initialize",
      "offset": [
        3935,
        4563
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "4853": {
      "fn": "Router.initialize",
      "offset": [
        3935,
        4563
      ],
      "op": "NOT",
      "path": "6"
    },
    "4854": {
      "fn": "Router.initialize",
      "offset": [
        3935,
        4563
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x3F"
    },
    "4856": {
      "fn": "Router.initialize",
      "offset": [
        3935,
        4563
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "4857": {
      "fn": "Router.initialize",
      "offset": [
        3935,
        4563
      ],
      "op": "ADD",
      "path": "6"
    },
    "4858": {
      "fn": "Router.initialize",
      "offset": [
        3935,
        4563
      ],
      "op": "AND",
      "path": "6"
    },
    "4859": {
      "fn": "Router.initialize",
      "offset": [
        3935,
        4563
      ],
      "op": "DUP3",
      "path": "6"
    },
    "4860": {
      "fn": "Router.initialize",
      "offset": [
        3935,
        4563
      ],
      "op": "ADD",
      "path": "6"
    },
    "4861": {
      "fn": "Router.initialize",
      "offset": [
        3935,
        4563
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4863": {
      "fn": "Router.initialize",
      "offset": [
        3935,
        4563
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4864": {
      "fn": "Router.initialize",
      "offset": [
        3935,
        4563
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "4865": {
      "fn": "Router.initialize",
      "offset": [
        3935,
        4563
      ],
      "op": "DUP3",
      "path": "6"
    },
    "4866": {
      "fn": "Router.initialize",
      "offset": [
        3935,
        4563
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4867": {
      "fn": "Router.initialize",
      "offset": [
        3935,
        4563
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "4868": {
      "fn": "Router.initialize",
      "offset": [
        3935,
        4563
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "4870": {
      "fn": "Router.initialize",
      "offset": [
        3935,
        4563
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "4872": {
      "fn": "Router.initialize",
      "offset": [
        3935,
        4563
      ],
      "op": "DUP5",
      "path": "6"
    },
    "4873": {
      "fn": "Router.initialize",
      "offset": [
        3935,
        4563
      ],
      "op": "ADD",
      "path": "6"
    },
    "4874": {
      "fn": "Router.initialize",
      "offset": [
        3935,
        4563
      ],
      "op": "RETURNDATACOPY",
      "path": "6"
    },
    "4875": {
      "fn": "Router.initialize",
      "offset": [
        3935,
        4563
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1314"
    },
    "4878": {
      "fn": "Router.initialize",
      "offset": [
        3935,
        4563
      ],
      "op": "JUMP",
      "path": "6"
    },
    "4879": {
      "fn": "Router.initialize",
      "offset": [
        3935,
        4563
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4880": {
      "fn": "Router.initialize",
      "offset": [
        3935,
        4563
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x60"
    },
    "4882": {
      "fn": "Router.initialize",
      "offset": [
        3935,
        4563
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "4883": {
      "fn": "Router.initialize",
      "offset": [
        3935,
        4563
      ],
      "op": "POP",
      "path": "6"
    },
    "4884": {
      "fn": "Router.initialize",
      "offset": [
        3935,
        4563
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4885": {
      "fn": "Router.initialize",
      "offset": [
        3935,
        4563
      ],
      "op": "POP",
      "path": "6"
    },
    "4886": {
      "fn": "Router.initialize",
      "offset": [
        3905,
        4563
      ],
      "op": "POP",
      "path": "6"
    },
    "4887": {
      "fn": "Router.initialize",
      "offset": [
        3905,
        4563
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4888": {
      "fn": "Router.initialize",
      "offset": [
        3905,
        4563
      ],
      "op": "POP",
      "path": "6"
    },
    "4889": {
      "branch": 122,
      "fn": "Router.initialize",
      "offset": [
        4581,
        4587
      ],
      "op": "DUP1",
      "path": "6",
      "statement": 16
    },
    "4890": {
      "fn": "Router.initialize",
      "offset": [
        4573,
        4588
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1322"
    },
    "4893": {
      "branch": 122,
      "fn": "Router.initialize",
      "offset": [
        4573,
        4588
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "4894": {
      "fn": "Router.initialize",
      "offset": [
        4573,
        4588
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "4896": {
      "fn": "Router.initialize",
      "offset": [
        4573,
        4588
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4897": {
      "fn": "Router.initialize",
      "offset": [
        4573,
        4588
      ],
      "op": "REVERT",
      "path": "6"
    },
    "4898": {
      "fn": "Router.initialize",
      "offset": [
        4573,
        4588
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4899": {
      "op": "POP"
    },
    "4900": {
      "fn": "Router.initialize",
      "offset": [
        4599,
        4604
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 17,
      "value": "0x0"
    },
    "4902": {
      "fn": "Router.initialize",
      "offset": [
        4599,
        4613
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4903": {
      "fn": "Router.initialize",
      "offset": [
        4599,
        4613
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "4904": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4906": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4908": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4910": {
      "op": "SHL"
    },
    "4911": {
      "op": "SUB"
    },
    "4912": {
      "fn": "Router.initialize",
      "offset": [
        4599,
        4613
      ],
      "op": "SWAP5",
      "path": "6"
    },
    "4913": {
      "fn": "Router.initialize",
      "offset": [
        4599,
        4613
      ],
      "op": "DUP6",
      "path": "6"
    },
    "4914": {
      "fn": "Router.initialize",
      "offset": [
        4599,
        4613
      ],
      "op": "AND",
      "path": "6"
    },
    "4915": {
      "fn": "Router.initialize",
      "offset": [
        4599,
        4613
      ],
      "op": "PUSH5",
      "path": "6",
      "value": "0x100000000"
    },
    "4921": {
      "fn": "Router.initialize",
      "offset": [
        4599,
        4613
      ],
      "op": "MUL",
      "path": "6"
    },
    "4922": {
      "op": "PUSH5",
      "value": "0x100000000"
    },
    "4928": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4930": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "4932": {
      "op": "SHL"
    },
    "4933": {
      "op": "SUB"
    },
    "4934": {
      "op": "NOT"
    },
    "4935": {
      "fn": "Router.initialize",
      "offset": [
        4599,
        4613
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4936": {
      "fn": "Router.initialize",
      "offset": [
        4599,
        4613
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "4937": {
      "fn": "Router.initialize",
      "offset": [
        4599,
        4613
      ],
      "op": "AND",
      "path": "6"
    },
    "4938": {
      "fn": "Router.initialize",
      "offset": [
        4599,
        4613
      ],
      "op": "OR",
      "path": "6"
    },
    "4939": {
      "fn": "Router.initialize",
      "offset": [
        4599,
        4613
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4940": {
      "fn": "Router.initialize",
      "offset": [
        4599,
        4613
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "4941": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4943": {
      "fn": "Router.initialize",
      "offset": [
        4697,
        4723
      ],
      "op": "DUP1",
      "path": "6",
      "statement": 18
    },
    "4944": {
      "fn": "Router.initialize",
      "offset": [
        4697,
        4723
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "4945": {
      "fn": "Router.initialize",
      "offset": [
        4697,
        4723
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "4946": {
      "fn": "Router.initialize",
      "offset": [
        4697,
        4723
      ],
      "op": "DUP5",
      "path": "6"
    },
    "4947": {
      "fn": "Router.initialize",
      "offset": [
        4697,
        4723
      ],
      "op": "AND",
      "path": "6"
    },
    "4948": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4950": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4952": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4954": {
      "op": "SHL"
    },
    "4955": {
      "op": "SUB"
    },
    "4956": {
      "op": "NOT"
    },
    "4957": {
      "fn": "Router.initialize",
      "offset": [
        4697,
        4723
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "4958": {
      "fn": "Router.initialize",
      "offset": [
        4697,
        4723
      ],
      "op": "DUP5",
      "path": "6"
    },
    "4959": {
      "fn": "Router.initialize",
      "offset": [
        4697,
        4723
      ],
      "op": "AND",
      "path": "6"
    },
    "4960": {
      "fn": "Router.initialize",
      "offset": [
        4697,
        4723
      ],
      "op": "OR",
      "path": "6"
    },
    "4961": {
      "fn": "Router.initialize",
      "offset": [
        4697,
        4723
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4962": {
      "fn": "Router.initialize",
      "offset": [
        4697,
        4723
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "4963": {
      "fn": "Router.initialize",
      "offset": [
        4733,
        4746
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 19,
      "value": "0x2"
    },
    "4965": {
      "fn": "Router.initialize",
      "offset": [
        4733,
        4763
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4966": {
      "fn": "Router.initialize",
      "offset": [
        4733,
        4763
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "4967": {
      "fn": "Router.initialize",
      "offset": [
        4733,
        4763
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "4968": {
      "fn": "Router.initialize",
      "offset": [
        4733,
        4763
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4969": {
      "fn": "Router.initialize",
      "offset": [
        4733,
        4763
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "4970": {
      "fn": "Router.initialize",
      "offset": [
        4733,
        4763
      ],
      "op": "AND",
      "path": "6"
    },
    "4971": {
      "fn": "Router.initialize",
      "offset": [
        4733,
        4763
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "4972": {
      "fn": "Router.initialize",
      "offset": [
        4733,
        4763
      ],
      "op": "AND",
      "path": "6"
    },
    "4973": {
      "fn": "Router.initialize",
      "offset": [
        4733,
        4763
      ],
      "op": "OR",
      "path": "6"
    },
    "4974": {
      "fn": "Router.initialize",
      "offset": [
        4733,
        4763
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4975": {
      "fn": "Router.initialize",
      "offset": [
        4733,
        4763
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "4976": {
      "fn": "Router.initialize",
      "jump": "o",
      "offset": [
        3377,
        4803
      ],
      "op": "JUMP",
      "path": "6"
    },
    "4977": {
      "offset": [
        1954,
        1991
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4978": {
      "fn": "Router.initialize",
      "offset": [
        1954,
        1991
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0x0"
    },
    "5011": {
      "fn": "Router.initialize",
      "offset": [
        1954,
        1991
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5012": {
      "fn": "Router.initialize",
      "jump": "o",
      "offset": [
        1954,
        1991
      ],
      "op": "JUMP",
      "path": "6"
    },
    "5013": {
      "offset": [
        1467,
        1509
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "5014": {
      "fn": "Router.initialize",
      "offset": [
        1467,
        1509
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0x0"
    },
    "5047": {
      "fn": "Router.initialize",
      "offset": [
        1467,
        1509
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5048": {
      "fn": "Router.initialize",
      "jump": "o",
      "offset": [
        1467,
        1509
      ],
      "op": "JUMP",
      "path": "6"
    },
    "5049": {
      "op": "JUMPDEST"
    },
    "5050": {
      "op": "DUP1"
    },
    "5051": {
      "op": "CALLDATALOAD"
    },
    "5052": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5054": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5056": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5058": {
      "op": "SHL"
    },
    "5059": {
      "op": "SUB"
    },
    "5060": {
      "op": "DUP2"
    },
    "5061": {
      "op": "AND"
    },
    "5062": {
      "op": "DUP2"
    },
    "5063": {
      "op": "EQ"
    },
    "5064": {
      "op": "PUSH2",
      "value": "0xF57"
    },
    "5067": {
      "op": "JUMPI"
    },
    "5068": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5070": {
      "op": "DUP1"
    },
    "5071": {
      "op": "REVERT"
    },
    "5072": {
      "op": "JUMPDEST"
    },
    "5073": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5075": {
      "op": "DUP1"
    },
    "5076": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5078": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5080": {
      "op": "DUP5"
    },
    "5081": {
      "op": "DUP7"
    },
    "5082": {
      "op": "SUB"
    },
    "5083": {
      "op": "SLT"
    },
    "5084": {
      "op": "ISZERO"
    },
    "5085": {
      "op": "PUSH2",
      "value": "0x13E4"
    },
    "5088": {
      "op": "JUMPI"
    },
    "5089": {
      "op": "DUP3"
    },
    "5090": {
      "op": "DUP4"
    },
    "5091": {
      "op": "REVERT"
    },
    "5092": {
      "op": "JUMPDEST"
    },
    "5093": {
      "op": "PUSH2",
      "value": "0x13ED"
    },
    "5096": {
      "op": "DUP5"
    },
    "5097": {
      "op": "PUSH2",
      "value": "0x13B9"
    },
    "5100": {
      "jump": "i",
      "op": "JUMP"
    },
    "5101": {
      "op": "JUMPDEST"
    },
    "5102": {
      "op": "SWAP3"
    },
    "5103": {
      "op": "POP"
    },
    "5104": {
      "op": "PUSH2",
      "value": "0x13FB"
    },
    "5107": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5109": {
      "op": "DUP6"
    },
    "5110": {
      "op": "ADD"
    },
    "5111": {
      "op": "PUSH2",
      "value": "0x13B9"
    },
    "5114": {
      "jump": "i",
      "op": "JUMP"
    },
    "5115": {
      "op": "JUMPDEST"
    },
    "5116": {
      "op": "SWAP2"
    },
    "5117": {
      "op": "POP"
    },
    "5118": {
      "op": "PUSH2",
      "value": "0x1409"
    },
    "5121": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5123": {
      "op": "DUP6"
    },
    "5124": {
      "op": "ADD"
    },
    "5125": {
      "op": "PUSH2",
      "value": "0x13B9"
    },
    "5128": {
      "jump": "i",
      "op": "JUMP"
    },
    "5129": {
      "op": "JUMPDEST"
    },
    "5130": {
      "op": "SWAP1"
    },
    "5131": {
      "op": "POP"
    },
    "5132": {
      "op": "SWAP3"
    },
    "5133": {
      "op": "POP"
    },
    "5134": {
      "op": "SWAP3"
    },
    "5135": {
      "op": "POP"
    },
    "5136": {
      "op": "SWAP3"
    },
    "5137": {
      "jump": "o",
      "op": "JUMP"
    },
    "5138": {
      "op": "JUMPDEST"
    },
    "5139": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5141": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5143": {
      "op": "DUP3"
    },
    "5144": {
      "op": "DUP5"
    },
    "5145": {
      "op": "SUB"
    },
    "5146": {
      "op": "SLT"
    },
    "5147": {
      "op": "ISZERO"
    },
    "5148": {
      "op": "PUSH2",
      "value": "0x1423"
    },
    "5151": {
      "op": "JUMPI"
    },
    "5152": {
      "op": "DUP1"
    },
    "5153": {
      "op": "DUP2"
    },
    "5154": {
      "op": "REVERT"
    },
    "5155": {
      "op": "JUMPDEST"
    },
    "5156": {
      "op": "DUP2"
    },
    "5157": {
      "op": "CALLDATALOAD"
    },
    "5158": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5160": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5162": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5164": {
      "op": "SHL"
    },
    "5165": {
      "op": "SUB"
    },
    "5166": {
      "op": "NOT"
    },
    "5167": {
      "op": "DUP2"
    },
    "5168": {
      "op": "AND"
    },
    "5169": {
      "op": "DUP2"
    },
    "5170": {
      "op": "EQ"
    },
    "5171": {
      "op": "PUSH2",
      "value": "0x143A"
    },
    "5174": {
      "op": "JUMPI"
    },
    "5175": {
      "op": "DUP2"
    },
    "5176": {
      "op": "DUP3"
    },
    "5177": {
      "op": "REVERT"
    },
    "5178": {
      "op": "JUMPDEST"
    },
    "5179": {
      "op": "SWAP4"
    },
    "5180": {
      "op": "SWAP3"
    },
    "5181": {
      "op": "POP"
    },
    "5182": {
      "op": "POP"
    },
    "5183": {
      "op": "POP"
    },
    "5184": {
      "jump": "o",
      "op": "JUMP"
    },
    "5185": {
      "op": "JUMPDEST"
    },
    "5186": {
      "op": "DUP1"
    },
    "5187": {
      "op": "MLOAD"
    },
    "5188": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5190": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5192": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5194": {
      "op": "SHL"
    },
    "5195": {
      "op": "SUB"
    },
    "5196": {
      "op": "AND"
    },
    "5197": {
      "op": "DUP3"
    },
    "5198": {
      "op": "MSTORE"
    },
    "5199": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5201": {
      "op": "DUP1"
    },
    "5202": {
      "op": "DUP3"
    },
    "5203": {
      "op": "ADD"
    },
    "5204": {
      "op": "MLOAD"
    },
    "5205": {
      "op": "ISZERO"
    },
    "5206": {
      "op": "ISZERO"
    },
    "5207": {
      "op": "SWAP1"
    },
    "5208": {
      "op": "DUP4"
    },
    "5209": {
      "op": "ADD"
    },
    "5210": {
      "op": "MSTORE"
    },
    "5211": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5213": {
      "op": "DUP2"
    },
    "5214": {
      "op": "ADD"
    },
    "5215": {
      "op": "MLOAD"
    },
    "5216": {
      "op": "PUSH1",
      "value": "0x6"
    },
    "5218": {
      "op": "DUP2"
    },
    "5219": {
      "op": "LT"
    },
    "5220": {
      "op": "PUSH2",
      "value": "0x1469"
    },
    "5223": {
      "op": "JUMPI"
    },
    "5224": {
      "op": "INVALID"
    },
    "5225": {
      "op": "JUMPDEST"
    },
    "5226": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5228": {
      "op": "DUP4"
    },
    "5229": {
      "op": "ADD"
    },
    "5230": {
      "op": "MSTORE"
    },
    "5231": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5233": {
      "op": "DUP2"
    },
    "5234": {
      "op": "DUP2"
    },
    "5235": {
      "op": "ADD"
    },
    "5236": {
      "op": "MLOAD"
    },
    "5237": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "5239": {
      "op": "AND"
    },
    "5240": {
      "op": "SWAP1"
    },
    "5241": {
      "op": "DUP4"
    },
    "5242": {
      "op": "ADD"
    },
    "5243": {
      "op": "MSTORE"
    },
    "5244": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5246": {
      "op": "SWAP1"
    },
    "5247": {
      "op": "DUP2"
    },
    "5248": {
      "op": "ADD"
    },
    "5249": {
      "op": "MLOAD"
    },
    "5250": {
      "op": "PUSH9",
      "value": "0xFFFFFFFFFFFFFFFFFF"
    },
    "5260": {
      "op": "AND"
    },
    "5261": {
      "op": "SWAP2"
    },
    "5262": {
      "op": "ADD"
    },
    "5263": {
      "op": "MSTORE"
    },
    "5264": {
      "jump": "o",
      "op": "JUMP"
    },
    "5265": {
      "op": "JUMPDEST"
    },
    "5266": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5268": {
      "op": "DUP3"
    },
    "5269": {
      "op": "MLOAD"
    },
    "5270": {
      "op": "DUP2"
    },
    "5271": {
      "op": "JUMPDEST"
    },
    "5272": {
      "op": "DUP2"
    },
    "5273": {
      "op": "DUP2"
    },
    "5274": {
      "op": "LT"
    },
    "5275": {
      "op": "ISZERO"
    },
    "5276": {
      "op": "PUSH2",
      "value": "0x14B1"
    },
    "5279": {
      "op": "JUMPI"
    },
    "5280": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5282": {
      "op": "DUP2"
    },
    "5283": {
      "op": "DUP7"
    },
    "5284": {
      "op": "ADD"
    },
    "5285": {
      "op": "DUP2"
    },
    "5286": {
      "op": "ADD"
    },
    "5287": {
      "op": "MLOAD"
    },
    "5288": {
      "op": "DUP6"
    },
    "5289": {
      "op": "DUP4"
    },
    "5290": {
      "op": "ADD"
    },
    "5291": {
      "op": "MSTORE"
    },
    "5292": {
      "op": "ADD"
    },
    "5293": {
      "op": "PUSH2",
      "value": "0x1497"
    },
    "5296": {
      "op": "JUMP"
    },
    "5297": {
      "op": "JUMPDEST"
    },
    "5298": {
      "op": "DUP2"
    },
    "5299": {
      "op": "DUP2"
    },
    "5300": {
      "op": "GT"
    },
    "5301": {
      "op": "ISZERO"
    },
    "5302": {
      "op": "PUSH2",
      "value": "0x14BF"
    },
    "5305": {
      "op": "JUMPI"
    },
    "5306": {
      "op": "DUP3"
    },
    "5307": {
      "op": "DUP3"
    },
    "5308": {
      "op": "DUP6"
    },
    "5309": {
      "op": "ADD"
    },
    "5310": {
      "op": "MSTORE"
    },
    "5311": {
      "op": "JUMPDEST"
    },
    "5312": {
      "op": "POP"
    },
    "5313": {
      "op": "SWAP2"
    },
    "5314": {
      "op": "SWAP1"
    },
    "5315": {
      "op": "SWAP2"
    },
    "5316": {
      "op": "ADD"
    },
    "5317": {
      "op": "SWAP3"
    },
    "5318": {
      "op": "SWAP2"
    },
    "5319": {
      "op": "POP"
    },
    "5320": {
      "op": "POP"
    },
    "5321": {
      "jump": "o",
      "op": "JUMP"
    },
    "5322": {
      "op": "JUMPDEST"
    },
    "5323": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5325": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5327": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5329": {
      "op": "SHL"
    },
    "5330": {
      "op": "SUB"
    },
    "5331": {
      "op": "SWAP2"
    },
    "5332": {
      "op": "SWAP1"
    },
    "5333": {
      "op": "SWAP2"
    },
    "5334": {
      "op": "AND"
    },
    "5335": {
      "op": "DUP2"
    },
    "5336": {
      "op": "MSTORE"
    },
    "5337": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5339": {
      "op": "ADD"
    },
    "5340": {
      "op": "SWAP1"
    },
    "5341": {
      "jump": "o",
      "op": "JUMP"
    },
    "5342": {
      "op": "JUMPDEST"
    },
    "5343": {
      "op": "PUSH2",
      "value": "0x1E0"
    },
    "5346": {
      "op": "DUP2"
    },
    "5347": {
      "op": "ADD"
    },
    "5348": {
      "op": "PUSH2",
      "value": "0x14ED"
    },
    "5351": {
      "op": "DUP3"
    },
    "5352": {
      "op": "DUP11"
    },
    "5353": {
      "op": "PUSH2",
      "value": "0x1441"
    },
    "5356": {
      "jump": "i",
      "op": "JUMP"
    },
    "5357": {
      "op": "JUMPDEST"
    },
    "5358": {
      "op": "PUSH2",
      "value": "0x14FA"
    },
    "5361": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5363": {
      "op": "DUP4"
    },
    "5364": {
      "op": "ADD"
    },
    "5365": {
      "op": "DUP10"
    },
    "5366": {
      "op": "PUSH2",
      "value": "0x1441"
    },
    "5369": {
      "jump": "i",
      "op": "JUMP"
    },
    "5370": {
      "op": "JUMPDEST"
    },
    "5371": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5373": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5375": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5377": {
      "op": "SHL"
    },
    "5378": {
      "op": "SUB"
    },
    "5379": {
      "op": "SWAP7"
    },
    "5380": {
      "op": "SWAP1"
    },
    "5381": {
      "op": "SWAP7"
    },
    "5382": {
      "op": "AND"
    },
    "5383": {
      "op": "PUSH2",
      "value": "0x140"
    },
    "5386": {
      "op": "DUP3"
    },
    "5387": {
      "op": "ADD"
    },
    "5388": {
      "op": "MSTORE"
    },
    "5389": {
      "op": "SWAP4"
    },
    "5390": {
      "op": "ISZERO"
    },
    "5391": {
      "op": "ISZERO"
    },
    "5392": {
      "op": "PUSH2",
      "value": "0x160"
    },
    "5395": {
      "op": "DUP6"
    },
    "5396": {
      "op": "ADD"
    },
    "5397": {
      "op": "MSTORE"
    },
    "5398": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "5400": {
      "op": "SWAP3"
    },
    "5401": {
      "op": "DUP4"
    },
    "5402": {
      "op": "AND"
    },
    "5403": {
      "op": "PUSH2",
      "value": "0x180"
    },
    "5406": {
      "op": "DUP6"
    },
    "5407": {
      "op": "ADD"
    },
    "5408": {
      "op": "MSTORE"
    },
    "5409": {
      "op": "SWAP1"
    },
    "5410": {
      "op": "DUP3"
    },
    "5411": {
      "op": "AND"
    },
    "5412": {
      "op": "PUSH2",
      "value": "0x1A0"
    },
    "5415": {
      "op": "DUP5"
    },
    "5416": {
      "op": "ADD"
    },
    "5417": {
      "op": "MSTORE"
    },
    "5418": {
      "op": "AND"
    },
    "5419": {
      "op": "PUSH2",
      "value": "0x1C0"
    },
    "5422": {
      "op": "SWAP1"
    },
    "5423": {
      "op": "SWAP2"
    },
    "5424": {
      "op": "ADD"
    },
    "5425": {
      "op": "MSTORE"
    },
    "5426": {
      "op": "SWAP3"
    },
    "5427": {
      "op": "SWAP2"
    },
    "5428": {
      "op": "POP"
    },
    "5429": {
      "op": "POP"
    },
    "5430": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "8657b7960c0dc665b7d6c49d8c66b82c3c3fde91",
  "source": "// SPDX-License-Identifier: GPL-3.0-only\npragma solidity =0.7.6;\npragma abicoder v2;\n\nimport \"./actions/nTokenMintAction.sol\";\nimport \"../global/StorageLayoutV1.sol\";\nimport \"../global/Types.sol\";\nimport {INTokenAction} from \"../../interfaces/notional/INTokenAction.sol\";\nimport \"../../interfaces/notional/NotionalProxy.sol\";\nimport {IVaultAction, IVaultAccountAction} from \"../../interfaces/notional/IVaultController.sol\";\nimport {nERC1155Interface} from \"../../interfaces/notional/nERC1155Interface.sol\";\nimport {NotionalGovernance} from \"../../interfaces/notional/NotionalGovernance.sol\";\nimport {NotionalCalculations} from \"../../interfaces/notional/NotionalCalculations.sol\";\n\n/**\n * @notice Sits behind an upgradeable proxy and routes methods to an appropriate implementation contract. All storage\n * will sit inside the upgradeable proxy and this router will authorize the call and re-route the calls to implementing\n * contracts.\n *\n * This pattern adds an additional hop between the proxy and the ultimate implementation contract, however, it also\n * allows for atomic upgrades of the entire system. Individual implementation contracts will be deployed and then a\n * new Router with the new hardcoded addresses will then be deployed and upgraded into place.\n */\ncontract Router is StorageLayoutV1 {\n    // These contract addresses cannot be changed once set by the constructor\n    address public immutable GOVERNANCE;\n    address public immutable VIEWS;\n    address public immutable INITIALIZE_MARKET;\n    address public immutable NTOKEN_ACTIONS;\n    address public immutable BATCH_ACTION;\n    address public immutable ACCOUNT_ACTION;\n    address public immutable ERC1155;\n    address public immutable LIQUIDATE_CURRENCY;\n    address public immutable LIQUIDATE_FCASH;\n    address public immutable cETH;\n    address public immutable TREASURY;\n    address public immutable CALCULATION_VIEWS;\n    address public immutable VAULT_ACCOUNT_ACTION;\n    address public immutable VAULT_ACTION;\n    address private immutable DEPLOYER;\n\n    struct DeployedContracts {\n        address governance;\n        address views;\n        address initializeMarket;\n        address nTokenActions;\n        address batchAction;\n        address accountAction;\n        address erc1155;\n        address liquidateCurrency;\n        address liquidatefCash;\n        address cETH;\n        address treasury;\n        address calculationViews;\n        address vaultAccountAction;\n        address vaultAction;\n    }\n\n    constructor(\n        DeployedContracts memory contracts\n    ) {\n        GOVERNANCE = contracts.governance;\n        VIEWS = contracts.views;\n        INITIALIZE_MARKET = contracts.initializeMarket;\n        NTOKEN_ACTIONS = contracts.nTokenActions;\n        BATCH_ACTION = contracts.batchAction;\n        ACCOUNT_ACTION = contracts.accountAction;\n        ERC1155 = contracts.erc1155;\n        LIQUIDATE_CURRENCY = contracts.liquidateCurrency;\n        LIQUIDATE_FCASH = contracts.liquidatefCash;\n        cETH = contracts.cETH;\n        TREASURY = contracts.treasury;\n        CALCULATION_VIEWS = contracts.calculationViews;\n        VAULT_ACCOUNT_ACTION = contracts.vaultAccountAction;\n        VAULT_ACTION = contracts.vaultAction;\n\n        DEPLOYER = msg.sender;\n        // This will lock everyone from calling initialize on the implementation contract\n        hasInitialized = true;\n    }\n\n    function initialize(address owner_, address pauseRouter_, address pauseGuardian_) public {\n        // Check that only the deployer can initialize\n        require(msg.sender == DEPLOYER && !hasInitialized);\n\n        // Allow list currency to be called by this contract for the purposes of\n        // initializing ETH as a currency\n        owner = msg.sender;\n        // List ETH as currency id == 1, NOTE: return value is ignored here\n\n        // FIXME: on non-mainnet deployments we should be using WETH instead here...\n        (bool status, ) =\n            address(GOVERNANCE).delegatecall(\n                abi.encodeWithSelector(\n                    NotionalGovernance.listCurrency.selector,\n                    TokenStorage(cETH, false, TokenType.cETH, Constants.CETH_DECIMAL_PLACES, 0),\n                    // No underlying set for cETH\n                    TokenStorage(address(0), false, TokenType.Ether, Constants.ETH_DECIMAL_PLACES, 0),\n                    address(0),\n                    false,\n                    133, // Initial settings of 133% buffer\n                    75,  // 75% haircut\n                    108  // 8% liquidation discount\n                )\n            );\n        require(status);\n\n        owner = owner_;\n        // The pause guardian may downgrade the router to the pauseRouter\n        pauseRouter = pauseRouter_;\n        pauseGuardian = pauseGuardian_;\n\n        hasInitialized == true;\n    }\n\n    /// @notice Returns the implementation contract for the method signature\n    /// @param sig method signature to call\n    /// @return implementation address\n    function getRouterImplementation(bytes4 sig) public view returns (address) {\n        if (\n            sig == NotionalProxy.batchBalanceAction.selector ||\n            sig == NotionalProxy.batchBalanceAndTradeAction.selector ||\n            sig == NotionalProxy.batchBalanceAndTradeActionWithCallback.selector ||\n            sig == NotionalProxy.batchLend.selector\n        ) {\n            return BATCH_ACTION;\n        } else if (\n            sig == IVaultAccountAction.enterVault.selector ||\n            sig == IVaultAccountAction.rollVaultPosition.selector ||\n            sig == IVaultAccountAction.exitVault.selector ||\n            sig == IVaultAccountAction.deleverageAccount.selector ||\n            sig == IVaultAccountAction.getVaultAccount.selector ||\n            sig == IVaultAccountAction.getVaultAccountDebtShares.selector ||\n            sig == IVaultAccountAction.getVaultAccountCollateralRatio.selector\n        ) {\n            return VAULT_ACCOUNT_ACTION;\n        } else if (\n            sig == NotionalProxy.depositUnderlyingToken.selector ||\n            sig == NotionalProxy.depositAssetToken.selector ||\n            sig == NotionalProxy.withdraw.selector ||\n            sig == NotionalProxy.settleAccount.selector ||\n            sig == NotionalProxy.nTokenRedeem.selector ||\n            sig == NotionalProxy.enableBitmapCurrency.selector\n        ) {\n            return ACCOUNT_ACTION;\n        } else if (\n            sig == nERC1155Interface.supportsInterface.selector ||\n            sig == nERC1155Interface.balanceOf.selector ||\n            sig == nERC1155Interface.balanceOfBatch.selector ||\n            sig == nERC1155Interface.signedBalanceOf.selector ||\n            sig == nERC1155Interface.signedBalanceOfBatch.selector ||\n            sig == nERC1155Interface.safeTransferFrom.selector ||\n            sig == nERC1155Interface.safeBatchTransferFrom.selector ||\n            sig == nERC1155Interface.decodeToAssets.selector ||\n            sig == nERC1155Interface.encodeToId.selector ||\n            sig == nERC1155Interface.setApprovalForAll.selector ||\n            sig == nERC1155Interface.isApprovedForAll.selector\n        ) {\n            return ERC1155;\n        } else if (\n            sig == INTokenAction.nTokenTotalSupply.selector ||\n            sig == INTokenAction.nTokenTransferAllowance.selector ||\n            sig == INTokenAction.nTokenBalanceOf.selector ||\n            sig == INTokenAction.nTokenTransferApprove.selector ||\n            sig == INTokenAction.nTokenTransfer.selector ||\n            sig == INTokenAction.nTokenTransferFrom.selector ||\n            sig == INTokenAction.nTokenTransferApproveAll.selector ||\n            sig == INTokenAction.nTokenClaimIncentives.selector ||\n            sig == INTokenAction.nTokenPresentValueAssetDenominated.selector ||\n            sig == INTokenAction.nTokenPresentValueUnderlyingDenominated.selector ||\n            sig == INTokenAction.nTokenPresentValueUnderlyingExternal.selector ||\n            sig == INTokenAction.nTokenRedeemViaProxy.selector ||\n            sig == INTokenAction.nTokenMintViaProxy.selector\n        ) {\n            return NTOKEN_ACTIONS;\n        } else if (\n            sig == NotionalProxy.liquidateLocalCurrency.selector ||\n            sig == NotionalProxy.liquidateCollateralCurrency.selector ||\n            sig == NotionalProxy.calculateLocalCurrencyLiquidation.selector ||\n            sig == NotionalProxy.calculateCollateralCurrencyLiquidation.selector\n        ) {\n            return LIQUIDATE_CURRENCY;\n        } else if (\n            sig == NotionalProxy.liquidatefCashLocal.selector ||\n            sig == NotionalProxy.liquidatefCashCrossCurrency.selector ||\n            sig == NotionalProxy.calculatefCashLocalLiquidation.selector ||\n            sig == NotionalProxy.calculatefCashCrossCurrencyLiquidation.selector\n        ) {\n            return LIQUIDATE_FCASH;\n        } else if (\n            sig == IVaultAction.updateVault.selector ||\n            sig == IVaultAction.setVaultPauseStatus.selector ||\n            sig == IVaultAction.reduceMaxBorrowCapacity.selector ||\n            sig == IVaultAction.updateSecondaryBorrowCapacity.selector ||\n            sig == IVaultAction.depositVaultCashToStrategyTokens.selector ||\n            sig == IVaultAction.redeemStrategyTokensToCash.selector ||\n            sig == IVaultAction.borrowSecondaryCurrencyToVault.selector ||\n            sig == IVaultAction.repaySecondaryCurrencyFromVault.selector ||\n            sig == IVaultAction.initiateSecondaryBorrowSettlement.selector ||\n            sig == IVaultAction.settleVault.selector ||\n            sig == IVaultAction.getVaultConfig.selector ||\n            sig == IVaultAction.getBorrowCapacity.selector ||\n            sig == IVaultAction.getSecondaryBorrow.selector ||\n            sig == IVaultAction.getVaultState.selector ||\n            sig == IVaultAction.getCashRequiredToSettle.selector\n        ) {\n            return VAULT_ACTION;\n        } else if (\n            sig == NotionalProxy.initializeMarkets.selector ||\n            sig == NotionalProxy.sweepCashIntoMarkets.selector\n        ) {\n            return INITIALIZE_MARKET;\n        } else if (\n            sig == NotionalGovernance.listCurrency.selector ||\n            sig == NotionalGovernance.enableCashGroup.selector ||\n            sig == NotionalGovernance.updateCashGroup.selector ||\n            sig == NotionalGovernance.updateAssetRate.selector ||\n            sig == NotionalGovernance.updateETHRate.selector ||\n            sig == NotionalGovernance.transferOwnership.selector ||\n            sig == NotionalGovernance.claimOwnership.selector ||\n            sig == NotionalGovernance.updateIncentiveEmissionRate.selector ||\n            sig == NotionalGovernance.updateMaxCollateralBalance.selector ||\n            sig == NotionalGovernance.updateDepositParameters.selector ||\n            sig == NotionalGovernance.updateInitializationParameters.selector ||\n            sig == NotionalGovernance.updateTokenCollateralParameters.selector ||\n            sig == NotionalGovernance.updateGlobalTransferOperator.selector ||\n            sig == NotionalGovernance.updateAuthorizedCallbackContract.selector ||\n            sig == NotionalGovernance.setLendingPool.selector ||\n            sig == NotionalGovernance.upgradeNTokenBeacon.selector ||\n            sig == NotionalProxy.upgradeTo.selector ||\n            sig == NotionalProxy.upgradeToAndCall.selector\n        ) {\n            return GOVERNANCE;\n        } else if (\n            sig == NotionalTreasury.claimCOMPAndTransfer.selector ||\n            sig == NotionalTreasury.transferReserveToTreasury.selector ||\n            sig == NotionalTreasury.setTreasuryManager.selector ||\n            sig == NotionalTreasury.setReserveBuffer.selector ||\n            sig == NotionalTreasury.setReserveCashBalance.selector\n        ) {\n            return TREASURY;\n        } else if (\n            sig == NotionalCalculations.calculateNTokensToMint.selector ||\n            sig == NotionalCalculations.getfCashAmountGivenCashAmount.selector ||\n            sig == NotionalCalculations.getCashAmountGivenfCashAmount.selector ||\n            sig == NotionalCalculations.nTokenGetClaimableIncentives.selector ||\n            sig == NotionalCalculations.getPresentfCashValue.selector ||\n            sig == NotionalCalculations.getMarketIndex.selector ||\n            sig == NotionalCalculations.getfCashLendFromDeposit.selector ||\n            sig == NotionalCalculations.getfCashBorrowFromPrincipal.selector ||\n            sig == NotionalCalculations.getDepositFromfCashLend.selector ||\n            sig == NotionalCalculations.getPrincipalFromfCashBorrow.selector ||\n            sig == NotionalCalculations.convertCashBalanceToExternal.selector\n        ) {\n            return CALCULATION_VIEWS;\n        } else {\n            // If not found then delegate to views. This will revert if there is no method on\n            // the view contract\n            return VIEWS;\n        }\n    }\n\n    /// @dev Delegates the current call to `implementation`.\n    /// This function does not return to its internal call site, it will return directly to the external caller.\n    function _delegate(address implementation) private {\n        // solhint-disable-next-line no-inline-assembly\n        assembly {\n            // Copy msg.data. We take full control of memory in this inline assembly\n            // block because it will not return to Solidity code. We overwrite the\n            // Solidity scratch pad at memory position 0.\n            calldatacopy(0, 0, calldatasize())\n\n            // Call the implementation.\n            // out and outsize are 0 because we don't know the size yet.\n            let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0)\n\n            // Copy the returned data.\n            returndatacopy(0, 0, returndatasize())\n\n            switch result\n                // delegatecall returns 0 on error.\n                case 0 {\n                    revert(0, returndatasize())\n                }\n                default {\n                    return(0, returndatasize())\n                }\n        }\n    }\n\n    fallback() external payable {\n        _delegate(getRouterImplementation(msg.sig));\n    }\n\n    // NOTE: receive() is overridden in \"nProxy\" to allow for eth transfers to succeed\n}\n",
  "sourceMap": "1271:12996:6:-:0;;;2491:880;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2576:20;;-1:-1:-1;;;;;;2563:33:6;;;;;;;;;;2614:15;;;;2606:23;;;;;;;;2659:26;;;;2639:46;;;;;;;;2712:23;;;;2695:40;;;;;;;;2760:21;;;;2745:36;;;;;;;;2808:23;;;;2791:40;;;;;;;;2851:17;;;;2841:27;;;;;;;;2899;;;;2878:48;;;;;;;;2954:24;;;;2936:42;;;;;;;;2995:14;;;;2988:21;;;;;;;;3030:18;;;;3019:29;;;;;;3078:26;;;;3058:46;;;;;;3137:28;;;3114:51;;;;;;3190:21;;;;3175:36;;;;;;;3233:10;3222:21;;;;2576:20;3343:21;;-1:-1:-1;;3343:21:6;;;;;1271:12996;;14:179:69;95:13;;-1:-1:-1;;;;;137:31:69;;127:42;;117:2;;183:1;180;173:12;117:2;76:117;;;:::o;198:1576::-;;332:3;376:2;364:9;355:7;351:23;347:32;344:2;;;397:6;389;382:22;344:2;428:18;443:2;428:18;:::i;:::-;415:31;;469:42;501:9;469:42;:::i;:::-;462:5;455:57;544:51;591:2;580:9;576:18;544:51;:::i;:::-;539:2;532:5;528:14;521:75;628:51;675:2;664:9;660:18;628:51;:::i;:::-;623:2;616:5;612:14;605:75;712:51;759:2;748:9;744:18;712:51;:::i;:::-;707:2;700:5;696:14;689:75;797:52;844:3;833:9;829:19;797:52;:::i;:::-;791:3;784:5;780:15;773:77;883:52;930:3;919:9;915:19;883:52;:::i;:::-;877:3;870:5;866:15;859:77;969:52;1016:3;1005:9;1001:19;969:52;:::i;:::-;963:3;956:5;952:15;945:77;1055:52;1102:3;1091:9;1087:19;1055:52;:::i;:::-;1049:3;1042:5;1038:15;1031:77;1127:3;1162:51;1209:2;1198:9;1194:18;1162:51;:::i;:::-;1146:14;;;1139:75;1233:3;1268:51;1300:18;;;1268:51;:::i;:::-;1252:14;;;1245:75;1339:3;1374:51;1406:18;;;1374:51;:::i;:::-;1358:14;;;1351:75;1445:3;1480:51;1512:18;;;1480:51;:::i;:::-;1464:14;;;1457:75;1551:3;1586:51;1618:18;;;1586:51;:::i;:::-;1570:14;;;1563:75;1657:3;1692:51;1724:18;;;1692:51;:::i;:::-;1676:14;;;1669:75;1680:5;312:1462;-1:-1:-1;;;312:1462:69:o;1779:242::-;1849:2;1843:9;1879:17;;;-1:-1:-1;;;;;1911:34:69;;1947:22;;;1908:62;1905:2;;;1973:9;1905:2;2000;1993:22;1823:198;;-1:-1:-1;1823:198:69:o;:::-;1271:12996:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/external/Router.sol",
  "type": "contract"
}